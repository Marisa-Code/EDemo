#include <codegen/il2cpp-codegen-metadata.h>
#if HYBRIDCLR_UNITY_2023_OR_NEW
#include <codegen/il2cpp-codegen.h>
#elif HYBRIDCLR_UNITY_2022
#include <codegen/il2cpp-codegen-il2cpp.h>
#elif HYBRIDCLR_UNITY_2020 || HYBRIDCLR_UNITY_2021
#include <codegen/il2cpp-codegen-common-big.h>
#else
#include <codegen/il2cpp-codegen-common.h>
#endif

#include "vm/ClassInlines.h"
#include "vm/Object.h"
#include "vm/Class.h"
#include "vm/ScopedThreadAttacher.h"

#include "../metadata/MetadataUtil.h"


#include "../interpreter/InterpreterModule.h"
#include "../interpreter/MethodBridge.h"
#include "../interpreter/Interpreter.h"
#include "../interpreter/MemoryUtil.h"
#include "../interpreter/InstrinctDef.h"

using namespace hybridclr::interpreter;
using namespace hybridclr::metadata;

//!!!{{CODE


// DEVELOPMENT=0


// GameFramework.FileSystem.FileInfo
struct __struct_0__ {
	uintptr_t __0; // m_Name
	int64_t __1; // m_Offset
	int32_t __2; // m_Length
};
// GameFramework.FileSystem.FileSystem/BlockData
struct __struct_1__ {
	int32_t __0; // m_StringIndex
	int32_t __1; // m_ClusterIndex
	int32_t __2; // m_Length
};
// GameFramework.FileSystem.FileSystem/HeaderData
struct __struct_2__ {
	uintptr_t __0; // m_Header
	uint8_t __1; // m_Version
	uintptr_t __2; // m_EncryptBytes
	int32_t __3; // m_MaxFileCount
	int32_t __4; // m_MaxBlockCount
	int32_t __5; // m_BlockCount
};
// GameFramework.FileSystem.FileSystem/StringData
struct __struct_3__ {
	uint8_t __0; // m_Length
	uintptr_t __1; // m_Bytes
};
// GameFramework.GameFrameworkLinkedListRange`1<System.Int32>
struct __struct_6__ {
	uintptr_t __0; // m_First
	uintptr_t __1; // m_Terminal
};
// GameFramework.GameFrameworkLinkedListRange`1/Enumerator<System.Int32>
struct __struct_4__ {
	__struct_6__ __0; // m_GameFrameworkLinkedListRange
	uintptr_t __1; // m_Current
	int32_t __2; // m_CurrentValue
};
// GameFramework.GameFrameworkLinkedListRange`1/Enumerator<System.Object>
struct __struct_5__ {
	__struct_6__ __0; // m_GameFrameworkLinkedListRange
	uintptr_t __1; // m_Current
	uintptr_t __2; // m_CurrentValue
};
// System.Collections.Generic.LinkedList`1/Enumerator<System.Int32>
struct __struct_384__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	int32_t __3; // _current
	int32_t __4; // _index
};
// GameFramework.GameFrameworkLinkedList`1/Enumerator<System.Int32>
struct __struct_8__ {
	__struct_384__ __0; // m_Enumerator
};
// System.Collections.Generic.LinkedList`1/Enumerator<System.Object>
struct __struct_385__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	uintptr_t __3; // _current
	int32_t __4; // _index
};
// GameFramework.GameFrameworkLinkedList`1/Enumerator<System.Object>
struct __struct_9__ {
	__struct_385__ __0; // m_Enumerator
};
// System.DateTime
struct __struct_30__ {
	uint64_t __0; // _dateData
};
// UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo
struct __struct_26__ {
	uintptr_t __0; // m_AssetName
	uintptr_t __1; // m_AssetType
	int32_t __2; // m_Priority
	__struct_30__ __3; // m_StartTime
	float __4; // m_DelaySeconds
	uintptr_t __5; // m_LoadAssetCallbacks
	uintptr_t __6; // m_UserData
};
// System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo>
struct __struct_386__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	__struct_26__ __3; // _current
	int32_t __4; // _index
};
// GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo>
struct __struct_10__ {
	__struct_386__ __0; // m_Enumerator
};
// UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo
struct __struct_27__ {
	uintptr_t __0; // m_AsyncOperation
	uintptr_t __1; // m_SceneAssetName
	int32_t __2; // m_Priority
	__struct_30__ __3; // m_StartTime
	uintptr_t __4; // m_LoadSceneCallbacks
	uintptr_t __5; // m_UserData
};
// System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo>
struct __struct_387__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	__struct_27__ __3; // _current
	int32_t __4; // _index
};
// GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo>
struct __struct_11__ {
	__struct_387__ __0; // m_Enumerator
};
// UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo
struct __struct_28__ {
	uintptr_t __0; // m_AsyncOperation
	uintptr_t __1; // m_SceneAssetName
	uintptr_t __2; // m_UnloadSceneCallbacks
	uintptr_t __3; // m_UserData
};
// System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo>
struct __struct_388__ {
	uintptr_t __0; // _list
	uintptr_t __1; // _node
	int32_t __2; // _version
	__struct_28__ __3; // _current
	int32_t __4; // _index
};
// GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo>
struct __struct_12__ {
	__struct_388__ __0; // m_Enumerator
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,GameFramework.GameFrameworkLinkedListRange`1<System.Int32>>
struct __struct_48__ {
	int32_t __0; // key
	__struct_6__ __1; // value
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,GameFramework.GameFrameworkLinkedListRange`1<System.Int32>>
struct __struct_327__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_48__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// GameFramework.GameFrameworkMultiDictionary`2/Enumerator<System.Int32,System.Int32>
struct __struct_13__ {
	__struct_327__ __0; // m_Enumerator
};
// System.Collections.Generic.KeyValuePair`2<System.Object,GameFramework.GameFrameworkLinkedListRange`1<System.Object>>
struct __struct_55__ {
	uintptr_t __0; // key
	__struct_6__ __1; // value
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,GameFramework.GameFrameworkLinkedListRange`1<System.Object>>
struct __struct_334__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_55__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// GameFramework.GameFrameworkMultiDictionary`2/Enumerator<System.Object,System.Object>
struct __struct_15__ {
	__struct_334__ __0; // m_Enumerator
};
// GameFramework.Resource.LocalVersionList
struct __struct_16__ {
	uint8_t __0; // m_IsValid
	uintptr_t __1; // m_Resources
	uintptr_t __2; // m_FileSystems
};
// GameFramework.Resource.PackageVersionList
struct __struct_17__ {
	uint8_t __0; // m_IsValid
	uintptr_t __1; // m_ApplicableGameVersion
	int32_t __2; // m_InternalResourceVersion
	uintptr_t __3; // m_Assets
	uintptr_t __4; // m_Resources
	uintptr_t __5; // m_FileSystems
	uintptr_t __6; // m_ResourceGroups
};
// GameFramework.Resource.ResourcePackVersionList
struct __struct_19__ {
	uint8_t __0; // m_IsValid
	int32_t __1; // m_Offset
	int64_t __2; // m_Length
	int32_t __3; // m_HashCode
	uintptr_t __4; // m_Resources
};
// GameFramework.TaskInfo
struct __struct_21__ {
	uint8_t __0; // m_IsValid
	int32_t __1; // m_SerialId
	uintptr_t __2; // m_Tag
	int32_t __3; // m_Priority
	uintptr_t __4; // m_UserData
	uint8_t __5; // m_Status
	uintptr_t __6; // m_Description
};
// System.ArraySegment`1/Enumerator<System.Byte>
struct __struct_22__ {
	uintptr_t __0; // _array
	int32_t __1; // _start
	int32_t __2; // _end
	int32_t __3; // _current
};
// System.ArraySegment`1<System.Byte>
struct __struct_24__ {
	uintptr_t __0; // _array
	int32_t __1; // _offset
	int32_t __2; // _count
};
// System.ByReference`1<System.Byte>
struct __struct_763__ {
	intptr_t __0; // _value
};
// System.Span`1<System.Byte>
struct __struct_31__ {
	__struct_763__ __0; // _pointer
	int32_t __1; // _length
};
// System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>
struct __struct_34__ {
	uintptr_t __0; // key
	uintptr_t __1; // value
};
// System.Guid
struct __struct_35__ {
	int32_t __0; // _a
	int16_t __1; // _b
	int16_t __2; // _c
	uint8_t __3; // _d
	uint8_t __4; // _e
	uint8_t __5; // _f
	uint8_t __6; // _g
	uint8_t __7; // _h
	uint8_t __8; // _i
	uint8_t __9; // _j
	uint8_t __10; // _k
};
// System.Text.RegularExpressions.Regex/CachedCodeEntryKey
struct __struct_36__ {
	int32_t __0; // _options
	uintptr_t __1; // _cultureKey
	uintptr_t __2; // _pattern
};
// UnityEngine.TerrainUtils.TerrainTileCoord
struct __struct_38__ {
	int32_t __0; // tileX
	int32_t __1; // tileZ
};
// UnityEngine.RenderInstancedDataLayout
struct __struct_39__ {
	int32_t __0; // <size>k__BackingField
	int32_t __1; // <offsetObjectToWorld>k__BackingField
	int32_t __2; // <offsetPrevObjectToWorld>k__BackingField
	int32_t __3; // <offsetRenderingLayerMask>k__BackingField
};
// UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite
struct __struct_40__ {
	uintptr_t __0; // category
	uintptr_t __1; // entry
	uintptr_t __2; // sprite
};
// GameFramework.Config.ConfigManager/ConfigData
struct __struct_41__ {
	uint8_t __0; // m_BoolValue
	int32_t __1; // m_IntValue
	float __2; // m_FloatValue
	uintptr_t __3; // m_StringValue
};
// System.Resources.ResourceLocator
struct __struct_42__ {
	uintptr_t __0; // _value
	int32_t __1; // _dataPos
};
// YooAsset.DebugBundleInfo
struct __struct_43__ {
	uintptr_t __0; // BundleName
	int32_t __1; // RefCount
	uintptr_t __2; // Status
	uintptr_t __3; // ReferenceBundles
};
// System.Collections.Generic.KeyValuePair`2<GameFramework.Resource.ResourceManager/ResourceName,System.Object>
struct __struct_44__ {
	__struct_28__ __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<GameFramework.TypeNamePair,System.Object>
struct __struct_45__ {
	__struct_6__ __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Guid,System.Object>
struct __struct_47__ {
	__struct_35__ __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,System.Object>
struct __struct_51__ {
	int32_t __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,UnityEngine.RenderInstancedDataLayout>
struct __struct_52__ {
	int32_t __0; // key
	__struct_39__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>
struct __struct_53__ {
	int32_t __0; // key
	__struct_40__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Object,GameFramework.Config.ConfigManager/ConfigData>
struct __struct_54__ {
	uintptr_t __0; // key
	__struct_41__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Object,System.Resources.ResourceLocator>
struct __struct_57__ {
	uintptr_t __0; // key
	__struct_42__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Object,YooAsset.DebugBundleInfo>
struct __struct_58__ {
	uintptr_t __0; // key
	__struct_43__ __1; // value
};
// System.Collections.Generic.KeyValuePair`2<System.Text.RegularExpressions.Regex/CachedCodeEntryKey,System.Object>
struct __struct_59__ {
	__struct_36__ __0; // key
	uintptr_t __1; // value
};
// System.Collections.Generic.KeyValuePair`2<UnityEngine.TerrainUtils.TerrainTileCoord,System.Object>
struct __struct_61__ {
	__struct_38__ __0; // key
	uintptr_t __1; // value
};
// GameFramework.ObjectPool.ObjectInfo
struct __struct_62__ {
	uintptr_t __0; // m_Name
	uint8_t __1; // m_Locked
	uint8_t __2; // m_CustomCanReleaseFlag
	int32_t __3; // m_Priority
	__struct_30__ __4; // m_LastUseTime
	int32_t __5; // m_SpawnCount
};
// GameFramework.ReferencePoolInfo
struct __struct_63__ {
	uintptr_t __0; // m_Type
	int32_t __1; // m_UnusedReferenceCount
	int32_t __2; // m_UsingReferenceCount
	int32_t __3; // m_AcquireReferenceCount
	int32_t __4; // m_ReleaseReferenceCount
	int32_t __5; // m_AddReferenceCount
	int32_t __6; // m_RemoveReferenceCount
};
// GameFramework.Resource.ResourceManager/ReadWriteResourceInfo
struct __struct_64__ {
	uintptr_t __0; // m_FileSystemName
	uint8_t __1; // m_LoadType
	int32_t __2; // m_Length
	int32_t __3; // m_HashCode
};
// GameFramework.Resource.ResourceManager/ResourceUpdater/ApplyInfo
struct __struct_65__ {
	__struct_28__ __0; // m_ResourceName
	uintptr_t __1; // m_FileSystemName
	uint8_t __2; // m_LoadType
	int64_t __3; // m_Offset
	int32_t __4; // m_Length
	int32_t __5; // m_HashCode
	int32_t __6; // m_CompressedLength
	int32_t __7; // m_CompressedHashCode
	uintptr_t __8; // m_ResourcePath
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,GameFramework.FileSystem.FileSystem/StringData>
struct __struct_66__ {
	int32_t __0; // key
	__struct_3__ __1; // value
};
// System.Text.RegularExpressions.RegexCharClass/SingleRange
struct __struct_68__ {
	uint16_t __0; // First
	uint16_t __1; // Last
};
// System.ValueTuple`1<System.Byte>
struct __struct_69__ {
	uint8_t __0; // Item1
};
// System.ValueTuple`2<System.IntPtr,System.Object>
struct __struct_70__ {
	intptr_t __0; // Item1
	uintptr_t __1; // Item2
};
// YooAsset.DebugOperationInfo
struct __struct_77__ {
	uintptr_t __0; // OperationName
	uintptr_t __1; // OperationDesc
	uint32_t __2; // Priority
	float __3; // Progress
	uintptr_t __4; // BeginTime
	int64_t __5; // ProcessTime
	uintptr_t __6; // Status
	uintptr_t __7; // Childs
};
// YooAsset.DebugProviderInfo
struct __struct_78__ {
	uintptr_t __0; // <PackageName>k__BackingField
	uintptr_t __1; // AssetPath
	uintptr_t __2; // SpawnScene
	uintptr_t __3; // BeginTime
	int64_t __4; // LoadingTime
	int32_t __5; // RefCount
	uintptr_t __6; // Status
	uintptr_t __7; // DependBundles
};
// System.Reflection.CustomAttributeNamedArgument
struct __struct_79__ {
	__struct_34__ __0; // <TypedValue>k__BackingField
	uint8_t __1; // <IsField>k__BackingField
	uintptr_t __2; // <MemberName>k__BackingField
	uintptr_t __3; // _attributeType
	uintptr_t __4; // _lazyMemberInfo
};
// System.Collections.Generic.KeyValuePair`2<GameFramework.Resource.ResourceManager/ResourceName,GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>
struct __struct_81__ {
	__struct_28__ __0; // key
	__struct_64__ __1; // value
};
// System.ConsoleKeyInfo
struct __struct_82__ {
	uint16_t __0; // _keyChar
	int32_t __1; // _key
	int32_t __2; // _mods
};
// System.Decimal
struct __struct_83__ {
	union {
	#pragma pack(push, 1)
	struct { int32_t __0;}; // flags
	#pragma pack(pop)
	struct { int32_t __0_forAlignmentOnly;}; // flags
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[4]; int32_t __1;}; // hi
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[4]; int32_t __1_forAlignmentOnly;}; // hi
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[8]; int32_t __2;}; // lo
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[8]; int32_t __2_forAlignmentOnly;}; // lo
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[12]; int32_t __3;}; // mid
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[12]; int32_t __3_forAlignmentOnly;}; // mid
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[8]; uint64_t __4;}; // ulomidLE
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[8]; uint64_t __4_forAlignmentOnly;}; // ulomidLE
	};
};
// System.DateTimeOffset
struct __struct_84__ {
	__struct_30__ __0; // _dateTime
	int16_t __1; // _offsetMinutes
};
// System.Index
struct __struct_85__ {
	int32_t __0; // _value
};
// System.Memory`1<System.Object>
struct __struct_86__ {
	uintptr_t __0; // _object
	int32_t __1; // _index
	int32_t __2; // _length
};
// System.Numerics.Register
struct __struct_765__ {
	union {
	#pragma pack(push, 1)
	struct { uint8_t __0;}; // byte_0
	#pragma pack(pop)
	struct { uint8_t __0_forAlignmentOnly;}; // byte_0
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[1]; uint8_t __1;}; // byte_1
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[1]; uint8_t __1_forAlignmentOnly;}; // byte_1
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2]; uint8_t __2;}; // byte_2
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[2]; uint8_t __2_forAlignmentOnly;}; // byte_2
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3]; uint8_t __3;}; // byte_3
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[3]; uint8_t __3_forAlignmentOnly;}; // byte_3
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4]; uint8_t __4;}; // byte_4
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[4]; uint8_t __4_forAlignmentOnly;}; // byte_4
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5]; uint8_t __5;}; // byte_5
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[5]; uint8_t __5_forAlignmentOnly;}; // byte_5
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6]; uint8_t __6;}; // byte_6
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[6]; uint8_t __6_forAlignmentOnly;}; // byte_6
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[7]; uint8_t __7;}; // byte_7
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[7]; uint8_t __7_forAlignmentOnly;}; // byte_7
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[8]; uint8_t __8;}; // byte_8
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[8]; uint8_t __8_forAlignmentOnly;}; // byte_8
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[9]; uint8_t __9;}; // byte_9
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[9]; uint8_t __9_forAlignmentOnly;}; // byte_9
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[10]; uint8_t __10;}; // byte_10
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[10]; uint8_t __10_forAlignmentOnly;}; // byte_10
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[11]; uint8_t __11;}; // byte_11
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[11]; uint8_t __11_forAlignmentOnly;}; // byte_11
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[12]; uint8_t __12;}; // byte_12
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[12]; uint8_t __12_forAlignmentOnly;}; // byte_12
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[13]; uint8_t __13;}; // byte_13
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[13]; uint8_t __13_forAlignmentOnly;}; // byte_13
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[14]; uint8_t __14;}; // byte_14
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[14]; uint8_t __14_forAlignmentOnly;}; // byte_14
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[15]; uint8_t __15;}; // byte_15
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[15]; uint8_t __15_forAlignmentOnly;}; // byte_15
	#pragma pack(push, 1)
	struct { int8_t __16;}; // sbyte_0
	#pragma pack(pop)
	struct { int8_t __16_forAlignmentOnly;}; // sbyte_0
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[1]; int8_t __17;}; // sbyte_1
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[1]; int8_t __17_forAlignmentOnly;}; // sbyte_1
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[2]; int8_t __18;}; // sbyte_2
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[2]; int8_t __18_forAlignmentOnly;}; // sbyte_2
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[3]; int8_t __19;}; // sbyte_3
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[3]; int8_t __19_forAlignmentOnly;}; // sbyte_3
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[4]; int8_t __20;}; // sbyte_4
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[4]; int8_t __20_forAlignmentOnly;}; // sbyte_4
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[5]; int8_t __21;}; // sbyte_5
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[5]; int8_t __21_forAlignmentOnly;}; // sbyte_5
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[6]; int8_t __22;}; // sbyte_6
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[6]; int8_t __22_forAlignmentOnly;}; // sbyte_6
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[7]; int8_t __23;}; // sbyte_7
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[7]; int8_t __23_forAlignmentOnly;}; // sbyte_7
	#pragma pack(push, 1)
	struct { char __24_offsetPadding[8]; int8_t __24;}; // sbyte_8
	#pragma pack(pop)
	struct { char __24_offsetPadding_forAlignmentOnly[8]; int8_t __24_forAlignmentOnly;}; // sbyte_8
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[9]; int8_t __25;}; // sbyte_9
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[9]; int8_t __25_forAlignmentOnly;}; // sbyte_9
	#pragma pack(push, 1)
	struct { char __26_offsetPadding[10]; int8_t __26;}; // sbyte_10
	#pragma pack(pop)
	struct { char __26_offsetPadding_forAlignmentOnly[10]; int8_t __26_forAlignmentOnly;}; // sbyte_10
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[11]; int8_t __27;}; // sbyte_11
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[11]; int8_t __27_forAlignmentOnly;}; // sbyte_11
	#pragma pack(push, 1)
	struct { char __28_offsetPadding[12]; int8_t __28;}; // sbyte_12
	#pragma pack(pop)
	struct { char __28_offsetPadding_forAlignmentOnly[12]; int8_t __28_forAlignmentOnly;}; // sbyte_12
	#pragma pack(push, 1)
	struct { char __29_offsetPadding[13]; int8_t __29;}; // sbyte_13
	#pragma pack(pop)
	struct { char __29_offsetPadding_forAlignmentOnly[13]; int8_t __29_forAlignmentOnly;}; // sbyte_13
	#pragma pack(push, 1)
	struct { char __30_offsetPadding[14]; int8_t __30;}; // sbyte_14
	#pragma pack(pop)
	struct { char __30_offsetPadding_forAlignmentOnly[14]; int8_t __30_forAlignmentOnly;}; // sbyte_14
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[15]; int8_t __31;}; // sbyte_15
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[15]; int8_t __31_forAlignmentOnly;}; // sbyte_15
	#pragma pack(push, 1)
	struct { uint16_t __32;}; // uint16_0
	#pragma pack(pop)
	struct { uint16_t __32_forAlignmentOnly;}; // uint16_0
	#pragma pack(push, 1)
	struct { char __33_offsetPadding[2]; uint16_t __33;}; // uint16_1
	#pragma pack(pop)
	struct { char __33_offsetPadding_forAlignmentOnly[2]; uint16_t __33_forAlignmentOnly;}; // uint16_1
	#pragma pack(push, 1)
	struct { char __34_offsetPadding[4]; uint16_t __34;}; // uint16_2
	#pragma pack(pop)
	struct { char __34_offsetPadding_forAlignmentOnly[4]; uint16_t __34_forAlignmentOnly;}; // uint16_2
	#pragma pack(push, 1)
	struct { char __35_offsetPadding[6]; uint16_t __35;}; // uint16_3
	#pragma pack(pop)
	struct { char __35_offsetPadding_forAlignmentOnly[6]; uint16_t __35_forAlignmentOnly;}; // uint16_3
	#pragma pack(push, 1)
	struct { char __36_offsetPadding[8]; uint16_t __36;}; // uint16_4
	#pragma pack(pop)
	struct { char __36_offsetPadding_forAlignmentOnly[8]; uint16_t __36_forAlignmentOnly;}; // uint16_4
	#pragma pack(push, 1)
	struct { char __37_offsetPadding[10]; uint16_t __37;}; // uint16_5
	#pragma pack(pop)
	struct { char __37_offsetPadding_forAlignmentOnly[10]; uint16_t __37_forAlignmentOnly;}; // uint16_5
	#pragma pack(push, 1)
	struct { char __38_offsetPadding[12]; uint16_t __38;}; // uint16_6
	#pragma pack(pop)
	struct { char __38_offsetPadding_forAlignmentOnly[12]; uint16_t __38_forAlignmentOnly;}; // uint16_6
	#pragma pack(push, 1)
	struct { char __39_offsetPadding[14]; uint16_t __39;}; // uint16_7
	#pragma pack(pop)
	struct { char __39_offsetPadding_forAlignmentOnly[14]; uint16_t __39_forAlignmentOnly;}; // uint16_7
	#pragma pack(push, 1)
	struct { int16_t __40;}; // int16_0
	#pragma pack(pop)
	struct { int16_t __40_forAlignmentOnly;}; // int16_0
	#pragma pack(push, 1)
	struct { char __41_offsetPadding[2]; int16_t __41;}; // int16_1
	#pragma pack(pop)
	struct { char __41_offsetPadding_forAlignmentOnly[2]; int16_t __41_forAlignmentOnly;}; // int16_1
	#pragma pack(push, 1)
	struct { char __42_offsetPadding[4]; int16_t __42;}; // int16_2
	#pragma pack(pop)
	struct { char __42_offsetPadding_forAlignmentOnly[4]; int16_t __42_forAlignmentOnly;}; // int16_2
	#pragma pack(push, 1)
	struct { char __43_offsetPadding[6]; int16_t __43;}; // int16_3
	#pragma pack(pop)
	struct { char __43_offsetPadding_forAlignmentOnly[6]; int16_t __43_forAlignmentOnly;}; // int16_3
	#pragma pack(push, 1)
	struct { char __44_offsetPadding[8]; int16_t __44;}; // int16_4
	#pragma pack(pop)
	struct { char __44_offsetPadding_forAlignmentOnly[8]; int16_t __44_forAlignmentOnly;}; // int16_4
	#pragma pack(push, 1)
	struct { char __45_offsetPadding[10]; int16_t __45;}; // int16_5
	#pragma pack(pop)
	struct { char __45_offsetPadding_forAlignmentOnly[10]; int16_t __45_forAlignmentOnly;}; // int16_5
	#pragma pack(push, 1)
	struct { char __46_offsetPadding[12]; int16_t __46;}; // int16_6
	#pragma pack(pop)
	struct { char __46_offsetPadding_forAlignmentOnly[12]; int16_t __46_forAlignmentOnly;}; // int16_6
	#pragma pack(push, 1)
	struct { char __47_offsetPadding[14]; int16_t __47;}; // int16_7
	#pragma pack(pop)
	struct { char __47_offsetPadding_forAlignmentOnly[14]; int16_t __47_forAlignmentOnly;}; // int16_7
	#pragma pack(push, 1)
	struct { uint32_t __48;}; // uint32_0
	#pragma pack(pop)
	struct { uint32_t __48_forAlignmentOnly;}; // uint32_0
	#pragma pack(push, 1)
	struct { char __49_offsetPadding[4]; uint32_t __49;}; // uint32_1
	#pragma pack(pop)
	struct { char __49_offsetPadding_forAlignmentOnly[4]; uint32_t __49_forAlignmentOnly;}; // uint32_1
	#pragma pack(push, 1)
	struct { char __50_offsetPadding[8]; uint32_t __50;}; // uint32_2
	#pragma pack(pop)
	struct { char __50_offsetPadding_forAlignmentOnly[8]; uint32_t __50_forAlignmentOnly;}; // uint32_2
	#pragma pack(push, 1)
	struct { char __51_offsetPadding[12]; uint32_t __51;}; // uint32_3
	#pragma pack(pop)
	struct { char __51_offsetPadding_forAlignmentOnly[12]; uint32_t __51_forAlignmentOnly;}; // uint32_3
	#pragma pack(push, 1)
	struct { int32_t __52;}; // int32_0
	#pragma pack(pop)
	struct { int32_t __52_forAlignmentOnly;}; // int32_0
	#pragma pack(push, 1)
	struct { char __53_offsetPadding[4]; int32_t __53;}; // int32_1
	#pragma pack(pop)
	struct { char __53_offsetPadding_forAlignmentOnly[4]; int32_t __53_forAlignmentOnly;}; // int32_1
	#pragma pack(push, 1)
	struct { char __54_offsetPadding[8]; int32_t __54;}; // int32_2
	#pragma pack(pop)
	struct { char __54_offsetPadding_forAlignmentOnly[8]; int32_t __54_forAlignmentOnly;}; // int32_2
	#pragma pack(push, 1)
	struct { char __55_offsetPadding[12]; int32_t __55;}; // int32_3
	#pragma pack(pop)
	struct { char __55_offsetPadding_forAlignmentOnly[12]; int32_t __55_forAlignmentOnly;}; // int32_3
	#pragma pack(push, 1)
	struct { uint64_t __56;}; // uint64_0
	#pragma pack(pop)
	struct { uint64_t __56_forAlignmentOnly;}; // uint64_0
	#pragma pack(push, 1)
	struct { char __57_offsetPadding[8]; uint64_t __57;}; // uint64_1
	#pragma pack(pop)
	struct { char __57_offsetPadding_forAlignmentOnly[8]; uint64_t __57_forAlignmentOnly;}; // uint64_1
	#pragma pack(push, 1)
	struct { int64_t __58;}; // int64_0
	#pragma pack(pop)
	struct { int64_t __58_forAlignmentOnly;}; // int64_0
	#pragma pack(push, 1)
	struct { char __59_offsetPadding[8]; int64_t __59;}; // int64_1
	#pragma pack(pop)
	struct { char __59_offsetPadding_forAlignmentOnly[8]; int64_t __59_forAlignmentOnly;}; // int64_1
	#pragma pack(push, 1)
	struct { float __60;}; // single_0
	#pragma pack(pop)
	struct { float __60_forAlignmentOnly;}; // single_0
	#pragma pack(push, 1)
	struct { char __61_offsetPadding[4]; float __61;}; // single_1
	#pragma pack(pop)
	struct { char __61_offsetPadding_forAlignmentOnly[4]; float __61_forAlignmentOnly;}; // single_1
	#pragma pack(push, 1)
	struct { char __62_offsetPadding[8]; float __62;}; // single_2
	#pragma pack(pop)
	struct { char __62_offsetPadding_forAlignmentOnly[8]; float __62_forAlignmentOnly;}; // single_2
	#pragma pack(push, 1)
	struct { char __63_offsetPadding[12]; float __63;}; // single_3
	#pragma pack(pop)
	struct { char __63_offsetPadding_forAlignmentOnly[12]; float __63_forAlignmentOnly;}; // single_3
	#pragma pack(push, 1)
	struct { double __64;}; // double_0
	#pragma pack(pop)
	struct { double __64_forAlignmentOnly;}; // double_0
	#pragma pack(push, 1)
	struct { char __65_offsetPadding[8]; double __65;}; // double_1
	#pragma pack(pop)
	struct { char __65_offsetPadding_forAlignmentOnly[8]; double __65_forAlignmentOnly;}; // double_1
	};
};
// System.Numerics.Vector`1<System.Object>
struct __struct_87__ {
	__struct_765__ __0; // register
};
// System.Range
struct __struct_88__ {
	__struct_85__ __0; // <Start>k__BackingField
	__struct_85__ __1; // <End>k__BackingField
};
// System.Security.Cryptography.HashAlgorithmName
struct __struct_90__ {
	uintptr_t __0; // _name
};
// System.Threading.Tasks.ValueTask`1<System.Object>
struct __struct_92__ {
	uintptr_t __0; // _obj
	uintptr_t __1; // _result
	int16_t __2; // _token
	uint8_t __3; // _continueOnCapturedContext
};
// System.Threading.Tasks.ValueTask
struct __struct_93__ {
	uintptr_t __0; // _obj
	int16_t __1; // _token
	uint8_t __2; // _continueOnCapturedContext
};
// System.TimeSpan
struct __struct_94__ {
	int64_t __0; // _ticks
};
// System.TimeZoneInfo/TransitionTime
struct __struct_95__ {
	__struct_30__ __0; // _timeOfDay
	uint8_t __1; // _month
	uint8_t __2; // _week
	uint8_t __3; // _day
	int32_t __4; // _dayOfWeek
	uint8_t __5; // _isFixedDateRule
};
// System.ValueTuple`3<System.Object,System.Object,System.Object>
struct __struct_97__ {
	uintptr_t __0; // Item1
	uintptr_t __1; // Item2
	uintptr_t __2; // Item3
};
// System.ValueTuple`5<System.Object,System.Object,System.Object,System.Object,System.Object>
struct __struct_98__ {
	uintptr_t __0; // Item1
	uintptr_t __1; // Item2
	uintptr_t __2; // Item3
	uintptr_t __3; // Item4
	uintptr_t __4; // Item5
};
// System.ValueTuple`8<System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object>
struct __struct_99__ {
	uintptr_t __0; // Item1
	uintptr_t __1; // Item2
	uintptr_t __2; // Item3
	uintptr_t __3; // Item4
	uintptr_t __4; // Item5
	uintptr_t __5; // Item6
	uintptr_t __6; // Item7
	uintptr_t __7; // Rest
};
// System.ValueTuple
union __struct_100__ {
	struct { char __fieldSize_offsetPadding[1];};
	struct {
	};
};
// Unity.Collections.FixedBytes16
struct __struct_768__ {
	union {
	struct { char __fieldSize_offsetPadding[16];};
	#pragma pack(push, 1)
	struct { uint8_t __0;}; // byte0000
	#pragma pack(pop)
	struct { uint8_t __0_forAlignmentOnly;}; // byte0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[1]; uint8_t __1;}; // byte0001
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[1]; uint8_t __1_forAlignmentOnly;}; // byte0001
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2]; uint8_t __2;}; // byte0002
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[2]; uint8_t __2_forAlignmentOnly;}; // byte0002
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3]; uint8_t __3;}; // byte0003
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[3]; uint8_t __3_forAlignmentOnly;}; // byte0003
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4]; uint8_t __4;}; // byte0004
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[4]; uint8_t __4_forAlignmentOnly;}; // byte0004
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5]; uint8_t __5;}; // byte0005
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[5]; uint8_t __5_forAlignmentOnly;}; // byte0005
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6]; uint8_t __6;}; // byte0006
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[6]; uint8_t __6_forAlignmentOnly;}; // byte0006
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[7]; uint8_t __7;}; // byte0007
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[7]; uint8_t __7_forAlignmentOnly;}; // byte0007
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[8]; uint8_t __8;}; // byte0008
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[8]; uint8_t __8_forAlignmentOnly;}; // byte0008
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[9]; uint8_t __9;}; // byte0009
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[9]; uint8_t __9_forAlignmentOnly;}; // byte0009
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[10]; uint8_t __10;}; // byte0010
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[10]; uint8_t __10_forAlignmentOnly;}; // byte0010
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[11]; uint8_t __11;}; // byte0011
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[11]; uint8_t __11_forAlignmentOnly;}; // byte0011
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[12]; uint8_t __12;}; // byte0012
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[12]; uint8_t __12_forAlignmentOnly;}; // byte0012
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[13]; uint8_t __13;}; // byte0013
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[13]; uint8_t __13_forAlignmentOnly;}; // byte0013
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[14]; uint8_t __14;}; // byte0014
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[14]; uint8_t __14_forAlignmentOnly;}; // byte0014
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[15]; uint8_t __15;}; // byte0015
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[15]; uint8_t __15_forAlignmentOnly;}; // byte0015
	};
};
// Unity.Collections.FixedBytes126
struct __struct_767__ {
	union {
	struct { char __fieldSize_offsetPadding[126];};
	#pragma pack(push, 1)
	struct { __struct_768__ __0;}; // offset0000
	#pragma pack(pop)
	struct { __struct_768__ __0_forAlignmentOnly;}; // offset0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[16]; __struct_768__ __1;}; // offset0016
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[16]; __struct_768__ __1_forAlignmentOnly;}; // offset0016
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[32]; __struct_768__ __2;}; // offset0032
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[32]; __struct_768__ __2_forAlignmentOnly;}; // offset0032
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[48]; __struct_768__ __3;}; // offset0048
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[48]; __struct_768__ __3_forAlignmentOnly;}; // offset0048
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[64]; __struct_768__ __4;}; // offset0064
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[64]; __struct_768__ __4_forAlignmentOnly;}; // offset0064
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[80]; __struct_768__ __5;}; // offset0080
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[80]; __struct_768__ __5_forAlignmentOnly;}; // offset0080
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[96]; __struct_768__ __6;}; // offset0096
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[96]; __struct_768__ __6_forAlignmentOnly;}; // offset0096
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[112]; uint8_t __7;}; // byte0112
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[112]; uint8_t __7_forAlignmentOnly;}; // byte0112
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[113]; uint8_t __8;}; // byte0113
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[113]; uint8_t __8_forAlignmentOnly;}; // byte0113
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[114]; uint8_t __9;}; // byte0114
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[114]; uint8_t __9_forAlignmentOnly;}; // byte0114
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[115]; uint8_t __10;}; // byte0115
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[115]; uint8_t __10_forAlignmentOnly;}; // byte0115
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[116]; uint8_t __11;}; // byte0116
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[116]; uint8_t __11_forAlignmentOnly;}; // byte0116
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[117]; uint8_t __12;}; // byte0117
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[117]; uint8_t __12_forAlignmentOnly;}; // byte0117
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[118]; uint8_t __13;}; // byte0118
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[118]; uint8_t __13_forAlignmentOnly;}; // byte0118
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[119]; uint8_t __14;}; // byte0119
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[119]; uint8_t __14_forAlignmentOnly;}; // byte0119
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[120]; uint8_t __15;}; // byte0120
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[120]; uint8_t __15_forAlignmentOnly;}; // byte0120
	#pragma pack(push, 1)
	struct { char __16_offsetPadding[121]; uint8_t __16;}; // byte0121
	#pragma pack(pop)
	struct { char __16_offsetPadding_forAlignmentOnly[121]; uint8_t __16_forAlignmentOnly;}; // byte0121
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[122]; uint8_t __17;}; // byte0122
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[122]; uint8_t __17_forAlignmentOnly;}; // byte0122
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[123]; uint8_t __18;}; // byte0123
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[123]; uint8_t __18_forAlignmentOnly;}; // byte0123
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[124]; uint8_t __19;}; // byte0124
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[124]; uint8_t __19_forAlignmentOnly;}; // byte0124
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[125]; uint8_t __20;}; // byte0125
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[125]; uint8_t __20_forAlignmentOnly;}; // byte0125
	};
};
// Unity.Collections.FixedList128Bytes`1<System.Object>
struct __struct_101__ {
	uint16_t __0; // length
	__struct_767__ __1; // buffer
};
// Unity.Collections.FixedBytes30
struct __struct_769__ {
	union {
	struct { char __fieldSize_offsetPadding[30];};
	#pragma pack(push, 1)
	struct { __struct_768__ __0;}; // offset0000
	#pragma pack(pop)
	struct { __struct_768__ __0_forAlignmentOnly;}; // offset0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[16]; uint8_t __1;}; // byte0016
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[16]; uint8_t __1_forAlignmentOnly;}; // byte0016
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[17]; uint8_t __2;}; // byte0017
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[17]; uint8_t __2_forAlignmentOnly;}; // byte0017
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[18]; uint8_t __3;}; // byte0018
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[18]; uint8_t __3_forAlignmentOnly;}; // byte0018
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[19]; uint8_t __4;}; // byte0019
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[19]; uint8_t __4_forAlignmentOnly;}; // byte0019
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[20]; uint8_t __5;}; // byte0020
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[20]; uint8_t __5_forAlignmentOnly;}; // byte0020
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[21]; uint8_t __6;}; // byte0021
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[21]; uint8_t __6_forAlignmentOnly;}; // byte0021
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[22]; uint8_t __7;}; // byte0022
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[22]; uint8_t __7_forAlignmentOnly;}; // byte0022
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[23]; uint8_t __8;}; // byte0023
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[23]; uint8_t __8_forAlignmentOnly;}; // byte0023
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[24]; uint8_t __9;}; // byte0024
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[24]; uint8_t __9_forAlignmentOnly;}; // byte0024
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[25]; uint8_t __10;}; // byte0025
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[25]; uint8_t __10_forAlignmentOnly;}; // byte0025
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[26]; uint8_t __11;}; // byte0026
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[26]; uint8_t __11_forAlignmentOnly;}; // byte0026
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[27]; uint8_t __12;}; // byte0027
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[27]; uint8_t __12_forAlignmentOnly;}; // byte0027
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[28]; uint8_t __13;}; // byte0028
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[28]; uint8_t __13_forAlignmentOnly;}; // byte0028
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[29]; uint8_t __14;}; // byte0029
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[29]; uint8_t __14_forAlignmentOnly;}; // byte0029
	};
};
// Unity.Collections.FixedList32Bytes`1<System.Object>
struct __struct_102__ {
	uint16_t __0; // length
	__struct_769__ __1; // buffer
};
// Unity.Collections.FixedBytes4094
struct __struct_770__ {
	union {
	struct { char __fieldSize_offsetPadding[4094];};
	#pragma pack(push, 1)
	struct { __struct_768__ __0;}; // offset0000
	#pragma pack(pop)
	struct { __struct_768__ __0_forAlignmentOnly;}; // offset0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[16]; __struct_768__ __1;}; // offset0016
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[16]; __struct_768__ __1_forAlignmentOnly;}; // offset0016
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[32]; __struct_768__ __2;}; // offset0032
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[32]; __struct_768__ __2_forAlignmentOnly;}; // offset0032
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[48]; __struct_768__ __3;}; // offset0048
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[48]; __struct_768__ __3_forAlignmentOnly;}; // offset0048
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[64]; __struct_768__ __4;}; // offset0064
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[64]; __struct_768__ __4_forAlignmentOnly;}; // offset0064
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[80]; __struct_768__ __5;}; // offset0080
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[80]; __struct_768__ __5_forAlignmentOnly;}; // offset0080
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[96]; __struct_768__ __6;}; // offset0096
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[96]; __struct_768__ __6_forAlignmentOnly;}; // offset0096
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[112]; __struct_768__ __7;}; // offset0112
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[112]; __struct_768__ __7_forAlignmentOnly;}; // offset0112
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[128]; __struct_768__ __8;}; // offset0128
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[128]; __struct_768__ __8_forAlignmentOnly;}; // offset0128
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[144]; __struct_768__ __9;}; // offset0144
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[144]; __struct_768__ __9_forAlignmentOnly;}; // offset0144
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[160]; __struct_768__ __10;}; // offset0160
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[160]; __struct_768__ __10_forAlignmentOnly;}; // offset0160
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[176]; __struct_768__ __11;}; // offset0176
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[176]; __struct_768__ __11_forAlignmentOnly;}; // offset0176
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[192]; __struct_768__ __12;}; // offset0192
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[192]; __struct_768__ __12_forAlignmentOnly;}; // offset0192
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[208]; __struct_768__ __13;}; // offset0208
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[208]; __struct_768__ __13_forAlignmentOnly;}; // offset0208
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[224]; __struct_768__ __14;}; // offset0224
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[224]; __struct_768__ __14_forAlignmentOnly;}; // offset0224
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[240]; __struct_768__ __15;}; // offset0240
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[240]; __struct_768__ __15_forAlignmentOnly;}; // offset0240
	#pragma pack(push, 1)
	struct { char __16_offsetPadding[256]; __struct_768__ __16;}; // offset0256
	#pragma pack(pop)
	struct { char __16_offsetPadding_forAlignmentOnly[256]; __struct_768__ __16_forAlignmentOnly;}; // offset0256
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[272]; __struct_768__ __17;}; // offset0272
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[272]; __struct_768__ __17_forAlignmentOnly;}; // offset0272
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[288]; __struct_768__ __18;}; // offset0288
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[288]; __struct_768__ __18_forAlignmentOnly;}; // offset0288
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[304]; __struct_768__ __19;}; // offset0304
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[304]; __struct_768__ __19_forAlignmentOnly;}; // offset0304
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[320]; __struct_768__ __20;}; // offset0320
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[320]; __struct_768__ __20_forAlignmentOnly;}; // offset0320
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[336]; __struct_768__ __21;}; // offset0336
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[336]; __struct_768__ __21_forAlignmentOnly;}; // offset0336
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[352]; __struct_768__ __22;}; // offset0352
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[352]; __struct_768__ __22_forAlignmentOnly;}; // offset0352
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[368]; __struct_768__ __23;}; // offset0368
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[368]; __struct_768__ __23_forAlignmentOnly;}; // offset0368
	#pragma pack(push, 1)
	struct { char __24_offsetPadding[384]; __struct_768__ __24;}; // offset0384
	#pragma pack(pop)
	struct { char __24_offsetPadding_forAlignmentOnly[384]; __struct_768__ __24_forAlignmentOnly;}; // offset0384
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[400]; __struct_768__ __25;}; // offset0400
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[400]; __struct_768__ __25_forAlignmentOnly;}; // offset0400
	#pragma pack(push, 1)
	struct { char __26_offsetPadding[416]; __struct_768__ __26;}; // offset0416
	#pragma pack(pop)
	struct { char __26_offsetPadding_forAlignmentOnly[416]; __struct_768__ __26_forAlignmentOnly;}; // offset0416
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[432]; __struct_768__ __27;}; // offset0432
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[432]; __struct_768__ __27_forAlignmentOnly;}; // offset0432
	#pragma pack(push, 1)
	struct { char __28_offsetPadding[448]; __struct_768__ __28;}; // offset0448
	#pragma pack(pop)
	struct { char __28_offsetPadding_forAlignmentOnly[448]; __struct_768__ __28_forAlignmentOnly;}; // offset0448
	#pragma pack(push, 1)
	struct { char __29_offsetPadding[464]; __struct_768__ __29;}; // offset0464
	#pragma pack(pop)
	struct { char __29_offsetPadding_forAlignmentOnly[464]; __struct_768__ __29_forAlignmentOnly;}; // offset0464
	#pragma pack(push, 1)
	struct { char __30_offsetPadding[480]; __struct_768__ __30;}; // offset0480
	#pragma pack(pop)
	struct { char __30_offsetPadding_forAlignmentOnly[480]; __struct_768__ __30_forAlignmentOnly;}; // offset0480
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[496]; __struct_768__ __31;}; // offset0496
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[496]; __struct_768__ __31_forAlignmentOnly;}; // offset0496
	#pragma pack(push, 1)
	struct { char __32_offsetPadding[512]; __struct_768__ __32;}; // offset0512
	#pragma pack(pop)
	struct { char __32_offsetPadding_forAlignmentOnly[512]; __struct_768__ __32_forAlignmentOnly;}; // offset0512
	#pragma pack(push, 1)
	struct { char __33_offsetPadding[528]; __struct_768__ __33;}; // offset0528
	#pragma pack(pop)
	struct { char __33_offsetPadding_forAlignmentOnly[528]; __struct_768__ __33_forAlignmentOnly;}; // offset0528
	#pragma pack(push, 1)
	struct { char __34_offsetPadding[544]; __struct_768__ __34;}; // offset0544
	#pragma pack(pop)
	struct { char __34_offsetPadding_forAlignmentOnly[544]; __struct_768__ __34_forAlignmentOnly;}; // offset0544
	#pragma pack(push, 1)
	struct { char __35_offsetPadding[560]; __struct_768__ __35;}; // offset0560
	#pragma pack(pop)
	struct { char __35_offsetPadding_forAlignmentOnly[560]; __struct_768__ __35_forAlignmentOnly;}; // offset0560
	#pragma pack(push, 1)
	struct { char __36_offsetPadding[576]; __struct_768__ __36;}; // offset0576
	#pragma pack(pop)
	struct { char __36_offsetPadding_forAlignmentOnly[576]; __struct_768__ __36_forAlignmentOnly;}; // offset0576
	#pragma pack(push, 1)
	struct { char __37_offsetPadding[592]; __struct_768__ __37;}; // offset0592
	#pragma pack(pop)
	struct { char __37_offsetPadding_forAlignmentOnly[592]; __struct_768__ __37_forAlignmentOnly;}; // offset0592
	#pragma pack(push, 1)
	struct { char __38_offsetPadding[608]; __struct_768__ __38;}; // offset0608
	#pragma pack(pop)
	struct { char __38_offsetPadding_forAlignmentOnly[608]; __struct_768__ __38_forAlignmentOnly;}; // offset0608
	#pragma pack(push, 1)
	struct { char __39_offsetPadding[624]; __struct_768__ __39;}; // offset0624
	#pragma pack(pop)
	struct { char __39_offsetPadding_forAlignmentOnly[624]; __struct_768__ __39_forAlignmentOnly;}; // offset0624
	#pragma pack(push, 1)
	struct { char __40_offsetPadding[640]; __struct_768__ __40;}; // offset0640
	#pragma pack(pop)
	struct { char __40_offsetPadding_forAlignmentOnly[640]; __struct_768__ __40_forAlignmentOnly;}; // offset0640
	#pragma pack(push, 1)
	struct { char __41_offsetPadding[656]; __struct_768__ __41;}; // offset0656
	#pragma pack(pop)
	struct { char __41_offsetPadding_forAlignmentOnly[656]; __struct_768__ __41_forAlignmentOnly;}; // offset0656
	#pragma pack(push, 1)
	struct { char __42_offsetPadding[672]; __struct_768__ __42;}; // offset0672
	#pragma pack(pop)
	struct { char __42_offsetPadding_forAlignmentOnly[672]; __struct_768__ __42_forAlignmentOnly;}; // offset0672
	#pragma pack(push, 1)
	struct { char __43_offsetPadding[688]; __struct_768__ __43;}; // offset0688
	#pragma pack(pop)
	struct { char __43_offsetPadding_forAlignmentOnly[688]; __struct_768__ __43_forAlignmentOnly;}; // offset0688
	#pragma pack(push, 1)
	struct { char __44_offsetPadding[704]; __struct_768__ __44;}; // offset0704
	#pragma pack(pop)
	struct { char __44_offsetPadding_forAlignmentOnly[704]; __struct_768__ __44_forAlignmentOnly;}; // offset0704
	#pragma pack(push, 1)
	struct { char __45_offsetPadding[720]; __struct_768__ __45;}; // offset0720
	#pragma pack(pop)
	struct { char __45_offsetPadding_forAlignmentOnly[720]; __struct_768__ __45_forAlignmentOnly;}; // offset0720
	#pragma pack(push, 1)
	struct { char __46_offsetPadding[736]; __struct_768__ __46;}; // offset0736
	#pragma pack(pop)
	struct { char __46_offsetPadding_forAlignmentOnly[736]; __struct_768__ __46_forAlignmentOnly;}; // offset0736
	#pragma pack(push, 1)
	struct { char __47_offsetPadding[752]; __struct_768__ __47;}; // offset0752
	#pragma pack(pop)
	struct { char __47_offsetPadding_forAlignmentOnly[752]; __struct_768__ __47_forAlignmentOnly;}; // offset0752
	#pragma pack(push, 1)
	struct { char __48_offsetPadding[768]; __struct_768__ __48;}; // offset0768
	#pragma pack(pop)
	struct { char __48_offsetPadding_forAlignmentOnly[768]; __struct_768__ __48_forAlignmentOnly;}; // offset0768
	#pragma pack(push, 1)
	struct { char __49_offsetPadding[784]; __struct_768__ __49;}; // offset0784
	#pragma pack(pop)
	struct { char __49_offsetPadding_forAlignmentOnly[784]; __struct_768__ __49_forAlignmentOnly;}; // offset0784
	#pragma pack(push, 1)
	struct { char __50_offsetPadding[800]; __struct_768__ __50;}; // offset0800
	#pragma pack(pop)
	struct { char __50_offsetPadding_forAlignmentOnly[800]; __struct_768__ __50_forAlignmentOnly;}; // offset0800
	#pragma pack(push, 1)
	struct { char __51_offsetPadding[816]; __struct_768__ __51;}; // offset0816
	#pragma pack(pop)
	struct { char __51_offsetPadding_forAlignmentOnly[816]; __struct_768__ __51_forAlignmentOnly;}; // offset0816
	#pragma pack(push, 1)
	struct { char __52_offsetPadding[832]; __struct_768__ __52;}; // offset0832
	#pragma pack(pop)
	struct { char __52_offsetPadding_forAlignmentOnly[832]; __struct_768__ __52_forAlignmentOnly;}; // offset0832
	#pragma pack(push, 1)
	struct { char __53_offsetPadding[848]; __struct_768__ __53;}; // offset0848
	#pragma pack(pop)
	struct { char __53_offsetPadding_forAlignmentOnly[848]; __struct_768__ __53_forAlignmentOnly;}; // offset0848
	#pragma pack(push, 1)
	struct { char __54_offsetPadding[864]; __struct_768__ __54;}; // offset0864
	#pragma pack(pop)
	struct { char __54_offsetPadding_forAlignmentOnly[864]; __struct_768__ __54_forAlignmentOnly;}; // offset0864
	#pragma pack(push, 1)
	struct { char __55_offsetPadding[880]; __struct_768__ __55;}; // offset0880
	#pragma pack(pop)
	struct { char __55_offsetPadding_forAlignmentOnly[880]; __struct_768__ __55_forAlignmentOnly;}; // offset0880
	#pragma pack(push, 1)
	struct { char __56_offsetPadding[896]; __struct_768__ __56;}; // offset0896
	#pragma pack(pop)
	struct { char __56_offsetPadding_forAlignmentOnly[896]; __struct_768__ __56_forAlignmentOnly;}; // offset0896
	#pragma pack(push, 1)
	struct { char __57_offsetPadding[912]; __struct_768__ __57;}; // offset0912
	#pragma pack(pop)
	struct { char __57_offsetPadding_forAlignmentOnly[912]; __struct_768__ __57_forAlignmentOnly;}; // offset0912
	#pragma pack(push, 1)
	struct { char __58_offsetPadding[928]; __struct_768__ __58;}; // offset0928
	#pragma pack(pop)
	struct { char __58_offsetPadding_forAlignmentOnly[928]; __struct_768__ __58_forAlignmentOnly;}; // offset0928
	#pragma pack(push, 1)
	struct { char __59_offsetPadding[944]; __struct_768__ __59;}; // offset0944
	#pragma pack(pop)
	struct { char __59_offsetPadding_forAlignmentOnly[944]; __struct_768__ __59_forAlignmentOnly;}; // offset0944
	#pragma pack(push, 1)
	struct { char __60_offsetPadding[960]; __struct_768__ __60;}; // offset0960
	#pragma pack(pop)
	struct { char __60_offsetPadding_forAlignmentOnly[960]; __struct_768__ __60_forAlignmentOnly;}; // offset0960
	#pragma pack(push, 1)
	struct { char __61_offsetPadding[976]; __struct_768__ __61;}; // offset0976
	#pragma pack(pop)
	struct { char __61_offsetPadding_forAlignmentOnly[976]; __struct_768__ __61_forAlignmentOnly;}; // offset0976
	#pragma pack(push, 1)
	struct { char __62_offsetPadding[992]; __struct_768__ __62;}; // offset0992
	#pragma pack(pop)
	struct { char __62_offsetPadding_forAlignmentOnly[992]; __struct_768__ __62_forAlignmentOnly;}; // offset0992
	#pragma pack(push, 1)
	struct { char __63_offsetPadding[1008]; __struct_768__ __63;}; // offset1008
	#pragma pack(pop)
	struct { char __63_offsetPadding_forAlignmentOnly[1008]; __struct_768__ __63_forAlignmentOnly;}; // offset1008
	#pragma pack(push, 1)
	struct { char __64_offsetPadding[1024]; __struct_768__ __64;}; // offset1024
	#pragma pack(pop)
	struct { char __64_offsetPadding_forAlignmentOnly[1024]; __struct_768__ __64_forAlignmentOnly;}; // offset1024
	#pragma pack(push, 1)
	struct { char __65_offsetPadding[1040]; __struct_768__ __65;}; // offset1040
	#pragma pack(pop)
	struct { char __65_offsetPadding_forAlignmentOnly[1040]; __struct_768__ __65_forAlignmentOnly;}; // offset1040
	#pragma pack(push, 1)
	struct { char __66_offsetPadding[1056]; __struct_768__ __66;}; // offset1056
	#pragma pack(pop)
	struct { char __66_offsetPadding_forAlignmentOnly[1056]; __struct_768__ __66_forAlignmentOnly;}; // offset1056
	#pragma pack(push, 1)
	struct { char __67_offsetPadding[1072]; __struct_768__ __67;}; // offset1072
	#pragma pack(pop)
	struct { char __67_offsetPadding_forAlignmentOnly[1072]; __struct_768__ __67_forAlignmentOnly;}; // offset1072
	#pragma pack(push, 1)
	struct { char __68_offsetPadding[1088]; __struct_768__ __68;}; // offset1088
	#pragma pack(pop)
	struct { char __68_offsetPadding_forAlignmentOnly[1088]; __struct_768__ __68_forAlignmentOnly;}; // offset1088
	#pragma pack(push, 1)
	struct { char __69_offsetPadding[1104]; __struct_768__ __69;}; // offset1104
	#pragma pack(pop)
	struct { char __69_offsetPadding_forAlignmentOnly[1104]; __struct_768__ __69_forAlignmentOnly;}; // offset1104
	#pragma pack(push, 1)
	struct { char __70_offsetPadding[1120]; __struct_768__ __70;}; // offset1120
	#pragma pack(pop)
	struct { char __70_offsetPadding_forAlignmentOnly[1120]; __struct_768__ __70_forAlignmentOnly;}; // offset1120
	#pragma pack(push, 1)
	struct { char __71_offsetPadding[1136]; __struct_768__ __71;}; // offset1136
	#pragma pack(pop)
	struct { char __71_offsetPadding_forAlignmentOnly[1136]; __struct_768__ __71_forAlignmentOnly;}; // offset1136
	#pragma pack(push, 1)
	struct { char __72_offsetPadding[1152]; __struct_768__ __72;}; // offset1152
	#pragma pack(pop)
	struct { char __72_offsetPadding_forAlignmentOnly[1152]; __struct_768__ __72_forAlignmentOnly;}; // offset1152
	#pragma pack(push, 1)
	struct { char __73_offsetPadding[1168]; __struct_768__ __73;}; // offset1168
	#pragma pack(pop)
	struct { char __73_offsetPadding_forAlignmentOnly[1168]; __struct_768__ __73_forAlignmentOnly;}; // offset1168
	#pragma pack(push, 1)
	struct { char __74_offsetPadding[1184]; __struct_768__ __74;}; // offset1184
	#pragma pack(pop)
	struct { char __74_offsetPadding_forAlignmentOnly[1184]; __struct_768__ __74_forAlignmentOnly;}; // offset1184
	#pragma pack(push, 1)
	struct { char __75_offsetPadding[1200]; __struct_768__ __75;}; // offset1200
	#pragma pack(pop)
	struct { char __75_offsetPadding_forAlignmentOnly[1200]; __struct_768__ __75_forAlignmentOnly;}; // offset1200
	#pragma pack(push, 1)
	struct { char __76_offsetPadding[1216]; __struct_768__ __76;}; // offset1216
	#pragma pack(pop)
	struct { char __76_offsetPadding_forAlignmentOnly[1216]; __struct_768__ __76_forAlignmentOnly;}; // offset1216
	#pragma pack(push, 1)
	struct { char __77_offsetPadding[1232]; __struct_768__ __77;}; // offset1232
	#pragma pack(pop)
	struct { char __77_offsetPadding_forAlignmentOnly[1232]; __struct_768__ __77_forAlignmentOnly;}; // offset1232
	#pragma pack(push, 1)
	struct { char __78_offsetPadding[1248]; __struct_768__ __78;}; // offset1248
	#pragma pack(pop)
	struct { char __78_offsetPadding_forAlignmentOnly[1248]; __struct_768__ __78_forAlignmentOnly;}; // offset1248
	#pragma pack(push, 1)
	struct { char __79_offsetPadding[1264]; __struct_768__ __79;}; // offset1264
	#pragma pack(pop)
	struct { char __79_offsetPadding_forAlignmentOnly[1264]; __struct_768__ __79_forAlignmentOnly;}; // offset1264
	#pragma pack(push, 1)
	struct { char __80_offsetPadding[1280]; __struct_768__ __80;}; // offset1280
	#pragma pack(pop)
	struct { char __80_offsetPadding_forAlignmentOnly[1280]; __struct_768__ __80_forAlignmentOnly;}; // offset1280
	#pragma pack(push, 1)
	struct { char __81_offsetPadding[1296]; __struct_768__ __81;}; // offset1296
	#pragma pack(pop)
	struct { char __81_offsetPadding_forAlignmentOnly[1296]; __struct_768__ __81_forAlignmentOnly;}; // offset1296
	#pragma pack(push, 1)
	struct { char __82_offsetPadding[1312]; __struct_768__ __82;}; // offset1312
	#pragma pack(pop)
	struct { char __82_offsetPadding_forAlignmentOnly[1312]; __struct_768__ __82_forAlignmentOnly;}; // offset1312
	#pragma pack(push, 1)
	struct { char __83_offsetPadding[1328]; __struct_768__ __83;}; // offset1328
	#pragma pack(pop)
	struct { char __83_offsetPadding_forAlignmentOnly[1328]; __struct_768__ __83_forAlignmentOnly;}; // offset1328
	#pragma pack(push, 1)
	struct { char __84_offsetPadding[1344]; __struct_768__ __84;}; // offset1344
	#pragma pack(pop)
	struct { char __84_offsetPadding_forAlignmentOnly[1344]; __struct_768__ __84_forAlignmentOnly;}; // offset1344
	#pragma pack(push, 1)
	struct { char __85_offsetPadding[1360]; __struct_768__ __85;}; // offset1360
	#pragma pack(pop)
	struct { char __85_offsetPadding_forAlignmentOnly[1360]; __struct_768__ __85_forAlignmentOnly;}; // offset1360
	#pragma pack(push, 1)
	struct { char __86_offsetPadding[1376]; __struct_768__ __86;}; // offset1376
	#pragma pack(pop)
	struct { char __86_offsetPadding_forAlignmentOnly[1376]; __struct_768__ __86_forAlignmentOnly;}; // offset1376
	#pragma pack(push, 1)
	struct { char __87_offsetPadding[1392]; __struct_768__ __87;}; // offset1392
	#pragma pack(pop)
	struct { char __87_offsetPadding_forAlignmentOnly[1392]; __struct_768__ __87_forAlignmentOnly;}; // offset1392
	#pragma pack(push, 1)
	struct { char __88_offsetPadding[1408]; __struct_768__ __88;}; // offset1408
	#pragma pack(pop)
	struct { char __88_offsetPadding_forAlignmentOnly[1408]; __struct_768__ __88_forAlignmentOnly;}; // offset1408
	#pragma pack(push, 1)
	struct { char __89_offsetPadding[1424]; __struct_768__ __89;}; // offset1424
	#pragma pack(pop)
	struct { char __89_offsetPadding_forAlignmentOnly[1424]; __struct_768__ __89_forAlignmentOnly;}; // offset1424
	#pragma pack(push, 1)
	struct { char __90_offsetPadding[1440]; __struct_768__ __90;}; // offset1440
	#pragma pack(pop)
	struct { char __90_offsetPadding_forAlignmentOnly[1440]; __struct_768__ __90_forAlignmentOnly;}; // offset1440
	#pragma pack(push, 1)
	struct { char __91_offsetPadding[1456]; __struct_768__ __91;}; // offset1456
	#pragma pack(pop)
	struct { char __91_offsetPadding_forAlignmentOnly[1456]; __struct_768__ __91_forAlignmentOnly;}; // offset1456
	#pragma pack(push, 1)
	struct { char __92_offsetPadding[1472]; __struct_768__ __92;}; // offset1472
	#pragma pack(pop)
	struct { char __92_offsetPadding_forAlignmentOnly[1472]; __struct_768__ __92_forAlignmentOnly;}; // offset1472
	#pragma pack(push, 1)
	struct { char __93_offsetPadding[1488]; __struct_768__ __93;}; // offset1488
	#pragma pack(pop)
	struct { char __93_offsetPadding_forAlignmentOnly[1488]; __struct_768__ __93_forAlignmentOnly;}; // offset1488
	#pragma pack(push, 1)
	struct { char __94_offsetPadding[1504]; __struct_768__ __94;}; // offset1504
	#pragma pack(pop)
	struct { char __94_offsetPadding_forAlignmentOnly[1504]; __struct_768__ __94_forAlignmentOnly;}; // offset1504
	#pragma pack(push, 1)
	struct { char __95_offsetPadding[1520]; __struct_768__ __95;}; // offset1520
	#pragma pack(pop)
	struct { char __95_offsetPadding_forAlignmentOnly[1520]; __struct_768__ __95_forAlignmentOnly;}; // offset1520
	#pragma pack(push, 1)
	struct { char __96_offsetPadding[1536]; __struct_768__ __96;}; // offset1536
	#pragma pack(pop)
	struct { char __96_offsetPadding_forAlignmentOnly[1536]; __struct_768__ __96_forAlignmentOnly;}; // offset1536
	#pragma pack(push, 1)
	struct { char __97_offsetPadding[1552]; __struct_768__ __97;}; // offset1552
	#pragma pack(pop)
	struct { char __97_offsetPadding_forAlignmentOnly[1552]; __struct_768__ __97_forAlignmentOnly;}; // offset1552
	#pragma pack(push, 1)
	struct { char __98_offsetPadding[1568]; __struct_768__ __98;}; // offset1568
	#pragma pack(pop)
	struct { char __98_offsetPadding_forAlignmentOnly[1568]; __struct_768__ __98_forAlignmentOnly;}; // offset1568
	#pragma pack(push, 1)
	struct { char __99_offsetPadding[1584]; __struct_768__ __99;}; // offset1584
	#pragma pack(pop)
	struct { char __99_offsetPadding_forAlignmentOnly[1584]; __struct_768__ __99_forAlignmentOnly;}; // offset1584
	#pragma pack(push, 1)
	struct { char __100_offsetPadding[1600]; __struct_768__ __100;}; // offset1600
	#pragma pack(pop)
	struct { char __100_offsetPadding_forAlignmentOnly[1600]; __struct_768__ __100_forAlignmentOnly;}; // offset1600
	#pragma pack(push, 1)
	struct { char __101_offsetPadding[1616]; __struct_768__ __101;}; // offset1616
	#pragma pack(pop)
	struct { char __101_offsetPadding_forAlignmentOnly[1616]; __struct_768__ __101_forAlignmentOnly;}; // offset1616
	#pragma pack(push, 1)
	struct { char __102_offsetPadding[1632]; __struct_768__ __102;}; // offset1632
	#pragma pack(pop)
	struct { char __102_offsetPadding_forAlignmentOnly[1632]; __struct_768__ __102_forAlignmentOnly;}; // offset1632
	#pragma pack(push, 1)
	struct { char __103_offsetPadding[1648]; __struct_768__ __103;}; // offset1648
	#pragma pack(pop)
	struct { char __103_offsetPadding_forAlignmentOnly[1648]; __struct_768__ __103_forAlignmentOnly;}; // offset1648
	#pragma pack(push, 1)
	struct { char __104_offsetPadding[1664]; __struct_768__ __104;}; // offset1664
	#pragma pack(pop)
	struct { char __104_offsetPadding_forAlignmentOnly[1664]; __struct_768__ __104_forAlignmentOnly;}; // offset1664
	#pragma pack(push, 1)
	struct { char __105_offsetPadding[1680]; __struct_768__ __105;}; // offset1680
	#pragma pack(pop)
	struct { char __105_offsetPadding_forAlignmentOnly[1680]; __struct_768__ __105_forAlignmentOnly;}; // offset1680
	#pragma pack(push, 1)
	struct { char __106_offsetPadding[1696]; __struct_768__ __106;}; // offset1696
	#pragma pack(pop)
	struct { char __106_offsetPadding_forAlignmentOnly[1696]; __struct_768__ __106_forAlignmentOnly;}; // offset1696
	#pragma pack(push, 1)
	struct { char __107_offsetPadding[1712]; __struct_768__ __107;}; // offset1712
	#pragma pack(pop)
	struct { char __107_offsetPadding_forAlignmentOnly[1712]; __struct_768__ __107_forAlignmentOnly;}; // offset1712
	#pragma pack(push, 1)
	struct { char __108_offsetPadding[1728]; __struct_768__ __108;}; // offset1728
	#pragma pack(pop)
	struct { char __108_offsetPadding_forAlignmentOnly[1728]; __struct_768__ __108_forAlignmentOnly;}; // offset1728
	#pragma pack(push, 1)
	struct { char __109_offsetPadding[1744]; __struct_768__ __109;}; // offset1744
	#pragma pack(pop)
	struct { char __109_offsetPadding_forAlignmentOnly[1744]; __struct_768__ __109_forAlignmentOnly;}; // offset1744
	#pragma pack(push, 1)
	struct { char __110_offsetPadding[1760]; __struct_768__ __110;}; // offset1760
	#pragma pack(pop)
	struct { char __110_offsetPadding_forAlignmentOnly[1760]; __struct_768__ __110_forAlignmentOnly;}; // offset1760
	#pragma pack(push, 1)
	struct { char __111_offsetPadding[1776]; __struct_768__ __111;}; // offset1776
	#pragma pack(pop)
	struct { char __111_offsetPadding_forAlignmentOnly[1776]; __struct_768__ __111_forAlignmentOnly;}; // offset1776
	#pragma pack(push, 1)
	struct { char __112_offsetPadding[1792]; __struct_768__ __112;}; // offset1792
	#pragma pack(pop)
	struct { char __112_offsetPadding_forAlignmentOnly[1792]; __struct_768__ __112_forAlignmentOnly;}; // offset1792
	#pragma pack(push, 1)
	struct { char __113_offsetPadding[1808]; __struct_768__ __113;}; // offset1808
	#pragma pack(pop)
	struct { char __113_offsetPadding_forAlignmentOnly[1808]; __struct_768__ __113_forAlignmentOnly;}; // offset1808
	#pragma pack(push, 1)
	struct { char __114_offsetPadding[1824]; __struct_768__ __114;}; // offset1824
	#pragma pack(pop)
	struct { char __114_offsetPadding_forAlignmentOnly[1824]; __struct_768__ __114_forAlignmentOnly;}; // offset1824
	#pragma pack(push, 1)
	struct { char __115_offsetPadding[1840]; __struct_768__ __115;}; // offset1840
	#pragma pack(pop)
	struct { char __115_offsetPadding_forAlignmentOnly[1840]; __struct_768__ __115_forAlignmentOnly;}; // offset1840
	#pragma pack(push, 1)
	struct { char __116_offsetPadding[1856]; __struct_768__ __116;}; // offset1856
	#pragma pack(pop)
	struct { char __116_offsetPadding_forAlignmentOnly[1856]; __struct_768__ __116_forAlignmentOnly;}; // offset1856
	#pragma pack(push, 1)
	struct { char __117_offsetPadding[1872]; __struct_768__ __117;}; // offset1872
	#pragma pack(pop)
	struct { char __117_offsetPadding_forAlignmentOnly[1872]; __struct_768__ __117_forAlignmentOnly;}; // offset1872
	#pragma pack(push, 1)
	struct { char __118_offsetPadding[1888]; __struct_768__ __118;}; // offset1888
	#pragma pack(pop)
	struct { char __118_offsetPadding_forAlignmentOnly[1888]; __struct_768__ __118_forAlignmentOnly;}; // offset1888
	#pragma pack(push, 1)
	struct { char __119_offsetPadding[1904]; __struct_768__ __119;}; // offset1904
	#pragma pack(pop)
	struct { char __119_offsetPadding_forAlignmentOnly[1904]; __struct_768__ __119_forAlignmentOnly;}; // offset1904
	#pragma pack(push, 1)
	struct { char __120_offsetPadding[1920]; __struct_768__ __120;}; // offset1920
	#pragma pack(pop)
	struct { char __120_offsetPadding_forAlignmentOnly[1920]; __struct_768__ __120_forAlignmentOnly;}; // offset1920
	#pragma pack(push, 1)
	struct { char __121_offsetPadding[1936]; __struct_768__ __121;}; // offset1936
	#pragma pack(pop)
	struct { char __121_offsetPadding_forAlignmentOnly[1936]; __struct_768__ __121_forAlignmentOnly;}; // offset1936
	#pragma pack(push, 1)
	struct { char __122_offsetPadding[1952]; __struct_768__ __122;}; // offset1952
	#pragma pack(pop)
	struct { char __122_offsetPadding_forAlignmentOnly[1952]; __struct_768__ __122_forAlignmentOnly;}; // offset1952
	#pragma pack(push, 1)
	struct { char __123_offsetPadding[1968]; __struct_768__ __123;}; // offset1968
	#pragma pack(pop)
	struct { char __123_offsetPadding_forAlignmentOnly[1968]; __struct_768__ __123_forAlignmentOnly;}; // offset1968
	#pragma pack(push, 1)
	struct { char __124_offsetPadding[1984]; __struct_768__ __124;}; // offset1984
	#pragma pack(pop)
	struct { char __124_offsetPadding_forAlignmentOnly[1984]; __struct_768__ __124_forAlignmentOnly;}; // offset1984
	#pragma pack(push, 1)
	struct { char __125_offsetPadding[2000]; __struct_768__ __125;}; // offset2000
	#pragma pack(pop)
	struct { char __125_offsetPadding_forAlignmentOnly[2000]; __struct_768__ __125_forAlignmentOnly;}; // offset2000
	#pragma pack(push, 1)
	struct { char __126_offsetPadding[2016]; __struct_768__ __126;}; // offset2016
	#pragma pack(pop)
	struct { char __126_offsetPadding_forAlignmentOnly[2016]; __struct_768__ __126_forAlignmentOnly;}; // offset2016
	#pragma pack(push, 1)
	struct { char __127_offsetPadding[2032]; __struct_768__ __127;}; // offset2032
	#pragma pack(pop)
	struct { char __127_offsetPadding_forAlignmentOnly[2032]; __struct_768__ __127_forAlignmentOnly;}; // offset2032
	#pragma pack(push, 1)
	struct { char __128_offsetPadding[2048]; __struct_768__ __128;}; // offset2048
	#pragma pack(pop)
	struct { char __128_offsetPadding_forAlignmentOnly[2048]; __struct_768__ __128_forAlignmentOnly;}; // offset2048
	#pragma pack(push, 1)
	struct { char __129_offsetPadding[2064]; __struct_768__ __129;}; // offset2064
	#pragma pack(pop)
	struct { char __129_offsetPadding_forAlignmentOnly[2064]; __struct_768__ __129_forAlignmentOnly;}; // offset2064
	#pragma pack(push, 1)
	struct { char __130_offsetPadding[2080]; __struct_768__ __130;}; // offset2080
	#pragma pack(pop)
	struct { char __130_offsetPadding_forAlignmentOnly[2080]; __struct_768__ __130_forAlignmentOnly;}; // offset2080
	#pragma pack(push, 1)
	struct { char __131_offsetPadding[2096]; __struct_768__ __131;}; // offset2096
	#pragma pack(pop)
	struct { char __131_offsetPadding_forAlignmentOnly[2096]; __struct_768__ __131_forAlignmentOnly;}; // offset2096
	#pragma pack(push, 1)
	struct { char __132_offsetPadding[2112]; __struct_768__ __132;}; // offset2112
	#pragma pack(pop)
	struct { char __132_offsetPadding_forAlignmentOnly[2112]; __struct_768__ __132_forAlignmentOnly;}; // offset2112
	#pragma pack(push, 1)
	struct { char __133_offsetPadding[2128]; __struct_768__ __133;}; // offset2128
	#pragma pack(pop)
	struct { char __133_offsetPadding_forAlignmentOnly[2128]; __struct_768__ __133_forAlignmentOnly;}; // offset2128
	#pragma pack(push, 1)
	struct { char __134_offsetPadding[2144]; __struct_768__ __134;}; // offset2144
	#pragma pack(pop)
	struct { char __134_offsetPadding_forAlignmentOnly[2144]; __struct_768__ __134_forAlignmentOnly;}; // offset2144
	#pragma pack(push, 1)
	struct { char __135_offsetPadding[2160]; __struct_768__ __135;}; // offset2160
	#pragma pack(pop)
	struct { char __135_offsetPadding_forAlignmentOnly[2160]; __struct_768__ __135_forAlignmentOnly;}; // offset2160
	#pragma pack(push, 1)
	struct { char __136_offsetPadding[2176]; __struct_768__ __136;}; // offset2176
	#pragma pack(pop)
	struct { char __136_offsetPadding_forAlignmentOnly[2176]; __struct_768__ __136_forAlignmentOnly;}; // offset2176
	#pragma pack(push, 1)
	struct { char __137_offsetPadding[2192]; __struct_768__ __137;}; // offset2192
	#pragma pack(pop)
	struct { char __137_offsetPadding_forAlignmentOnly[2192]; __struct_768__ __137_forAlignmentOnly;}; // offset2192
	#pragma pack(push, 1)
	struct { char __138_offsetPadding[2208]; __struct_768__ __138;}; // offset2208
	#pragma pack(pop)
	struct { char __138_offsetPadding_forAlignmentOnly[2208]; __struct_768__ __138_forAlignmentOnly;}; // offset2208
	#pragma pack(push, 1)
	struct { char __139_offsetPadding[2224]; __struct_768__ __139;}; // offset2224
	#pragma pack(pop)
	struct { char __139_offsetPadding_forAlignmentOnly[2224]; __struct_768__ __139_forAlignmentOnly;}; // offset2224
	#pragma pack(push, 1)
	struct { char __140_offsetPadding[2240]; __struct_768__ __140;}; // offset2240
	#pragma pack(pop)
	struct { char __140_offsetPadding_forAlignmentOnly[2240]; __struct_768__ __140_forAlignmentOnly;}; // offset2240
	#pragma pack(push, 1)
	struct { char __141_offsetPadding[2256]; __struct_768__ __141;}; // offset2256
	#pragma pack(pop)
	struct { char __141_offsetPadding_forAlignmentOnly[2256]; __struct_768__ __141_forAlignmentOnly;}; // offset2256
	#pragma pack(push, 1)
	struct { char __142_offsetPadding[2272]; __struct_768__ __142;}; // offset2272
	#pragma pack(pop)
	struct { char __142_offsetPadding_forAlignmentOnly[2272]; __struct_768__ __142_forAlignmentOnly;}; // offset2272
	#pragma pack(push, 1)
	struct { char __143_offsetPadding[2288]; __struct_768__ __143;}; // offset2288
	#pragma pack(pop)
	struct { char __143_offsetPadding_forAlignmentOnly[2288]; __struct_768__ __143_forAlignmentOnly;}; // offset2288
	#pragma pack(push, 1)
	struct { char __144_offsetPadding[2304]; __struct_768__ __144;}; // offset2304
	#pragma pack(pop)
	struct { char __144_offsetPadding_forAlignmentOnly[2304]; __struct_768__ __144_forAlignmentOnly;}; // offset2304
	#pragma pack(push, 1)
	struct { char __145_offsetPadding[2320]; __struct_768__ __145;}; // offset2320
	#pragma pack(pop)
	struct { char __145_offsetPadding_forAlignmentOnly[2320]; __struct_768__ __145_forAlignmentOnly;}; // offset2320
	#pragma pack(push, 1)
	struct { char __146_offsetPadding[2336]; __struct_768__ __146;}; // offset2336
	#pragma pack(pop)
	struct { char __146_offsetPadding_forAlignmentOnly[2336]; __struct_768__ __146_forAlignmentOnly;}; // offset2336
	#pragma pack(push, 1)
	struct { char __147_offsetPadding[2352]; __struct_768__ __147;}; // offset2352
	#pragma pack(pop)
	struct { char __147_offsetPadding_forAlignmentOnly[2352]; __struct_768__ __147_forAlignmentOnly;}; // offset2352
	#pragma pack(push, 1)
	struct { char __148_offsetPadding[2368]; __struct_768__ __148;}; // offset2368
	#pragma pack(pop)
	struct { char __148_offsetPadding_forAlignmentOnly[2368]; __struct_768__ __148_forAlignmentOnly;}; // offset2368
	#pragma pack(push, 1)
	struct { char __149_offsetPadding[2384]; __struct_768__ __149;}; // offset2384
	#pragma pack(pop)
	struct { char __149_offsetPadding_forAlignmentOnly[2384]; __struct_768__ __149_forAlignmentOnly;}; // offset2384
	#pragma pack(push, 1)
	struct { char __150_offsetPadding[2400]; __struct_768__ __150;}; // offset2400
	#pragma pack(pop)
	struct { char __150_offsetPadding_forAlignmentOnly[2400]; __struct_768__ __150_forAlignmentOnly;}; // offset2400
	#pragma pack(push, 1)
	struct { char __151_offsetPadding[2416]; __struct_768__ __151;}; // offset2416
	#pragma pack(pop)
	struct { char __151_offsetPadding_forAlignmentOnly[2416]; __struct_768__ __151_forAlignmentOnly;}; // offset2416
	#pragma pack(push, 1)
	struct { char __152_offsetPadding[2432]; __struct_768__ __152;}; // offset2432
	#pragma pack(pop)
	struct { char __152_offsetPadding_forAlignmentOnly[2432]; __struct_768__ __152_forAlignmentOnly;}; // offset2432
	#pragma pack(push, 1)
	struct { char __153_offsetPadding[2448]; __struct_768__ __153;}; // offset2448
	#pragma pack(pop)
	struct { char __153_offsetPadding_forAlignmentOnly[2448]; __struct_768__ __153_forAlignmentOnly;}; // offset2448
	#pragma pack(push, 1)
	struct { char __154_offsetPadding[2464]; __struct_768__ __154;}; // offset2464
	#pragma pack(pop)
	struct { char __154_offsetPadding_forAlignmentOnly[2464]; __struct_768__ __154_forAlignmentOnly;}; // offset2464
	#pragma pack(push, 1)
	struct { char __155_offsetPadding[2480]; __struct_768__ __155;}; // offset2480
	#pragma pack(pop)
	struct { char __155_offsetPadding_forAlignmentOnly[2480]; __struct_768__ __155_forAlignmentOnly;}; // offset2480
	#pragma pack(push, 1)
	struct { char __156_offsetPadding[2496]; __struct_768__ __156;}; // offset2496
	#pragma pack(pop)
	struct { char __156_offsetPadding_forAlignmentOnly[2496]; __struct_768__ __156_forAlignmentOnly;}; // offset2496
	#pragma pack(push, 1)
	struct { char __157_offsetPadding[2512]; __struct_768__ __157;}; // offset2512
	#pragma pack(pop)
	struct { char __157_offsetPadding_forAlignmentOnly[2512]; __struct_768__ __157_forAlignmentOnly;}; // offset2512
	#pragma pack(push, 1)
	struct { char __158_offsetPadding[2528]; __struct_768__ __158;}; // offset2528
	#pragma pack(pop)
	struct { char __158_offsetPadding_forAlignmentOnly[2528]; __struct_768__ __158_forAlignmentOnly;}; // offset2528
	#pragma pack(push, 1)
	struct { char __159_offsetPadding[2544]; __struct_768__ __159;}; // offset2544
	#pragma pack(pop)
	struct { char __159_offsetPadding_forAlignmentOnly[2544]; __struct_768__ __159_forAlignmentOnly;}; // offset2544
	#pragma pack(push, 1)
	struct { char __160_offsetPadding[2560]; __struct_768__ __160;}; // offset2560
	#pragma pack(pop)
	struct { char __160_offsetPadding_forAlignmentOnly[2560]; __struct_768__ __160_forAlignmentOnly;}; // offset2560
	#pragma pack(push, 1)
	struct { char __161_offsetPadding[2576]; __struct_768__ __161;}; // offset2576
	#pragma pack(pop)
	struct { char __161_offsetPadding_forAlignmentOnly[2576]; __struct_768__ __161_forAlignmentOnly;}; // offset2576
	#pragma pack(push, 1)
	struct { char __162_offsetPadding[2592]; __struct_768__ __162;}; // offset2592
	#pragma pack(pop)
	struct { char __162_offsetPadding_forAlignmentOnly[2592]; __struct_768__ __162_forAlignmentOnly;}; // offset2592
	#pragma pack(push, 1)
	struct { char __163_offsetPadding[2608]; __struct_768__ __163;}; // offset2608
	#pragma pack(pop)
	struct { char __163_offsetPadding_forAlignmentOnly[2608]; __struct_768__ __163_forAlignmentOnly;}; // offset2608
	#pragma pack(push, 1)
	struct { char __164_offsetPadding[2624]; __struct_768__ __164;}; // offset2624
	#pragma pack(pop)
	struct { char __164_offsetPadding_forAlignmentOnly[2624]; __struct_768__ __164_forAlignmentOnly;}; // offset2624
	#pragma pack(push, 1)
	struct { char __165_offsetPadding[2640]; __struct_768__ __165;}; // offset2640
	#pragma pack(pop)
	struct { char __165_offsetPadding_forAlignmentOnly[2640]; __struct_768__ __165_forAlignmentOnly;}; // offset2640
	#pragma pack(push, 1)
	struct { char __166_offsetPadding[2656]; __struct_768__ __166;}; // offset2656
	#pragma pack(pop)
	struct { char __166_offsetPadding_forAlignmentOnly[2656]; __struct_768__ __166_forAlignmentOnly;}; // offset2656
	#pragma pack(push, 1)
	struct { char __167_offsetPadding[2672]; __struct_768__ __167;}; // offset2672
	#pragma pack(pop)
	struct { char __167_offsetPadding_forAlignmentOnly[2672]; __struct_768__ __167_forAlignmentOnly;}; // offset2672
	#pragma pack(push, 1)
	struct { char __168_offsetPadding[2688]; __struct_768__ __168;}; // offset2688
	#pragma pack(pop)
	struct { char __168_offsetPadding_forAlignmentOnly[2688]; __struct_768__ __168_forAlignmentOnly;}; // offset2688
	#pragma pack(push, 1)
	struct { char __169_offsetPadding[2704]; __struct_768__ __169;}; // offset2704
	#pragma pack(pop)
	struct { char __169_offsetPadding_forAlignmentOnly[2704]; __struct_768__ __169_forAlignmentOnly;}; // offset2704
	#pragma pack(push, 1)
	struct { char __170_offsetPadding[2720]; __struct_768__ __170;}; // offset2720
	#pragma pack(pop)
	struct { char __170_offsetPadding_forAlignmentOnly[2720]; __struct_768__ __170_forAlignmentOnly;}; // offset2720
	#pragma pack(push, 1)
	struct { char __171_offsetPadding[2736]; __struct_768__ __171;}; // offset2736
	#pragma pack(pop)
	struct { char __171_offsetPadding_forAlignmentOnly[2736]; __struct_768__ __171_forAlignmentOnly;}; // offset2736
	#pragma pack(push, 1)
	struct { char __172_offsetPadding[2752]; __struct_768__ __172;}; // offset2752
	#pragma pack(pop)
	struct { char __172_offsetPadding_forAlignmentOnly[2752]; __struct_768__ __172_forAlignmentOnly;}; // offset2752
	#pragma pack(push, 1)
	struct { char __173_offsetPadding[2768]; __struct_768__ __173;}; // offset2768
	#pragma pack(pop)
	struct { char __173_offsetPadding_forAlignmentOnly[2768]; __struct_768__ __173_forAlignmentOnly;}; // offset2768
	#pragma pack(push, 1)
	struct { char __174_offsetPadding[2784]; __struct_768__ __174;}; // offset2784
	#pragma pack(pop)
	struct { char __174_offsetPadding_forAlignmentOnly[2784]; __struct_768__ __174_forAlignmentOnly;}; // offset2784
	#pragma pack(push, 1)
	struct { char __175_offsetPadding[2800]; __struct_768__ __175;}; // offset2800
	#pragma pack(pop)
	struct { char __175_offsetPadding_forAlignmentOnly[2800]; __struct_768__ __175_forAlignmentOnly;}; // offset2800
	#pragma pack(push, 1)
	struct { char __176_offsetPadding[2816]; __struct_768__ __176;}; // offset2816
	#pragma pack(pop)
	struct { char __176_offsetPadding_forAlignmentOnly[2816]; __struct_768__ __176_forAlignmentOnly;}; // offset2816
	#pragma pack(push, 1)
	struct { char __177_offsetPadding[2832]; __struct_768__ __177;}; // offset2832
	#pragma pack(pop)
	struct { char __177_offsetPadding_forAlignmentOnly[2832]; __struct_768__ __177_forAlignmentOnly;}; // offset2832
	#pragma pack(push, 1)
	struct { char __178_offsetPadding[2848]; __struct_768__ __178;}; // offset2848
	#pragma pack(pop)
	struct { char __178_offsetPadding_forAlignmentOnly[2848]; __struct_768__ __178_forAlignmentOnly;}; // offset2848
	#pragma pack(push, 1)
	struct { char __179_offsetPadding[2864]; __struct_768__ __179;}; // offset2864
	#pragma pack(pop)
	struct { char __179_offsetPadding_forAlignmentOnly[2864]; __struct_768__ __179_forAlignmentOnly;}; // offset2864
	#pragma pack(push, 1)
	struct { char __180_offsetPadding[2880]; __struct_768__ __180;}; // offset2880
	#pragma pack(pop)
	struct { char __180_offsetPadding_forAlignmentOnly[2880]; __struct_768__ __180_forAlignmentOnly;}; // offset2880
	#pragma pack(push, 1)
	struct { char __181_offsetPadding[2896]; __struct_768__ __181;}; // offset2896
	#pragma pack(pop)
	struct { char __181_offsetPadding_forAlignmentOnly[2896]; __struct_768__ __181_forAlignmentOnly;}; // offset2896
	#pragma pack(push, 1)
	struct { char __182_offsetPadding[2912]; __struct_768__ __182;}; // offset2912
	#pragma pack(pop)
	struct { char __182_offsetPadding_forAlignmentOnly[2912]; __struct_768__ __182_forAlignmentOnly;}; // offset2912
	#pragma pack(push, 1)
	struct { char __183_offsetPadding[2928]; __struct_768__ __183;}; // offset2928
	#pragma pack(pop)
	struct { char __183_offsetPadding_forAlignmentOnly[2928]; __struct_768__ __183_forAlignmentOnly;}; // offset2928
	#pragma pack(push, 1)
	struct { char __184_offsetPadding[2944]; __struct_768__ __184;}; // offset2944
	#pragma pack(pop)
	struct { char __184_offsetPadding_forAlignmentOnly[2944]; __struct_768__ __184_forAlignmentOnly;}; // offset2944
	#pragma pack(push, 1)
	struct { char __185_offsetPadding[2960]; __struct_768__ __185;}; // offset2960
	#pragma pack(pop)
	struct { char __185_offsetPadding_forAlignmentOnly[2960]; __struct_768__ __185_forAlignmentOnly;}; // offset2960
	#pragma pack(push, 1)
	struct { char __186_offsetPadding[2976]; __struct_768__ __186;}; // offset2976
	#pragma pack(pop)
	struct { char __186_offsetPadding_forAlignmentOnly[2976]; __struct_768__ __186_forAlignmentOnly;}; // offset2976
	#pragma pack(push, 1)
	struct { char __187_offsetPadding[2992]; __struct_768__ __187;}; // offset2992
	#pragma pack(pop)
	struct { char __187_offsetPadding_forAlignmentOnly[2992]; __struct_768__ __187_forAlignmentOnly;}; // offset2992
	#pragma pack(push, 1)
	struct { char __188_offsetPadding[3008]; __struct_768__ __188;}; // offset3008
	#pragma pack(pop)
	struct { char __188_offsetPadding_forAlignmentOnly[3008]; __struct_768__ __188_forAlignmentOnly;}; // offset3008
	#pragma pack(push, 1)
	struct { char __189_offsetPadding[3024]; __struct_768__ __189;}; // offset3024
	#pragma pack(pop)
	struct { char __189_offsetPadding_forAlignmentOnly[3024]; __struct_768__ __189_forAlignmentOnly;}; // offset3024
	#pragma pack(push, 1)
	struct { char __190_offsetPadding[3040]; __struct_768__ __190;}; // offset3040
	#pragma pack(pop)
	struct { char __190_offsetPadding_forAlignmentOnly[3040]; __struct_768__ __190_forAlignmentOnly;}; // offset3040
	#pragma pack(push, 1)
	struct { char __191_offsetPadding[3056]; __struct_768__ __191;}; // offset3056
	#pragma pack(pop)
	struct { char __191_offsetPadding_forAlignmentOnly[3056]; __struct_768__ __191_forAlignmentOnly;}; // offset3056
	#pragma pack(push, 1)
	struct { char __192_offsetPadding[3072]; __struct_768__ __192;}; // offset3072
	#pragma pack(pop)
	struct { char __192_offsetPadding_forAlignmentOnly[3072]; __struct_768__ __192_forAlignmentOnly;}; // offset3072
	#pragma pack(push, 1)
	struct { char __193_offsetPadding[3088]; __struct_768__ __193;}; // offset3088
	#pragma pack(pop)
	struct { char __193_offsetPadding_forAlignmentOnly[3088]; __struct_768__ __193_forAlignmentOnly;}; // offset3088
	#pragma pack(push, 1)
	struct { char __194_offsetPadding[3104]; __struct_768__ __194;}; // offset3104
	#pragma pack(pop)
	struct { char __194_offsetPadding_forAlignmentOnly[3104]; __struct_768__ __194_forAlignmentOnly;}; // offset3104
	#pragma pack(push, 1)
	struct { char __195_offsetPadding[3120]; __struct_768__ __195;}; // offset3120
	#pragma pack(pop)
	struct { char __195_offsetPadding_forAlignmentOnly[3120]; __struct_768__ __195_forAlignmentOnly;}; // offset3120
	#pragma pack(push, 1)
	struct { char __196_offsetPadding[3136]; __struct_768__ __196;}; // offset3136
	#pragma pack(pop)
	struct { char __196_offsetPadding_forAlignmentOnly[3136]; __struct_768__ __196_forAlignmentOnly;}; // offset3136
	#pragma pack(push, 1)
	struct { char __197_offsetPadding[3152]; __struct_768__ __197;}; // offset3152
	#pragma pack(pop)
	struct { char __197_offsetPadding_forAlignmentOnly[3152]; __struct_768__ __197_forAlignmentOnly;}; // offset3152
	#pragma pack(push, 1)
	struct { char __198_offsetPadding[3168]; __struct_768__ __198;}; // offset3168
	#pragma pack(pop)
	struct { char __198_offsetPadding_forAlignmentOnly[3168]; __struct_768__ __198_forAlignmentOnly;}; // offset3168
	#pragma pack(push, 1)
	struct { char __199_offsetPadding[3184]; __struct_768__ __199;}; // offset3184
	#pragma pack(pop)
	struct { char __199_offsetPadding_forAlignmentOnly[3184]; __struct_768__ __199_forAlignmentOnly;}; // offset3184
	#pragma pack(push, 1)
	struct { char __200_offsetPadding[3200]; __struct_768__ __200;}; // offset3200
	#pragma pack(pop)
	struct { char __200_offsetPadding_forAlignmentOnly[3200]; __struct_768__ __200_forAlignmentOnly;}; // offset3200
	#pragma pack(push, 1)
	struct { char __201_offsetPadding[3216]; __struct_768__ __201;}; // offset3216
	#pragma pack(pop)
	struct { char __201_offsetPadding_forAlignmentOnly[3216]; __struct_768__ __201_forAlignmentOnly;}; // offset3216
	#pragma pack(push, 1)
	struct { char __202_offsetPadding[3232]; __struct_768__ __202;}; // offset3232
	#pragma pack(pop)
	struct { char __202_offsetPadding_forAlignmentOnly[3232]; __struct_768__ __202_forAlignmentOnly;}; // offset3232
	#pragma pack(push, 1)
	struct { char __203_offsetPadding[3248]; __struct_768__ __203;}; // offset3248
	#pragma pack(pop)
	struct { char __203_offsetPadding_forAlignmentOnly[3248]; __struct_768__ __203_forAlignmentOnly;}; // offset3248
	#pragma pack(push, 1)
	struct { char __204_offsetPadding[3264]; __struct_768__ __204;}; // offset3264
	#pragma pack(pop)
	struct { char __204_offsetPadding_forAlignmentOnly[3264]; __struct_768__ __204_forAlignmentOnly;}; // offset3264
	#pragma pack(push, 1)
	struct { char __205_offsetPadding[3280]; __struct_768__ __205;}; // offset3280
	#pragma pack(pop)
	struct { char __205_offsetPadding_forAlignmentOnly[3280]; __struct_768__ __205_forAlignmentOnly;}; // offset3280
	#pragma pack(push, 1)
	struct { char __206_offsetPadding[3296]; __struct_768__ __206;}; // offset3296
	#pragma pack(pop)
	struct { char __206_offsetPadding_forAlignmentOnly[3296]; __struct_768__ __206_forAlignmentOnly;}; // offset3296
	#pragma pack(push, 1)
	struct { char __207_offsetPadding[3312]; __struct_768__ __207;}; // offset3312
	#pragma pack(pop)
	struct { char __207_offsetPadding_forAlignmentOnly[3312]; __struct_768__ __207_forAlignmentOnly;}; // offset3312
	#pragma pack(push, 1)
	struct { char __208_offsetPadding[3328]; __struct_768__ __208;}; // offset3328
	#pragma pack(pop)
	struct { char __208_offsetPadding_forAlignmentOnly[3328]; __struct_768__ __208_forAlignmentOnly;}; // offset3328
	#pragma pack(push, 1)
	struct { char __209_offsetPadding[3344]; __struct_768__ __209;}; // offset3344
	#pragma pack(pop)
	struct { char __209_offsetPadding_forAlignmentOnly[3344]; __struct_768__ __209_forAlignmentOnly;}; // offset3344
	#pragma pack(push, 1)
	struct { char __210_offsetPadding[3360]; __struct_768__ __210;}; // offset3360
	#pragma pack(pop)
	struct { char __210_offsetPadding_forAlignmentOnly[3360]; __struct_768__ __210_forAlignmentOnly;}; // offset3360
	#pragma pack(push, 1)
	struct { char __211_offsetPadding[3376]; __struct_768__ __211;}; // offset3376
	#pragma pack(pop)
	struct { char __211_offsetPadding_forAlignmentOnly[3376]; __struct_768__ __211_forAlignmentOnly;}; // offset3376
	#pragma pack(push, 1)
	struct { char __212_offsetPadding[3392]; __struct_768__ __212;}; // offset3392
	#pragma pack(pop)
	struct { char __212_offsetPadding_forAlignmentOnly[3392]; __struct_768__ __212_forAlignmentOnly;}; // offset3392
	#pragma pack(push, 1)
	struct { char __213_offsetPadding[3408]; __struct_768__ __213;}; // offset3408
	#pragma pack(pop)
	struct { char __213_offsetPadding_forAlignmentOnly[3408]; __struct_768__ __213_forAlignmentOnly;}; // offset3408
	#pragma pack(push, 1)
	struct { char __214_offsetPadding[3424]; __struct_768__ __214;}; // offset3424
	#pragma pack(pop)
	struct { char __214_offsetPadding_forAlignmentOnly[3424]; __struct_768__ __214_forAlignmentOnly;}; // offset3424
	#pragma pack(push, 1)
	struct { char __215_offsetPadding[3440]; __struct_768__ __215;}; // offset3440
	#pragma pack(pop)
	struct { char __215_offsetPadding_forAlignmentOnly[3440]; __struct_768__ __215_forAlignmentOnly;}; // offset3440
	#pragma pack(push, 1)
	struct { char __216_offsetPadding[3456]; __struct_768__ __216;}; // offset3456
	#pragma pack(pop)
	struct { char __216_offsetPadding_forAlignmentOnly[3456]; __struct_768__ __216_forAlignmentOnly;}; // offset3456
	#pragma pack(push, 1)
	struct { char __217_offsetPadding[3472]; __struct_768__ __217;}; // offset3472
	#pragma pack(pop)
	struct { char __217_offsetPadding_forAlignmentOnly[3472]; __struct_768__ __217_forAlignmentOnly;}; // offset3472
	#pragma pack(push, 1)
	struct { char __218_offsetPadding[3488]; __struct_768__ __218;}; // offset3488
	#pragma pack(pop)
	struct { char __218_offsetPadding_forAlignmentOnly[3488]; __struct_768__ __218_forAlignmentOnly;}; // offset3488
	#pragma pack(push, 1)
	struct { char __219_offsetPadding[3504]; __struct_768__ __219;}; // offset3504
	#pragma pack(pop)
	struct { char __219_offsetPadding_forAlignmentOnly[3504]; __struct_768__ __219_forAlignmentOnly;}; // offset3504
	#pragma pack(push, 1)
	struct { char __220_offsetPadding[3520]; __struct_768__ __220;}; // offset3520
	#pragma pack(pop)
	struct { char __220_offsetPadding_forAlignmentOnly[3520]; __struct_768__ __220_forAlignmentOnly;}; // offset3520
	#pragma pack(push, 1)
	struct { char __221_offsetPadding[3536]; __struct_768__ __221;}; // offset3536
	#pragma pack(pop)
	struct { char __221_offsetPadding_forAlignmentOnly[3536]; __struct_768__ __221_forAlignmentOnly;}; // offset3536
	#pragma pack(push, 1)
	struct { char __222_offsetPadding[3552]; __struct_768__ __222;}; // offset3552
	#pragma pack(pop)
	struct { char __222_offsetPadding_forAlignmentOnly[3552]; __struct_768__ __222_forAlignmentOnly;}; // offset3552
	#pragma pack(push, 1)
	struct { char __223_offsetPadding[3568]; __struct_768__ __223;}; // offset3568
	#pragma pack(pop)
	struct { char __223_offsetPadding_forAlignmentOnly[3568]; __struct_768__ __223_forAlignmentOnly;}; // offset3568
	#pragma pack(push, 1)
	struct { char __224_offsetPadding[3584]; __struct_768__ __224;}; // offset3584
	#pragma pack(pop)
	struct { char __224_offsetPadding_forAlignmentOnly[3584]; __struct_768__ __224_forAlignmentOnly;}; // offset3584
	#pragma pack(push, 1)
	struct { char __225_offsetPadding[3600]; __struct_768__ __225;}; // offset3600
	#pragma pack(pop)
	struct { char __225_offsetPadding_forAlignmentOnly[3600]; __struct_768__ __225_forAlignmentOnly;}; // offset3600
	#pragma pack(push, 1)
	struct { char __226_offsetPadding[3616]; __struct_768__ __226;}; // offset3616
	#pragma pack(pop)
	struct { char __226_offsetPadding_forAlignmentOnly[3616]; __struct_768__ __226_forAlignmentOnly;}; // offset3616
	#pragma pack(push, 1)
	struct { char __227_offsetPadding[3632]; __struct_768__ __227;}; // offset3632
	#pragma pack(pop)
	struct { char __227_offsetPadding_forAlignmentOnly[3632]; __struct_768__ __227_forAlignmentOnly;}; // offset3632
	#pragma pack(push, 1)
	struct { char __228_offsetPadding[3648]; __struct_768__ __228;}; // offset3648
	#pragma pack(pop)
	struct { char __228_offsetPadding_forAlignmentOnly[3648]; __struct_768__ __228_forAlignmentOnly;}; // offset3648
	#pragma pack(push, 1)
	struct { char __229_offsetPadding[3664]; __struct_768__ __229;}; // offset3664
	#pragma pack(pop)
	struct { char __229_offsetPadding_forAlignmentOnly[3664]; __struct_768__ __229_forAlignmentOnly;}; // offset3664
	#pragma pack(push, 1)
	struct { char __230_offsetPadding[3680]; __struct_768__ __230;}; // offset3680
	#pragma pack(pop)
	struct { char __230_offsetPadding_forAlignmentOnly[3680]; __struct_768__ __230_forAlignmentOnly;}; // offset3680
	#pragma pack(push, 1)
	struct { char __231_offsetPadding[3696]; __struct_768__ __231;}; // offset3696
	#pragma pack(pop)
	struct { char __231_offsetPadding_forAlignmentOnly[3696]; __struct_768__ __231_forAlignmentOnly;}; // offset3696
	#pragma pack(push, 1)
	struct { char __232_offsetPadding[3712]; __struct_768__ __232;}; // offset3712
	#pragma pack(pop)
	struct { char __232_offsetPadding_forAlignmentOnly[3712]; __struct_768__ __232_forAlignmentOnly;}; // offset3712
	#pragma pack(push, 1)
	struct { char __233_offsetPadding[3728]; __struct_768__ __233;}; // offset3728
	#pragma pack(pop)
	struct { char __233_offsetPadding_forAlignmentOnly[3728]; __struct_768__ __233_forAlignmentOnly;}; // offset3728
	#pragma pack(push, 1)
	struct { char __234_offsetPadding[3744]; __struct_768__ __234;}; // offset3744
	#pragma pack(pop)
	struct { char __234_offsetPadding_forAlignmentOnly[3744]; __struct_768__ __234_forAlignmentOnly;}; // offset3744
	#pragma pack(push, 1)
	struct { char __235_offsetPadding[3760]; __struct_768__ __235;}; // offset3760
	#pragma pack(pop)
	struct { char __235_offsetPadding_forAlignmentOnly[3760]; __struct_768__ __235_forAlignmentOnly;}; // offset3760
	#pragma pack(push, 1)
	struct { char __236_offsetPadding[3776]; __struct_768__ __236;}; // offset3776
	#pragma pack(pop)
	struct { char __236_offsetPadding_forAlignmentOnly[3776]; __struct_768__ __236_forAlignmentOnly;}; // offset3776
	#pragma pack(push, 1)
	struct { char __237_offsetPadding[3792]; __struct_768__ __237;}; // offset3792
	#pragma pack(pop)
	struct { char __237_offsetPadding_forAlignmentOnly[3792]; __struct_768__ __237_forAlignmentOnly;}; // offset3792
	#pragma pack(push, 1)
	struct { char __238_offsetPadding[3808]; __struct_768__ __238;}; // offset3808
	#pragma pack(pop)
	struct { char __238_offsetPadding_forAlignmentOnly[3808]; __struct_768__ __238_forAlignmentOnly;}; // offset3808
	#pragma pack(push, 1)
	struct { char __239_offsetPadding[3824]; __struct_768__ __239;}; // offset3824
	#pragma pack(pop)
	struct { char __239_offsetPadding_forAlignmentOnly[3824]; __struct_768__ __239_forAlignmentOnly;}; // offset3824
	#pragma pack(push, 1)
	struct { char __240_offsetPadding[3840]; __struct_768__ __240;}; // offset3840
	#pragma pack(pop)
	struct { char __240_offsetPadding_forAlignmentOnly[3840]; __struct_768__ __240_forAlignmentOnly;}; // offset3840
	#pragma pack(push, 1)
	struct { char __241_offsetPadding[3856]; __struct_768__ __241;}; // offset3856
	#pragma pack(pop)
	struct { char __241_offsetPadding_forAlignmentOnly[3856]; __struct_768__ __241_forAlignmentOnly;}; // offset3856
	#pragma pack(push, 1)
	struct { char __242_offsetPadding[3872]; __struct_768__ __242;}; // offset3872
	#pragma pack(pop)
	struct { char __242_offsetPadding_forAlignmentOnly[3872]; __struct_768__ __242_forAlignmentOnly;}; // offset3872
	#pragma pack(push, 1)
	struct { char __243_offsetPadding[3888]; __struct_768__ __243;}; // offset3888
	#pragma pack(pop)
	struct { char __243_offsetPadding_forAlignmentOnly[3888]; __struct_768__ __243_forAlignmentOnly;}; // offset3888
	#pragma pack(push, 1)
	struct { char __244_offsetPadding[3904]; __struct_768__ __244;}; // offset3904
	#pragma pack(pop)
	struct { char __244_offsetPadding_forAlignmentOnly[3904]; __struct_768__ __244_forAlignmentOnly;}; // offset3904
	#pragma pack(push, 1)
	struct { char __245_offsetPadding[3920]; __struct_768__ __245;}; // offset3920
	#pragma pack(pop)
	struct { char __245_offsetPadding_forAlignmentOnly[3920]; __struct_768__ __245_forAlignmentOnly;}; // offset3920
	#pragma pack(push, 1)
	struct { char __246_offsetPadding[3936]; __struct_768__ __246;}; // offset3936
	#pragma pack(pop)
	struct { char __246_offsetPadding_forAlignmentOnly[3936]; __struct_768__ __246_forAlignmentOnly;}; // offset3936
	#pragma pack(push, 1)
	struct { char __247_offsetPadding[3952]; __struct_768__ __247;}; // offset3952
	#pragma pack(pop)
	struct { char __247_offsetPadding_forAlignmentOnly[3952]; __struct_768__ __247_forAlignmentOnly;}; // offset3952
	#pragma pack(push, 1)
	struct { char __248_offsetPadding[3968]; __struct_768__ __248;}; // offset3968
	#pragma pack(pop)
	struct { char __248_offsetPadding_forAlignmentOnly[3968]; __struct_768__ __248_forAlignmentOnly;}; // offset3968
	#pragma pack(push, 1)
	struct { char __249_offsetPadding[3984]; __struct_768__ __249;}; // offset3984
	#pragma pack(pop)
	struct { char __249_offsetPadding_forAlignmentOnly[3984]; __struct_768__ __249_forAlignmentOnly;}; // offset3984
	#pragma pack(push, 1)
	struct { char __250_offsetPadding[4000]; __struct_768__ __250;}; // offset4000
	#pragma pack(pop)
	struct { char __250_offsetPadding_forAlignmentOnly[4000]; __struct_768__ __250_forAlignmentOnly;}; // offset4000
	#pragma pack(push, 1)
	struct { char __251_offsetPadding[4016]; __struct_768__ __251;}; // offset4016
	#pragma pack(pop)
	struct { char __251_offsetPadding_forAlignmentOnly[4016]; __struct_768__ __251_forAlignmentOnly;}; // offset4016
	#pragma pack(push, 1)
	struct { char __252_offsetPadding[4032]; __struct_768__ __252;}; // offset4032
	#pragma pack(pop)
	struct { char __252_offsetPadding_forAlignmentOnly[4032]; __struct_768__ __252_forAlignmentOnly;}; // offset4032
	#pragma pack(push, 1)
	struct { char __253_offsetPadding[4048]; __struct_768__ __253;}; // offset4048
	#pragma pack(pop)
	struct { char __253_offsetPadding_forAlignmentOnly[4048]; __struct_768__ __253_forAlignmentOnly;}; // offset4048
	#pragma pack(push, 1)
	struct { char __254_offsetPadding[4064]; __struct_768__ __254;}; // offset4064
	#pragma pack(pop)
	struct { char __254_offsetPadding_forAlignmentOnly[4064]; __struct_768__ __254_forAlignmentOnly;}; // offset4064
	#pragma pack(push, 1)
	struct { char __255_offsetPadding[4080]; uint8_t __255;}; // byte4080
	#pragma pack(pop)
	struct { char __255_offsetPadding_forAlignmentOnly[4080]; uint8_t __255_forAlignmentOnly;}; // byte4080
	#pragma pack(push, 1)
	struct { char __256_offsetPadding[4081]; uint8_t __256;}; // byte4081
	#pragma pack(pop)
	struct { char __256_offsetPadding_forAlignmentOnly[4081]; uint8_t __256_forAlignmentOnly;}; // byte4081
	#pragma pack(push, 1)
	struct { char __257_offsetPadding[4082]; uint8_t __257;}; // byte4082
	#pragma pack(pop)
	struct { char __257_offsetPadding_forAlignmentOnly[4082]; uint8_t __257_forAlignmentOnly;}; // byte4082
	#pragma pack(push, 1)
	struct { char __258_offsetPadding[4083]; uint8_t __258;}; // byte4083
	#pragma pack(pop)
	struct { char __258_offsetPadding_forAlignmentOnly[4083]; uint8_t __258_forAlignmentOnly;}; // byte4083
	#pragma pack(push, 1)
	struct { char __259_offsetPadding[4084]; uint8_t __259;}; // byte4084
	#pragma pack(pop)
	struct { char __259_offsetPadding_forAlignmentOnly[4084]; uint8_t __259_forAlignmentOnly;}; // byte4084
	#pragma pack(push, 1)
	struct { char __260_offsetPadding[4085]; uint8_t __260;}; // byte4085
	#pragma pack(pop)
	struct { char __260_offsetPadding_forAlignmentOnly[4085]; uint8_t __260_forAlignmentOnly;}; // byte4085
	#pragma pack(push, 1)
	struct { char __261_offsetPadding[4086]; uint8_t __261;}; // byte4086
	#pragma pack(pop)
	struct { char __261_offsetPadding_forAlignmentOnly[4086]; uint8_t __261_forAlignmentOnly;}; // byte4086
	#pragma pack(push, 1)
	struct { char __262_offsetPadding[4087]; uint8_t __262;}; // byte4087
	#pragma pack(pop)
	struct { char __262_offsetPadding_forAlignmentOnly[4087]; uint8_t __262_forAlignmentOnly;}; // byte4087
	#pragma pack(push, 1)
	struct { char __263_offsetPadding[4088]; uint8_t __263;}; // byte4088
	#pragma pack(pop)
	struct { char __263_offsetPadding_forAlignmentOnly[4088]; uint8_t __263_forAlignmentOnly;}; // byte4088
	#pragma pack(push, 1)
	struct { char __264_offsetPadding[4089]; uint8_t __264;}; // byte4089
	#pragma pack(pop)
	struct { char __264_offsetPadding_forAlignmentOnly[4089]; uint8_t __264_forAlignmentOnly;}; // byte4089
	#pragma pack(push, 1)
	struct { char __265_offsetPadding[4090]; uint8_t __265;}; // byte4090
	#pragma pack(pop)
	struct { char __265_offsetPadding_forAlignmentOnly[4090]; uint8_t __265_forAlignmentOnly;}; // byte4090
	#pragma pack(push, 1)
	struct { char __266_offsetPadding[4091]; uint8_t __266;}; // byte4091
	#pragma pack(pop)
	struct { char __266_offsetPadding_forAlignmentOnly[4091]; uint8_t __266_forAlignmentOnly;}; // byte4091
	#pragma pack(push, 1)
	struct { char __267_offsetPadding[4092]; uint8_t __267;}; // byte4092
	#pragma pack(pop)
	struct { char __267_offsetPadding_forAlignmentOnly[4092]; uint8_t __267_forAlignmentOnly;}; // byte4092
	#pragma pack(push, 1)
	struct { char __268_offsetPadding[4093]; uint8_t __268;}; // byte4093
	#pragma pack(pop)
	struct { char __268_offsetPadding_forAlignmentOnly[4093]; uint8_t __268_forAlignmentOnly;}; // byte4093
	};
};
// Unity.Collections.FixedList4096Bytes`1<System.Object>
struct __struct_103__ {
	uint16_t __0; // length
	__struct_770__ __1; // buffer
};
// Unity.Collections.FixedBytes510
struct __struct_771__ {
	union {
	struct { char __fieldSize_offsetPadding[510];};
	#pragma pack(push, 1)
	struct { __struct_768__ __0;}; // offset0000
	#pragma pack(pop)
	struct { __struct_768__ __0_forAlignmentOnly;}; // offset0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[16]; __struct_768__ __1;}; // offset0016
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[16]; __struct_768__ __1_forAlignmentOnly;}; // offset0016
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[32]; __struct_768__ __2;}; // offset0032
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[32]; __struct_768__ __2_forAlignmentOnly;}; // offset0032
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[48]; __struct_768__ __3;}; // offset0048
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[48]; __struct_768__ __3_forAlignmentOnly;}; // offset0048
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[64]; __struct_768__ __4;}; // offset0064
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[64]; __struct_768__ __4_forAlignmentOnly;}; // offset0064
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[80]; __struct_768__ __5;}; // offset0080
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[80]; __struct_768__ __5_forAlignmentOnly;}; // offset0080
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[96]; __struct_768__ __6;}; // offset0096
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[96]; __struct_768__ __6_forAlignmentOnly;}; // offset0096
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[112]; __struct_768__ __7;}; // offset0112
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[112]; __struct_768__ __7_forAlignmentOnly;}; // offset0112
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[128]; __struct_768__ __8;}; // offset0128
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[128]; __struct_768__ __8_forAlignmentOnly;}; // offset0128
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[144]; __struct_768__ __9;}; // offset0144
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[144]; __struct_768__ __9_forAlignmentOnly;}; // offset0144
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[160]; __struct_768__ __10;}; // offset0160
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[160]; __struct_768__ __10_forAlignmentOnly;}; // offset0160
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[176]; __struct_768__ __11;}; // offset0176
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[176]; __struct_768__ __11_forAlignmentOnly;}; // offset0176
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[192]; __struct_768__ __12;}; // offset0192
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[192]; __struct_768__ __12_forAlignmentOnly;}; // offset0192
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[208]; __struct_768__ __13;}; // offset0208
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[208]; __struct_768__ __13_forAlignmentOnly;}; // offset0208
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[224]; __struct_768__ __14;}; // offset0224
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[224]; __struct_768__ __14_forAlignmentOnly;}; // offset0224
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[240]; __struct_768__ __15;}; // offset0240
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[240]; __struct_768__ __15_forAlignmentOnly;}; // offset0240
	#pragma pack(push, 1)
	struct { char __16_offsetPadding[256]; __struct_768__ __16;}; // offset0256
	#pragma pack(pop)
	struct { char __16_offsetPadding_forAlignmentOnly[256]; __struct_768__ __16_forAlignmentOnly;}; // offset0256
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[272]; __struct_768__ __17;}; // offset0272
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[272]; __struct_768__ __17_forAlignmentOnly;}; // offset0272
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[288]; __struct_768__ __18;}; // offset0288
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[288]; __struct_768__ __18_forAlignmentOnly;}; // offset0288
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[304]; __struct_768__ __19;}; // offset0304
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[304]; __struct_768__ __19_forAlignmentOnly;}; // offset0304
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[320]; __struct_768__ __20;}; // offset0320
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[320]; __struct_768__ __20_forAlignmentOnly;}; // offset0320
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[336]; __struct_768__ __21;}; // offset0336
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[336]; __struct_768__ __21_forAlignmentOnly;}; // offset0336
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[352]; __struct_768__ __22;}; // offset0352
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[352]; __struct_768__ __22_forAlignmentOnly;}; // offset0352
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[368]; __struct_768__ __23;}; // offset0368
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[368]; __struct_768__ __23_forAlignmentOnly;}; // offset0368
	#pragma pack(push, 1)
	struct { char __24_offsetPadding[384]; __struct_768__ __24;}; // offset0384
	#pragma pack(pop)
	struct { char __24_offsetPadding_forAlignmentOnly[384]; __struct_768__ __24_forAlignmentOnly;}; // offset0384
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[400]; __struct_768__ __25;}; // offset0400
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[400]; __struct_768__ __25_forAlignmentOnly;}; // offset0400
	#pragma pack(push, 1)
	struct { char __26_offsetPadding[416]; __struct_768__ __26;}; // offset0416
	#pragma pack(pop)
	struct { char __26_offsetPadding_forAlignmentOnly[416]; __struct_768__ __26_forAlignmentOnly;}; // offset0416
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[432]; __struct_768__ __27;}; // offset0432
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[432]; __struct_768__ __27_forAlignmentOnly;}; // offset0432
	#pragma pack(push, 1)
	struct { char __28_offsetPadding[448]; __struct_768__ __28;}; // offset0448
	#pragma pack(pop)
	struct { char __28_offsetPadding_forAlignmentOnly[448]; __struct_768__ __28_forAlignmentOnly;}; // offset0448
	#pragma pack(push, 1)
	struct { char __29_offsetPadding[464]; __struct_768__ __29;}; // offset0464
	#pragma pack(pop)
	struct { char __29_offsetPadding_forAlignmentOnly[464]; __struct_768__ __29_forAlignmentOnly;}; // offset0464
	#pragma pack(push, 1)
	struct { char __30_offsetPadding[480]; __struct_768__ __30;}; // offset0480
	#pragma pack(pop)
	struct { char __30_offsetPadding_forAlignmentOnly[480]; __struct_768__ __30_forAlignmentOnly;}; // offset0480
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[496]; uint8_t __31;}; // byte0496
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[496]; uint8_t __31_forAlignmentOnly;}; // byte0496
	#pragma pack(push, 1)
	struct { char __32_offsetPadding[497]; uint8_t __32;}; // byte0497
	#pragma pack(pop)
	struct { char __32_offsetPadding_forAlignmentOnly[497]; uint8_t __32_forAlignmentOnly;}; // byte0497
	#pragma pack(push, 1)
	struct { char __33_offsetPadding[498]; uint8_t __33;}; // byte0498
	#pragma pack(pop)
	struct { char __33_offsetPadding_forAlignmentOnly[498]; uint8_t __33_forAlignmentOnly;}; // byte0498
	#pragma pack(push, 1)
	struct { char __34_offsetPadding[499]; uint8_t __34;}; // byte0499
	#pragma pack(pop)
	struct { char __34_offsetPadding_forAlignmentOnly[499]; uint8_t __34_forAlignmentOnly;}; // byte0499
	#pragma pack(push, 1)
	struct { char __35_offsetPadding[500]; uint8_t __35;}; // byte0500
	#pragma pack(pop)
	struct { char __35_offsetPadding_forAlignmentOnly[500]; uint8_t __35_forAlignmentOnly;}; // byte0500
	#pragma pack(push, 1)
	struct { char __36_offsetPadding[501]; uint8_t __36;}; // byte0501
	#pragma pack(pop)
	struct { char __36_offsetPadding_forAlignmentOnly[501]; uint8_t __36_forAlignmentOnly;}; // byte0501
	#pragma pack(push, 1)
	struct { char __37_offsetPadding[502]; uint8_t __37;}; // byte0502
	#pragma pack(pop)
	struct { char __37_offsetPadding_forAlignmentOnly[502]; uint8_t __37_forAlignmentOnly;}; // byte0502
	#pragma pack(push, 1)
	struct { char __38_offsetPadding[503]; uint8_t __38;}; // byte0503
	#pragma pack(pop)
	struct { char __38_offsetPadding_forAlignmentOnly[503]; uint8_t __38_forAlignmentOnly;}; // byte0503
	#pragma pack(push, 1)
	struct { char __39_offsetPadding[504]; uint8_t __39;}; // byte0504
	#pragma pack(pop)
	struct { char __39_offsetPadding_forAlignmentOnly[504]; uint8_t __39_forAlignmentOnly;}; // byte0504
	#pragma pack(push, 1)
	struct { char __40_offsetPadding[505]; uint8_t __40;}; // byte0505
	#pragma pack(pop)
	struct { char __40_offsetPadding_forAlignmentOnly[505]; uint8_t __40_forAlignmentOnly;}; // byte0505
	#pragma pack(push, 1)
	struct { char __41_offsetPadding[506]; uint8_t __41;}; // byte0506
	#pragma pack(pop)
	struct { char __41_offsetPadding_forAlignmentOnly[506]; uint8_t __41_forAlignmentOnly;}; // byte0506
	#pragma pack(push, 1)
	struct { char __42_offsetPadding[507]; uint8_t __42;}; // byte0507
	#pragma pack(pop)
	struct { char __42_offsetPadding_forAlignmentOnly[507]; uint8_t __42_forAlignmentOnly;}; // byte0507
	#pragma pack(push, 1)
	struct { char __43_offsetPadding[508]; uint8_t __43;}; // byte0508
	#pragma pack(pop)
	struct { char __43_offsetPadding_forAlignmentOnly[508]; uint8_t __43_forAlignmentOnly;}; // byte0508
	#pragma pack(push, 1)
	struct { char __44_offsetPadding[509]; uint8_t __44;}; // byte0509
	#pragma pack(pop)
	struct { char __44_offsetPadding_forAlignmentOnly[509]; uint8_t __44_forAlignmentOnly;}; // byte0509
	};
};
// Unity.Collections.FixedList512Bytes`1<System.Object>
struct __struct_104__ {
	uint16_t __0; // length
	__struct_771__ __1; // buffer
};
// Unity.Collections.FixedBytes62
struct __struct_772__ {
	union {
	struct { char __fieldSize_offsetPadding[62];};
	#pragma pack(push, 1)
	struct { __struct_768__ __0;}; // offset0000
	#pragma pack(pop)
	struct { __struct_768__ __0_forAlignmentOnly;}; // offset0000
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[16]; __struct_768__ __1;}; // offset0016
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[16]; __struct_768__ __1_forAlignmentOnly;}; // offset0016
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[32]; __struct_768__ __2;}; // offset0032
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[32]; __struct_768__ __2_forAlignmentOnly;}; // offset0032
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[48]; uint8_t __3;}; // byte0048
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[48]; uint8_t __3_forAlignmentOnly;}; // byte0048
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[49]; uint8_t __4;}; // byte0049
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[49]; uint8_t __4_forAlignmentOnly;}; // byte0049
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[50]; uint8_t __5;}; // byte0050
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[50]; uint8_t __5_forAlignmentOnly;}; // byte0050
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[51]; uint8_t __6;}; // byte0051
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[51]; uint8_t __6_forAlignmentOnly;}; // byte0051
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[52]; uint8_t __7;}; // byte0052
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[52]; uint8_t __7_forAlignmentOnly;}; // byte0052
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[53]; uint8_t __8;}; // byte0053
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[53]; uint8_t __8_forAlignmentOnly;}; // byte0053
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[54]; uint8_t __9;}; // byte0054
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[54]; uint8_t __9_forAlignmentOnly;}; // byte0054
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[55]; uint8_t __10;}; // byte0055
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[55]; uint8_t __10_forAlignmentOnly;}; // byte0055
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[56]; uint8_t __11;}; // byte0056
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[56]; uint8_t __11_forAlignmentOnly;}; // byte0056
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[57]; uint8_t __12;}; // byte0057
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[57]; uint8_t __12_forAlignmentOnly;}; // byte0057
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[58]; uint8_t __13;}; // byte0058
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[58]; uint8_t __13_forAlignmentOnly;}; // byte0058
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[59]; uint8_t __14;}; // byte0059
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[59]; uint8_t __14_forAlignmentOnly;}; // byte0059
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[60]; uint8_t __15;}; // byte0060
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[60]; uint8_t __15_forAlignmentOnly;}; // byte0060
	#pragma pack(push, 1)
	struct { char __16_offsetPadding[61]; uint8_t __16;}; // byte0061
	#pragma pack(pop)
	struct { char __16_offsetPadding_forAlignmentOnly[61]; uint8_t __16_forAlignmentOnly;}; // byte0061
	};
};
// Unity.Collections.FixedList64Bytes`1<System.Object>
struct __struct_105__ {
	uint16_t __0; // length
	__struct_772__ __1; // buffer
};
// Unity.Collections.FixedString128Bytes
union __struct_106__ {
	struct { char __fieldSize_offsetPadding[128];};
	struct {
	uint16_t __0; // utf8LengthInBytes
	__struct_767__ __1; // bytes
	};
};
// Unity.Collections.FixedString32Bytes
union __struct_107__ {
	struct { char __fieldSize_offsetPadding[32];};
	struct {
	uint16_t __0; // utf8LengthInBytes
	__struct_769__ __1; // bytes
	};
};
// Unity.Collections.FixedString4096Bytes
union __struct_108__ {
	struct { char __fieldSize_offsetPadding[4096];};
	struct {
	uint16_t __0; // utf8LengthInBytes
	__struct_770__ __1; // bytes
	};
};
// Unity.Collections.FixedString512Bytes
union __struct_109__ {
	struct { char __fieldSize_offsetPadding[512];};
	struct {
	uint16_t __0; // utf8LengthInBytes
	__struct_771__ __1; // bytes
	};
};
// Unity.Collections.FixedString64Bytes
union __struct_110__ {
	struct { char __fieldSize_offsetPadding[64];};
	struct {
	uint16_t __0; // utf8LengthInBytes
	__struct_772__ __1; // bytes
	};
};
// Unity.Collections.NativeList`1<System.Byte>
struct __struct_510__ {
	uintptr_t __0; // m_ListData
	__struct_68__ __1; // m_DeprecatedAllocator
};
// Unity.Collections.HeapString
struct __struct_111__ {
	__struct_510__ __0; // m_Data
};
// Unity.Collections.NativeText
struct __struct_114__ {
	uintptr_t __0; // m_Data
};
// Unity.Jobs.JobHandle
struct __struct_115__ {
	uint64_t __0; // jobGroup
	int32_t __1; // version
};
// Unity.Mathematics.float3
struct __struct_148__ {
	float __0; // x
	float __1; // y
	float __2; // z
};
// Unity.Mathematics.Geometry.MinMaxAABB
struct __struct_116__ {
	__struct_148__ __0; // Min
	__struct_148__ __1; // Max
};
// Unity.Mathematics.bool2
struct __struct_120__ {
	uint8_t __0; // x
	uint8_t __1; // y
};
// Unity.Mathematics.bool2x2
struct __struct_117__ {
	__struct_120__ __0; // c0
	__struct_120__ __1; // c1
};
// Unity.Mathematics.bool2x3
struct __struct_118__ {
	__struct_120__ __0; // c0
	__struct_120__ __1; // c1
	__struct_120__ __2; // c2
};
// Unity.Mathematics.bool2x4
struct __struct_119__ {
	__struct_120__ __0; // c0
	__struct_120__ __1; // c1
	__struct_120__ __2; // c2
	__struct_120__ __3; // c3
};
// Unity.Mathematics.bool3
struct __struct_124__ {
	uint8_t __0; // x
	uint8_t __1; // y
	uint8_t __2; // z
};
// Unity.Mathematics.bool3x2
struct __struct_121__ {
	__struct_124__ __0; // c0
	__struct_124__ __1; // c1
};
// Unity.Mathematics.bool3x3
struct __struct_122__ {
	__struct_124__ __0; // c0
	__struct_124__ __1; // c1
	__struct_124__ __2; // c2
};
// Unity.Mathematics.bool3x4
struct __struct_123__ {
	__struct_124__ __0; // c0
	__struct_124__ __1; // c1
	__struct_124__ __2; // c2
	__struct_124__ __3; // c3
};
// Unity.Mathematics.bool4
struct __struct_128__ {
	uint8_t __0; // x
	uint8_t __1; // y
	uint8_t __2; // z
	uint8_t __3; // w
};
// Unity.Mathematics.bool4x2
struct __struct_125__ {
	__struct_128__ __0; // c0
	__struct_128__ __1; // c1
};
// Unity.Mathematics.bool4x3
struct __struct_126__ {
	__struct_128__ __0; // c0
	__struct_128__ __1; // c1
	__struct_128__ __2; // c2
};
// Unity.Mathematics.bool4x4
struct __struct_127__ {
	__struct_128__ __0; // c0
	__struct_128__ __1; // c1
	__struct_128__ __2; // c2
	__struct_128__ __3; // c3
};
// Unity.Mathematics.double2
struct __struct_132__ {
	double __0; // x
	double __1; // y
};
// Unity.Mathematics.double2x2
struct __struct_129__ {
	__struct_132__ __0; // c0
	__struct_132__ __1; // c1
};
// Unity.Mathematics.double2x3
struct __struct_130__ {
	__struct_132__ __0; // c0
	__struct_132__ __1; // c1
	__struct_132__ __2; // c2
};
// Unity.Mathematics.double2x4
struct __struct_131__ {
	__struct_132__ __0; // c0
	__struct_132__ __1; // c1
	__struct_132__ __2; // c2
	__struct_132__ __3; // c3
};
// Unity.Mathematics.double3
struct __struct_136__ {
	double __0; // x
	double __1; // y
	double __2; // z
};
// Unity.Mathematics.double3x2
struct __struct_133__ {
	__struct_136__ __0; // c0
	__struct_136__ __1; // c1
};
// Unity.Mathematics.double3x3
struct __struct_134__ {
	__struct_136__ __0; // c0
	__struct_136__ __1; // c1
	__struct_136__ __2; // c2
};
// Unity.Mathematics.double3x4
struct __struct_135__ {
	__struct_136__ __0; // c0
	__struct_136__ __1; // c1
	__struct_136__ __2; // c2
	__struct_136__ __3; // c3
};
// Unity.Mathematics.double4
struct __struct_140__ {
	double __0; // x
	double __1; // y
	double __2; // z
	double __3; // w
};
// Unity.Mathematics.double4x2
struct __struct_137__ {
	__struct_140__ __0; // c0
	__struct_140__ __1; // c1
};
// Unity.Mathematics.double4x3
struct __struct_138__ {
	__struct_140__ __0; // c0
	__struct_140__ __1; // c1
	__struct_140__ __2; // c2
};
// Unity.Mathematics.double4x4
struct __struct_139__ {
	__struct_140__ __0; // c0
	__struct_140__ __1; // c1
	__struct_140__ __2; // c2
	__struct_140__ __3; // c3
};
// Unity.Mathematics.float2
struct __struct_144__ {
	float __0; // x
	float __1; // y
};
// Unity.Mathematics.float2x2
struct __struct_141__ {
	__struct_144__ __0; // c0
	__struct_144__ __1; // c1
};
// Unity.Mathematics.float2x3
struct __struct_142__ {
	__struct_144__ __0; // c0
	__struct_144__ __1; // c1
	__struct_144__ __2; // c2
};
// Unity.Mathematics.float2x4
struct __struct_143__ {
	__struct_144__ __0; // c0
	__struct_144__ __1; // c1
	__struct_144__ __2; // c2
	__struct_144__ __3; // c3
};
// Unity.Mathematics.float3x3
struct __struct_146__ {
	__struct_148__ __0; // c0
	__struct_148__ __1; // c1
	__struct_148__ __2; // c2
};
// Unity.Mathematics.float3x4
struct __struct_147__ {
	__struct_148__ __0; // c0
	__struct_148__ __1; // c1
	__struct_148__ __2; // c2
	__struct_148__ __3; // c3
};
// Unity.Mathematics.float4
struct __struct_152__ {
	float __0; // x
	float __1; // y
	float __2; // z
	float __3; // w
};
// Unity.Mathematics.float4x2
struct __struct_149__ {
	__struct_152__ __0; // c0
	__struct_152__ __1; // c1
};
// Unity.Mathematics.float4x3
struct __struct_150__ {
	__struct_152__ __0; // c0
	__struct_152__ __1; // c1
	__struct_152__ __2; // c2
};
// Unity.Mathematics.float4x4
struct __struct_151__ {
	__struct_152__ __0; // c0
	__struct_152__ __1; // c1
	__struct_152__ __2; // c2
	__struct_152__ __3; // c3
};
// Unity.Mathematics.half
struct __struct_156__ {
	uint16_t __0; // value
};
// Unity.Mathematics.half2
struct __struct_153__ {
	__struct_156__ __0; // x
	__struct_156__ __1; // y
};
// Unity.Mathematics.half3
struct __struct_154__ {
	__struct_156__ __0; // x
	__struct_156__ __1; // y
	__struct_156__ __2; // z
};
// Unity.Mathematics.half4
struct __struct_155__ {
	__struct_156__ __0; // x
	__struct_156__ __1; // y
	__struct_156__ __2; // z
	__struct_156__ __3; // w
};
// Unity.Mathematics.int2x2
struct __struct_157__ {
	__struct_38__ __0; // c0
	__struct_38__ __1; // c1
};
// Unity.Mathematics.int2x3
struct __struct_158__ {
	__struct_38__ __0; // c0
	__struct_38__ __1; // c1
	__struct_38__ __2; // c2
};
// Unity.Mathematics.int2x4
struct __struct_159__ {
	__struct_38__ __0; // c0
	__struct_38__ __1; // c1
	__struct_38__ __2; // c2
	__struct_38__ __3; // c3
};
// Unity.Mathematics.int3x2
struct __struct_161__ {
	__struct_1__ __0; // c0
	__struct_1__ __1; // c1
};
// Unity.Mathematics.int3x3
struct __struct_162__ {
	__struct_1__ __0; // c0
	__struct_1__ __1; // c1
	__struct_1__ __2; // c2
};
// Unity.Mathematics.int3x4
struct __struct_163__ {
	__struct_1__ __0; // c0
	__struct_1__ __1; // c1
	__struct_1__ __2; // c2
	__struct_1__ __3; // c3
};
// Unity.Mathematics.int4x2
struct __struct_165__ {
	__struct_39__ __0; // c0
	__struct_39__ __1; // c1
};
// Unity.Mathematics.int4x3
struct __struct_166__ {
	__struct_39__ __0; // c0
	__struct_39__ __1; // c1
	__struct_39__ __2; // c2
};
// Unity.Mathematics.int4x4
struct __struct_167__ {
	__struct_39__ __0; // c0
	__struct_39__ __1; // c1
	__struct_39__ __2; // c2
	__struct_39__ __3; // c3
};
// Unity.Mathematics.quaternion
struct __struct_169__ {
	__struct_152__ __0; // value
};
// Unity.Mathematics.uint2
struct __struct_173__ {
	uint32_t __0; // x
	uint32_t __1; // y
};
// Unity.Mathematics.uint2x2
struct __struct_170__ {
	__struct_173__ __0; // c0
	__struct_173__ __1; // c1
};
// Unity.Mathematics.uint2x3
struct __struct_171__ {
	__struct_173__ __0; // c0
	__struct_173__ __1; // c1
	__struct_173__ __2; // c2
};
// Unity.Mathematics.uint2x4
struct __struct_172__ {
	__struct_173__ __0; // c0
	__struct_173__ __1; // c1
	__struct_173__ __2; // c2
	__struct_173__ __3; // c3
};
// Unity.Mathematics.uint3
struct __struct_177__ {
	uint32_t __0; // x
	uint32_t __1; // y
	uint32_t __2; // z
};
// Unity.Mathematics.uint3x2
struct __struct_174__ {
	__struct_177__ __0; // c0
	__struct_177__ __1; // c1
};
// Unity.Mathematics.uint3x3
struct __struct_175__ {
	__struct_177__ __0; // c0
	__struct_177__ __1; // c1
	__struct_177__ __2; // c2
};
// Unity.Mathematics.uint3x4
struct __struct_176__ {
	__struct_177__ __0; // c0
	__struct_177__ __1; // c1
	__struct_177__ __2; // c2
	__struct_177__ __3; // c3
};
// Unity.Mathematics.uint4
struct __struct_181__ {
	uint32_t __0; // x
	uint32_t __1; // y
	uint32_t __2; // z
	uint32_t __3; // w
};
// Unity.Mathematics.uint4x2
struct __struct_178__ {
	__struct_181__ __0; // c0
	__struct_181__ __1; // c1
};
// Unity.Mathematics.uint4x3
struct __struct_179__ {
	__struct_181__ __0; // c0
	__struct_181__ __1; // c1
	__struct_181__ __2; // c2
};
// Unity.Mathematics.uint4x4
struct __struct_180__ {
	__struct_181__ __0; // c0
	__struct_181__ __1; // c1
	__struct_181__ __2; // c2
	__struct_181__ __3; // c3
};
// UnityEngine.Playables.PlayableHandle
struct __struct_205__ {
	intptr_t __0; // m_Handle
	uint32_t __1; // m_Version
};
// UnityEngine.Animations.AnimationClipPlayable
struct __struct_182__ {
	__struct_205__ __0; // m_Handle
};
// UnityEngine.BoneWeight
struct __struct_193__ {
	float __0; // m_Weight0
	float __1; // m_Weight1
	float __2; // m_Weight2
	float __3; // m_Weight3
	int32_t __4; // m_BoneIndex0
	int32_t __5; // m_BoneIndex1
	int32_t __6; // m_BoneIndex2
	int32_t __7; // m_BoneIndex3
};
// UnityEngine.Hash128
struct __struct_201__ {
	uint64_t __0; // u64_0
	uint64_t __1; // u64_1
};
// UnityEngine.Matrix4x4
struct __struct_202__ {
	float __0; // m00
	float __1; // m10
	float __2; // m20
	float __3; // m30
	float __4; // m01
	float __5; // m11
	float __6; // m21
	float __7; // m31
	float __8; // m02
	float __9; // m12
	float __10; // m22
	float __11; // m32
	float __12; // m03
	float __13; // m13
	float __14; // m23
	float __15; // m33
};
// UnityEngine.Rendering.BatchID
struct __struct_213__ {
	uint32_t __0; // value
};
// UnityEngine.Rendering.BatchPackedCullingViewID
struct __struct_216__ {
	uint64_t __0; // handle
};
// UnityEngine.Rendering.LODParameters
struct __struct_217__ {
	int32_t __0; // m_IsOrthographic
	__struct_148__ __1; // m_CameraPosition
	float __2; // m_FieldOfView
	float __3; // m_OrthoSize
	int32_t __4; // m_CameraPixelHeight
};
// UnityEngine.Rendering.RenderTargetIdentifier
struct __struct_218__ {
	int32_t __0; // m_Type
	int32_t __1; // m_NameID
	int32_t __2; // m_InstanceID
	intptr_t __3; // m_BufferPointer
	int32_t __4; // m_MipLevel
	int32_t __5; // m_CubeFace
	int32_t __6; // m_DepthSlice
};
// UnityEngine.XR.Bone
struct __struct_226__ {
	uint64_t __0; // m_DeviceId
	uint32_t __1; // m_FeatureIndex
};
// UnityEngine.XR.InputDevice
struct __struct_229__ {
	uint64_t __0; // m_DeviceId
	uint8_t __1; // m_Initialized
};
// UnityEngine.XR.InputFeatureUsage
struct __struct_230__ {
	uintptr_t __0; // m_Name
	uint32_t __1; // m_InternalType
};
// UnityEngine.XR.MeshGenerationResult
struct __struct_231__ {
	__struct_201__ __0; // <MeshId>k__BackingField
	uintptr_t __1; // <Mesh>k__BackingField
	uintptr_t __2; // <MeshCollider>k__BackingField
	int32_t __3; // <Status>k__BackingField
	int32_t __4; // <Attributes>k__BackingField
	uint64_t __5; // <Timestamp>k__BackingField
	__struct_148__ __6; // <Position>k__BackingField
	__struct_152__ __7; // <Rotation>k__BackingField
	__struct_148__ __8; // <Scale>k__BackingField
};
// System.Threading.Tasks.ValueTask`1<System.Int32>
struct __struct_248__ {
	uintptr_t __0; // _obj
	int32_t __1; // _result
	int16_t __2; // _token
	uint8_t __3; // _continueOnCapturedContext
};
// System.ValueTuple`2<System.Int32,System.Int32>
struct __struct_249__ {
	int32_t __0; // Item1
	int32_t __1; // Item2
};
// System.ValueTuple`2<System.Int32,System.IntPtr>
struct __struct_250__ {
	int32_t __0; // Item1
	intptr_t __1; // Item2
};
// System.ValueTuple`2<Unity.Collections.NativeArray`1<System.Object>,System.Int32>
struct __struct_251__ {
	__struct_24__ __0; // Item1
	int32_t __1; // Item2
};
// System.ValueTuple`3<System.Object,System.Int32,System.Int32>
struct __struct_252__ {
	uintptr_t __0; // Item1
	int32_t __1; // Item2
	int32_t __2; // Item3
};
// System.ValueTuple`5<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Byte>
struct __struct_253__ {
	intptr_t __0; // Item1
	int32_t __1; // Item2
	intptr_t __2; // Item3
	int32_t __3; // Item4
	uint8_t __4; // Item5
};
// System.ValueTuple`8<System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Byte,System.ValueTuple`1<System.Byte>>
struct __struct_254__ {
	intptr_t __0; // Item1
	int32_t __1; // Item2
	intptr_t __2; // Item3
	int32_t __3; // Item4
	intptr_t __4; // Item5
	int32_t __5; // Item6
	uint8_t __6; // Item7
	__struct_69__ __7; // Rest
};
// Unity.Collections.LowLevel.Unsafe.UnsafeList`1<System.Object>
struct __struct_272__ {
	uintptr_t __0; // Ptr
	int32_t __1; // m_length
	int32_t __2; // m_capacity
	__struct_68__ __3; // Allocator
	int32_t __4; // length
	int32_t __5; // capacity
};
// Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelReader<System.Object>
struct __struct_273__ {
	uintptr_t __0; // Ptr
	int32_t __1; // Length
};
// Unity.Mathematics.RigidTransform
struct __struct_313__ {
	__struct_169__ __0; // rot
	__struct_148__ __1; // pos
};
// UnityEngine.AssemblyVersion
struct __struct_314__ {
	uint16_t __0; // major
	uint16_t __1; // minor
	uint16_t __2; // build
	uint16_t __3; // revision
};
// System.Buffers.MemoryHandle
struct __struct_318__ {
	uintptr_t __0; // _pointer
	__struct_763__ __1; // _handle
	uintptr_t __2; // _pinnable
};
// Unity.Burst.Intrinsics.v64
struct __struct_319__ {
	union {
	#pragma pack(push, 1)
	struct { uint8_t __0;}; // Byte0
	#pragma pack(pop)
	struct { uint8_t __0_forAlignmentOnly;}; // Byte0
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[1]; uint8_t __1;}; // Byte1
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[1]; uint8_t __1_forAlignmentOnly;}; // Byte1
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2]; uint8_t __2;}; // Byte2
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[2]; uint8_t __2_forAlignmentOnly;}; // Byte2
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3]; uint8_t __3;}; // Byte3
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[3]; uint8_t __3_forAlignmentOnly;}; // Byte3
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4]; uint8_t __4;}; // Byte4
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[4]; uint8_t __4_forAlignmentOnly;}; // Byte4
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5]; uint8_t __5;}; // Byte5
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[5]; uint8_t __5_forAlignmentOnly;}; // Byte5
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6]; uint8_t __6;}; // Byte6
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[6]; uint8_t __6_forAlignmentOnly;}; // Byte6
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[7]; uint8_t __7;}; // Byte7
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[7]; uint8_t __7_forAlignmentOnly;}; // Byte7
	#pragma pack(push, 1)
	struct { int8_t __8;}; // SByte0
	#pragma pack(pop)
	struct { int8_t __8_forAlignmentOnly;}; // SByte0
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[1]; int8_t __9;}; // SByte1
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[1]; int8_t __9_forAlignmentOnly;}; // SByte1
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[2]; int8_t __10;}; // SByte2
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[2]; int8_t __10_forAlignmentOnly;}; // SByte2
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[3]; int8_t __11;}; // SByte3
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[3]; int8_t __11_forAlignmentOnly;}; // SByte3
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[4]; int8_t __12;}; // SByte4
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[4]; int8_t __12_forAlignmentOnly;}; // SByte4
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[5]; int8_t __13;}; // SByte5
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[5]; int8_t __13_forAlignmentOnly;}; // SByte5
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[6]; int8_t __14;}; // SByte6
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[6]; int8_t __14_forAlignmentOnly;}; // SByte6
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[7]; int8_t __15;}; // SByte7
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[7]; int8_t __15_forAlignmentOnly;}; // SByte7
	#pragma pack(push, 1)
	struct { uint16_t __16;}; // UShort0
	#pragma pack(pop)
	struct { uint16_t __16_forAlignmentOnly;}; // UShort0
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[2]; uint16_t __17;}; // UShort1
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[2]; uint16_t __17_forAlignmentOnly;}; // UShort1
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[4]; uint16_t __18;}; // UShort2
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[4]; uint16_t __18_forAlignmentOnly;}; // UShort2
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[6]; uint16_t __19;}; // UShort3
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[6]; uint16_t __19_forAlignmentOnly;}; // UShort3
	#pragma pack(push, 1)
	struct { int16_t __20;}; // SShort0
	#pragma pack(pop)
	struct { int16_t __20_forAlignmentOnly;}; // SShort0
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[2]; int16_t __21;}; // SShort1
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[2]; int16_t __21_forAlignmentOnly;}; // SShort1
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[4]; int16_t __22;}; // SShort2
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[4]; int16_t __22_forAlignmentOnly;}; // SShort2
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[6]; int16_t __23;}; // SShort3
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[6]; int16_t __23_forAlignmentOnly;}; // SShort3
	#pragma pack(push, 1)
	struct { uint32_t __24;}; // UInt0
	#pragma pack(pop)
	struct { uint32_t __24_forAlignmentOnly;}; // UInt0
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[4]; uint32_t __25;}; // UInt1
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[4]; uint32_t __25_forAlignmentOnly;}; // UInt1
	#pragma pack(push, 1)
	struct { int32_t __26;}; // SInt0
	#pragma pack(pop)
	struct { int32_t __26_forAlignmentOnly;}; // SInt0
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[4]; int32_t __27;}; // SInt1
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[4]; int32_t __27_forAlignmentOnly;}; // SInt1
	#pragma pack(push, 1)
	struct { uint64_t __28;}; // ULong0
	#pragma pack(pop)
	struct { uint64_t __28_forAlignmentOnly;}; // ULong0
	#pragma pack(push, 1)
	struct { int64_t __29;}; // SLong0
	#pragma pack(pop)
	struct { int64_t __29_forAlignmentOnly;}; // SLong0
	#pragma pack(push, 1)
	struct { float __30;}; // Float0
	#pragma pack(pop)
	struct { float __30_forAlignmentOnly;}; // Float0
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[4]; float __31;}; // Float1
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[4]; float __31_forAlignmentOnly;}; // Float1
	#pragma pack(push, 1)
	struct { double __32;}; // Double0
	#pragma pack(pop)
	struct { double __32_forAlignmentOnly;}; // Double0
	};
};
// Unity.Burst.Intrinsics.v128
struct __struct_320__ {
	union {
	#pragma pack(push, 1)
	struct { uint8_t __0;}; // Byte0
	#pragma pack(pop)
	struct { uint8_t __0_forAlignmentOnly;}; // Byte0
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[1]; uint8_t __1;}; // Byte1
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[1]; uint8_t __1_forAlignmentOnly;}; // Byte1
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2]; uint8_t __2;}; // Byte2
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[2]; uint8_t __2_forAlignmentOnly;}; // Byte2
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3]; uint8_t __3;}; // Byte3
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[3]; uint8_t __3_forAlignmentOnly;}; // Byte3
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4]; uint8_t __4;}; // Byte4
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[4]; uint8_t __4_forAlignmentOnly;}; // Byte4
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5]; uint8_t __5;}; // Byte5
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[5]; uint8_t __5_forAlignmentOnly;}; // Byte5
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6]; uint8_t __6;}; // Byte6
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[6]; uint8_t __6_forAlignmentOnly;}; // Byte6
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[7]; uint8_t __7;}; // Byte7
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[7]; uint8_t __7_forAlignmentOnly;}; // Byte7
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[8]; uint8_t __8;}; // Byte8
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[8]; uint8_t __8_forAlignmentOnly;}; // Byte8
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[9]; uint8_t __9;}; // Byte9
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[9]; uint8_t __9_forAlignmentOnly;}; // Byte9
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[10]; uint8_t __10;}; // Byte10
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[10]; uint8_t __10_forAlignmentOnly;}; // Byte10
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[11]; uint8_t __11;}; // Byte11
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[11]; uint8_t __11_forAlignmentOnly;}; // Byte11
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[12]; uint8_t __12;}; // Byte12
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[12]; uint8_t __12_forAlignmentOnly;}; // Byte12
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[13]; uint8_t __13;}; // Byte13
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[13]; uint8_t __13_forAlignmentOnly;}; // Byte13
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[14]; uint8_t __14;}; // Byte14
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[14]; uint8_t __14_forAlignmentOnly;}; // Byte14
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[15]; uint8_t __15;}; // Byte15
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[15]; uint8_t __15_forAlignmentOnly;}; // Byte15
	#pragma pack(push, 1)
	struct { int8_t __16;}; // SByte0
	#pragma pack(pop)
	struct { int8_t __16_forAlignmentOnly;}; // SByte0
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[1]; int8_t __17;}; // SByte1
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[1]; int8_t __17_forAlignmentOnly;}; // SByte1
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[2]; int8_t __18;}; // SByte2
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[2]; int8_t __18_forAlignmentOnly;}; // SByte2
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[3]; int8_t __19;}; // SByte3
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[3]; int8_t __19_forAlignmentOnly;}; // SByte3
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[4]; int8_t __20;}; // SByte4
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[4]; int8_t __20_forAlignmentOnly;}; // SByte4
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[5]; int8_t __21;}; // SByte5
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[5]; int8_t __21_forAlignmentOnly;}; // SByte5
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[6]; int8_t __22;}; // SByte6
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[6]; int8_t __22_forAlignmentOnly;}; // SByte6
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[7]; int8_t __23;}; // SByte7
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[7]; int8_t __23_forAlignmentOnly;}; // SByte7
	#pragma pack(push, 1)
	struct { char __24_offsetPadding[8]; int8_t __24;}; // SByte8
	#pragma pack(pop)
	struct { char __24_offsetPadding_forAlignmentOnly[8]; int8_t __24_forAlignmentOnly;}; // SByte8
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[9]; int8_t __25;}; // SByte9
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[9]; int8_t __25_forAlignmentOnly;}; // SByte9
	#pragma pack(push, 1)
	struct { char __26_offsetPadding[10]; int8_t __26;}; // SByte10
	#pragma pack(pop)
	struct { char __26_offsetPadding_forAlignmentOnly[10]; int8_t __26_forAlignmentOnly;}; // SByte10
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[11]; int8_t __27;}; // SByte11
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[11]; int8_t __27_forAlignmentOnly;}; // SByte11
	#pragma pack(push, 1)
	struct { char __28_offsetPadding[12]; int8_t __28;}; // SByte12
	#pragma pack(pop)
	struct { char __28_offsetPadding_forAlignmentOnly[12]; int8_t __28_forAlignmentOnly;}; // SByte12
	#pragma pack(push, 1)
	struct { char __29_offsetPadding[13]; int8_t __29;}; // SByte13
	#pragma pack(pop)
	struct { char __29_offsetPadding_forAlignmentOnly[13]; int8_t __29_forAlignmentOnly;}; // SByte13
	#pragma pack(push, 1)
	struct { char __30_offsetPadding[14]; int8_t __30;}; // SByte14
	#pragma pack(pop)
	struct { char __30_offsetPadding_forAlignmentOnly[14]; int8_t __30_forAlignmentOnly;}; // SByte14
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[15]; int8_t __31;}; // SByte15
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[15]; int8_t __31_forAlignmentOnly;}; // SByte15
	#pragma pack(push, 1)
	struct { uint16_t __32;}; // UShort0
	#pragma pack(pop)
	struct { uint16_t __32_forAlignmentOnly;}; // UShort0
	#pragma pack(push, 1)
	struct { char __33_offsetPadding[2]; uint16_t __33;}; // UShort1
	#pragma pack(pop)
	struct { char __33_offsetPadding_forAlignmentOnly[2]; uint16_t __33_forAlignmentOnly;}; // UShort1
	#pragma pack(push, 1)
	struct { char __34_offsetPadding[4]; uint16_t __34;}; // UShort2
	#pragma pack(pop)
	struct { char __34_offsetPadding_forAlignmentOnly[4]; uint16_t __34_forAlignmentOnly;}; // UShort2
	#pragma pack(push, 1)
	struct { char __35_offsetPadding[6]; uint16_t __35;}; // UShort3
	#pragma pack(pop)
	struct { char __35_offsetPadding_forAlignmentOnly[6]; uint16_t __35_forAlignmentOnly;}; // UShort3
	#pragma pack(push, 1)
	struct { char __36_offsetPadding[8]; uint16_t __36;}; // UShort4
	#pragma pack(pop)
	struct { char __36_offsetPadding_forAlignmentOnly[8]; uint16_t __36_forAlignmentOnly;}; // UShort4
	#pragma pack(push, 1)
	struct { char __37_offsetPadding[10]; uint16_t __37;}; // UShort5
	#pragma pack(pop)
	struct { char __37_offsetPadding_forAlignmentOnly[10]; uint16_t __37_forAlignmentOnly;}; // UShort5
	#pragma pack(push, 1)
	struct { char __38_offsetPadding[12]; uint16_t __38;}; // UShort6
	#pragma pack(pop)
	struct { char __38_offsetPadding_forAlignmentOnly[12]; uint16_t __38_forAlignmentOnly;}; // UShort6
	#pragma pack(push, 1)
	struct { char __39_offsetPadding[14]; uint16_t __39;}; // UShort7
	#pragma pack(pop)
	struct { char __39_offsetPadding_forAlignmentOnly[14]; uint16_t __39_forAlignmentOnly;}; // UShort7
	#pragma pack(push, 1)
	struct { int16_t __40;}; // SShort0
	#pragma pack(pop)
	struct { int16_t __40_forAlignmentOnly;}; // SShort0
	#pragma pack(push, 1)
	struct { char __41_offsetPadding[2]; int16_t __41;}; // SShort1
	#pragma pack(pop)
	struct { char __41_offsetPadding_forAlignmentOnly[2]; int16_t __41_forAlignmentOnly;}; // SShort1
	#pragma pack(push, 1)
	struct { char __42_offsetPadding[4]; int16_t __42;}; // SShort2
	#pragma pack(pop)
	struct { char __42_offsetPadding_forAlignmentOnly[4]; int16_t __42_forAlignmentOnly;}; // SShort2
	#pragma pack(push, 1)
	struct { char __43_offsetPadding[6]; int16_t __43;}; // SShort3
	#pragma pack(pop)
	struct { char __43_offsetPadding_forAlignmentOnly[6]; int16_t __43_forAlignmentOnly;}; // SShort3
	#pragma pack(push, 1)
	struct { char __44_offsetPadding[8]; int16_t __44;}; // SShort4
	#pragma pack(pop)
	struct { char __44_offsetPadding_forAlignmentOnly[8]; int16_t __44_forAlignmentOnly;}; // SShort4
	#pragma pack(push, 1)
	struct { char __45_offsetPadding[10]; int16_t __45;}; // SShort5
	#pragma pack(pop)
	struct { char __45_offsetPadding_forAlignmentOnly[10]; int16_t __45_forAlignmentOnly;}; // SShort5
	#pragma pack(push, 1)
	struct { char __46_offsetPadding[12]; int16_t __46;}; // SShort6
	#pragma pack(pop)
	struct { char __46_offsetPadding_forAlignmentOnly[12]; int16_t __46_forAlignmentOnly;}; // SShort6
	#pragma pack(push, 1)
	struct { char __47_offsetPadding[14]; int16_t __47;}; // SShort7
	#pragma pack(pop)
	struct { char __47_offsetPadding_forAlignmentOnly[14]; int16_t __47_forAlignmentOnly;}; // SShort7
	#pragma pack(push, 1)
	struct { uint32_t __48;}; // UInt0
	#pragma pack(pop)
	struct { uint32_t __48_forAlignmentOnly;}; // UInt0
	#pragma pack(push, 1)
	struct { char __49_offsetPadding[4]; uint32_t __49;}; // UInt1
	#pragma pack(pop)
	struct { char __49_offsetPadding_forAlignmentOnly[4]; uint32_t __49_forAlignmentOnly;}; // UInt1
	#pragma pack(push, 1)
	struct { char __50_offsetPadding[8]; uint32_t __50;}; // UInt2
	#pragma pack(pop)
	struct { char __50_offsetPadding_forAlignmentOnly[8]; uint32_t __50_forAlignmentOnly;}; // UInt2
	#pragma pack(push, 1)
	struct { char __51_offsetPadding[12]; uint32_t __51;}; // UInt3
	#pragma pack(pop)
	struct { char __51_offsetPadding_forAlignmentOnly[12]; uint32_t __51_forAlignmentOnly;}; // UInt3
	#pragma pack(push, 1)
	struct { int32_t __52;}; // SInt0
	#pragma pack(pop)
	struct { int32_t __52_forAlignmentOnly;}; // SInt0
	#pragma pack(push, 1)
	struct { char __53_offsetPadding[4]; int32_t __53;}; // SInt1
	#pragma pack(pop)
	struct { char __53_offsetPadding_forAlignmentOnly[4]; int32_t __53_forAlignmentOnly;}; // SInt1
	#pragma pack(push, 1)
	struct { char __54_offsetPadding[8]; int32_t __54;}; // SInt2
	#pragma pack(pop)
	struct { char __54_offsetPadding_forAlignmentOnly[8]; int32_t __54_forAlignmentOnly;}; // SInt2
	#pragma pack(push, 1)
	struct { char __55_offsetPadding[12]; int32_t __55;}; // SInt3
	#pragma pack(pop)
	struct { char __55_offsetPadding_forAlignmentOnly[12]; int32_t __55_forAlignmentOnly;}; // SInt3
	#pragma pack(push, 1)
	struct { uint64_t __56;}; // ULong0
	#pragma pack(pop)
	struct { uint64_t __56_forAlignmentOnly;}; // ULong0
	#pragma pack(push, 1)
	struct { char __57_offsetPadding[8]; uint64_t __57;}; // ULong1
	#pragma pack(pop)
	struct { char __57_offsetPadding_forAlignmentOnly[8]; uint64_t __57_forAlignmentOnly;}; // ULong1
	#pragma pack(push, 1)
	struct { int64_t __58;}; // SLong0
	#pragma pack(pop)
	struct { int64_t __58_forAlignmentOnly;}; // SLong0
	#pragma pack(push, 1)
	struct { char __59_offsetPadding[8]; int64_t __59;}; // SLong1
	#pragma pack(pop)
	struct { char __59_offsetPadding_forAlignmentOnly[8]; int64_t __59_forAlignmentOnly;}; // SLong1
	#pragma pack(push, 1)
	struct { float __60;}; // Float0
	#pragma pack(pop)
	struct { float __60_forAlignmentOnly;}; // Float0
	#pragma pack(push, 1)
	struct { char __61_offsetPadding[4]; float __61;}; // Float1
	#pragma pack(pop)
	struct { char __61_offsetPadding_forAlignmentOnly[4]; float __61_forAlignmentOnly;}; // Float1
	#pragma pack(push, 1)
	struct { char __62_offsetPadding[8]; float __62;}; // Float2
	#pragma pack(pop)
	struct { char __62_offsetPadding_forAlignmentOnly[8]; float __62_forAlignmentOnly;}; // Float2
	#pragma pack(push, 1)
	struct { char __63_offsetPadding[12]; float __63;}; // Float3
	#pragma pack(pop)
	struct { char __63_offsetPadding_forAlignmentOnly[12]; float __63_forAlignmentOnly;}; // Float3
	#pragma pack(push, 1)
	struct { double __64;}; // Double0
	#pragma pack(pop)
	struct { double __64_forAlignmentOnly;}; // Double0
	#pragma pack(push, 1)
	struct { char __65_offsetPadding[8]; double __65;}; // Double1
	#pragma pack(pop)
	struct { char __65_offsetPadding_forAlignmentOnly[8]; double __65_forAlignmentOnly;}; // Double1
	#pragma pack(push, 1)
	struct { __struct_319__ __66;}; // Lo64
	#pragma pack(pop)
	struct { __struct_319__ __66_forAlignmentOnly;}; // Lo64
	#pragma pack(push, 1)
	struct { char __67_offsetPadding[8]; __struct_319__ __67;}; // Hi64
	#pragma pack(pop)
	struct { char __67_offsetPadding_forAlignmentOnly[8]; __struct_319__ __67_forAlignmentOnly;}; // Hi64
	};
};
// YooAsset.DecryptFileInfo
struct __struct_321__ {
	uintptr_t __0; // BundleName
	uintptr_t __1; // FileLoadPath
	uint32_t __2; // FileLoadCRC
};
// System.Collections.Generic.Dictionary`2/Enumerator<GameFramework.Resource.ResourceManager/ResourceName,System.Object>
struct __struct_323__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_44__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<GameFramework.TypeNamePair,System.Object>
struct __struct_324__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_45__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Byte,System.Object>
struct __struct_325__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_3__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Guid,System.Object>
struct __struct_326__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_47__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Int32>
struct __struct_329__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_38__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>
struct __struct_330__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_51__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,UnityEngine.RenderInstancedDataLayout>
struct __struct_331__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_52__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>
struct __struct_332__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_53__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,GameFramework.Config.ConfigManager/ConfigData>
struct __struct_333__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_54__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Int32>
struct __struct_335__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_42__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>
struct __struct_336__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_34__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Resources.ResourceLocator>
struct __struct_337__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_57__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,YooAsset.DebugBundleInfo>
struct __struct_338__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_58__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<System.Text.RegularExpressions.Regex/CachedCodeEntryKey,System.Object>
struct __struct_339__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_59__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/Enumerator<UnityEngine.TerrainUtils.TerrainTileCoord,System.Object>
struct __struct_341__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_61__ __3; // _current
	int32_t __4; // _getEnumeratorRetType
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<GameFramework.Resource.ResourceManager/ResourceName,System.Object>
struct __struct_342__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_28__ __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<GameFramework.TypeNamePair,System.Object>
struct __struct_343__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_6__ __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Byte,System.Object>
struct __struct_344__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	uint8_t __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Guid,System.Object>
struct __struct_345__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_35__ __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Int32,GameFramework.GameFrameworkLinkedListRange`1<System.Int32>>
struct __struct_346__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	int32_t __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Object,GameFramework.Config.ConfigManager/ConfigData>
struct __struct_352__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	uintptr_t __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Text.RegularExpressions.Regex/CachedCodeEntryKey,System.Object>
struct __struct_358__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_36__ __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<UnityEngine.TerrainUtils.TerrainTileCoord,System.Object>
struct __struct_360__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_38__ __3; // _currentKey
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Int32,UnityEngine.RenderInstancedDataLayout>
struct __struct_369__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_39__ __3; // _currentValue
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Int32,UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>
struct __struct_370__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_40__ __3; // _currentValue
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Object,GameFramework.Config.ConfigManager/ConfigData>
struct __struct_371__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_41__ __3; // _currentValue
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Object,System.Resources.ResourceLocator>
struct __struct_375__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_42__ __3; // _currentValue
};
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Object,YooAsset.DebugBundleInfo>
struct __struct_376__ {
	uintptr_t __0; // _dictionary
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_43__ __3; // _currentValue
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.FileSystem.FileInfo>
struct __struct_389__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_0__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.FileSystem.FileSystem/BlockData>
struct __struct_390__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_1__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.ObjectPool.ObjectInfo>
struct __struct_391__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_62__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.ReferencePoolInfo>
struct __struct_392__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_63__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.Resource.ResourceManager/ResourceUpdater/ApplyInfo>
struct __struct_394__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_65__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<GameFramework.TaskInfo>
struct __struct_395__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_21__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>>
struct __struct_396__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_34__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<System.Int64>
struct __struct_398__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	int64_t __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<System.Text.RegularExpressions.RegexCharClass/SingleRange>
struct __struct_400__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_68__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<UnityEngine.BeforeRenderHelper/OrderBlock>
struct __struct_403__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_51__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<YooAsset.DebugOperationInfo>
struct __struct_407__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_77__ __3; // _current
};
// System.Collections.Generic.List`1/Enumerator<YooAsset.DebugProviderInfo>
struct __struct_408__ {
	uintptr_t __0; // _list
	int32_t __1; // _index
	int32_t __2; // _version
	__struct_78__ __3; // _current
};
// System.Collections.Generic.Queue`1/Enumerator<System.Collections.Generic.KeyValuePair`2<System.Int32,GameFramework.FileSystem.FileSystem/StringData>>
struct __struct_409__ {
	uintptr_t __0; // _q
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_66__ __3; // _currentElement
};
// System.Collections.Generic.Queue`1/Enumerator<System.ValueTuple`2<System.IntPtr,System.Object>>
struct __struct_411__ {
	uintptr_t __0; // _q
	int32_t __1; // _version
	int32_t __2; // _index
	__struct_70__ __3; // _currentElement
};
// System.Collections.Generic.SortedSet`1/Enumerator<System.Collections.Generic.KeyValuePair`2<GameFramework.Resource.ResourceManager/ResourceName,GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>>
struct __struct_416__ {
	uintptr_t __0; // _tree
	int32_t __1; // _version
	uintptr_t __2; // _stack
	uintptr_t __3; // _current
	uint8_t __4; // _reverse
};
// System.Collections.Generic.SortedDictionary`2/Enumerator<GameFramework.Resource.ResourceManager/ResourceName,GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>
struct __struct_412__ {
	__struct_416__ __0; // _treeEnum
	int32_t __1; // _getEnumeratorRetType
};
// Unity.Burst.Intrinsics.v256
struct __struct_421__ {
	union {
	#pragma pack(push, 1)
	struct { uint8_t __0;}; // Byte0
	#pragma pack(pop)
	struct { uint8_t __0_forAlignmentOnly;}; // Byte0
	#pragma pack(push, 1)
	struct { char __1_offsetPadding[1]; uint8_t __1;}; // Byte1
	#pragma pack(pop)
	struct { char __1_offsetPadding_forAlignmentOnly[1]; uint8_t __1_forAlignmentOnly;}; // Byte1
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[2]; uint8_t __2;}; // Byte2
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[2]; uint8_t __2_forAlignmentOnly;}; // Byte2
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[3]; uint8_t __3;}; // Byte3
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[3]; uint8_t __3_forAlignmentOnly;}; // Byte3
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[4]; uint8_t __4;}; // Byte4
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[4]; uint8_t __4_forAlignmentOnly;}; // Byte4
	#pragma pack(push, 1)
	struct { char __5_offsetPadding[5]; uint8_t __5;}; // Byte5
	#pragma pack(pop)
	struct { char __5_offsetPadding_forAlignmentOnly[5]; uint8_t __5_forAlignmentOnly;}; // Byte5
	#pragma pack(push, 1)
	struct { char __6_offsetPadding[6]; uint8_t __6;}; // Byte6
	#pragma pack(pop)
	struct { char __6_offsetPadding_forAlignmentOnly[6]; uint8_t __6_forAlignmentOnly;}; // Byte6
	#pragma pack(push, 1)
	struct { char __7_offsetPadding[7]; uint8_t __7;}; // Byte7
	#pragma pack(pop)
	struct { char __7_offsetPadding_forAlignmentOnly[7]; uint8_t __7_forAlignmentOnly;}; // Byte7
	#pragma pack(push, 1)
	struct { char __8_offsetPadding[8]; uint8_t __8;}; // Byte8
	#pragma pack(pop)
	struct { char __8_offsetPadding_forAlignmentOnly[8]; uint8_t __8_forAlignmentOnly;}; // Byte8
	#pragma pack(push, 1)
	struct { char __9_offsetPadding[9]; uint8_t __9;}; // Byte9
	#pragma pack(pop)
	struct { char __9_offsetPadding_forAlignmentOnly[9]; uint8_t __9_forAlignmentOnly;}; // Byte9
	#pragma pack(push, 1)
	struct { char __10_offsetPadding[10]; uint8_t __10;}; // Byte10
	#pragma pack(pop)
	struct { char __10_offsetPadding_forAlignmentOnly[10]; uint8_t __10_forAlignmentOnly;}; // Byte10
	#pragma pack(push, 1)
	struct { char __11_offsetPadding[11]; uint8_t __11;}; // Byte11
	#pragma pack(pop)
	struct { char __11_offsetPadding_forAlignmentOnly[11]; uint8_t __11_forAlignmentOnly;}; // Byte11
	#pragma pack(push, 1)
	struct { char __12_offsetPadding[12]; uint8_t __12;}; // Byte12
	#pragma pack(pop)
	struct { char __12_offsetPadding_forAlignmentOnly[12]; uint8_t __12_forAlignmentOnly;}; // Byte12
	#pragma pack(push, 1)
	struct { char __13_offsetPadding[13]; uint8_t __13;}; // Byte13
	#pragma pack(pop)
	struct { char __13_offsetPadding_forAlignmentOnly[13]; uint8_t __13_forAlignmentOnly;}; // Byte13
	#pragma pack(push, 1)
	struct { char __14_offsetPadding[14]; uint8_t __14;}; // Byte14
	#pragma pack(pop)
	struct { char __14_offsetPadding_forAlignmentOnly[14]; uint8_t __14_forAlignmentOnly;}; // Byte14
	#pragma pack(push, 1)
	struct { char __15_offsetPadding[15]; uint8_t __15;}; // Byte15
	#pragma pack(pop)
	struct { char __15_offsetPadding_forAlignmentOnly[15]; uint8_t __15_forAlignmentOnly;}; // Byte15
	#pragma pack(push, 1)
	struct { char __16_offsetPadding[16]; uint8_t __16;}; // Byte16
	#pragma pack(pop)
	struct { char __16_offsetPadding_forAlignmentOnly[16]; uint8_t __16_forAlignmentOnly;}; // Byte16
	#pragma pack(push, 1)
	struct { char __17_offsetPadding[17]; uint8_t __17;}; // Byte17
	#pragma pack(pop)
	struct { char __17_offsetPadding_forAlignmentOnly[17]; uint8_t __17_forAlignmentOnly;}; // Byte17
	#pragma pack(push, 1)
	struct { char __18_offsetPadding[18]; uint8_t __18;}; // Byte18
	#pragma pack(pop)
	struct { char __18_offsetPadding_forAlignmentOnly[18]; uint8_t __18_forAlignmentOnly;}; // Byte18
	#pragma pack(push, 1)
	struct { char __19_offsetPadding[19]; uint8_t __19;}; // Byte19
	#pragma pack(pop)
	struct { char __19_offsetPadding_forAlignmentOnly[19]; uint8_t __19_forAlignmentOnly;}; // Byte19
	#pragma pack(push, 1)
	struct { char __20_offsetPadding[20]; uint8_t __20;}; // Byte20
	#pragma pack(pop)
	struct { char __20_offsetPadding_forAlignmentOnly[20]; uint8_t __20_forAlignmentOnly;}; // Byte20
	#pragma pack(push, 1)
	struct { char __21_offsetPadding[21]; uint8_t __21;}; // Byte21
	#pragma pack(pop)
	struct { char __21_offsetPadding_forAlignmentOnly[21]; uint8_t __21_forAlignmentOnly;}; // Byte21
	#pragma pack(push, 1)
	struct { char __22_offsetPadding[22]; uint8_t __22;}; // Byte22
	#pragma pack(pop)
	struct { char __22_offsetPadding_forAlignmentOnly[22]; uint8_t __22_forAlignmentOnly;}; // Byte22
	#pragma pack(push, 1)
	struct { char __23_offsetPadding[23]; uint8_t __23;}; // Byte23
	#pragma pack(pop)
	struct { char __23_offsetPadding_forAlignmentOnly[23]; uint8_t __23_forAlignmentOnly;}; // Byte23
	#pragma pack(push, 1)
	struct { char __24_offsetPadding[24]; uint8_t __24;}; // Byte24
	#pragma pack(pop)
	struct { char __24_offsetPadding_forAlignmentOnly[24]; uint8_t __24_forAlignmentOnly;}; // Byte24
	#pragma pack(push, 1)
	struct { char __25_offsetPadding[25]; uint8_t __25;}; // Byte25
	#pragma pack(pop)
	struct { char __25_offsetPadding_forAlignmentOnly[25]; uint8_t __25_forAlignmentOnly;}; // Byte25
	#pragma pack(push, 1)
	struct { char __26_offsetPadding[26]; uint8_t __26;}; // Byte26
	#pragma pack(pop)
	struct { char __26_offsetPadding_forAlignmentOnly[26]; uint8_t __26_forAlignmentOnly;}; // Byte26
	#pragma pack(push, 1)
	struct { char __27_offsetPadding[27]; uint8_t __27;}; // Byte27
	#pragma pack(pop)
	struct { char __27_offsetPadding_forAlignmentOnly[27]; uint8_t __27_forAlignmentOnly;}; // Byte27
	#pragma pack(push, 1)
	struct { char __28_offsetPadding[28]; uint8_t __28;}; // Byte28
	#pragma pack(pop)
	struct { char __28_offsetPadding_forAlignmentOnly[28]; uint8_t __28_forAlignmentOnly;}; // Byte28
	#pragma pack(push, 1)
	struct { char __29_offsetPadding[29]; uint8_t __29;}; // Byte29
	#pragma pack(pop)
	struct { char __29_offsetPadding_forAlignmentOnly[29]; uint8_t __29_forAlignmentOnly;}; // Byte29
	#pragma pack(push, 1)
	struct { char __30_offsetPadding[30]; uint8_t __30;}; // Byte30
	#pragma pack(pop)
	struct { char __30_offsetPadding_forAlignmentOnly[30]; uint8_t __30_forAlignmentOnly;}; // Byte30
	#pragma pack(push, 1)
	struct { char __31_offsetPadding[31]; uint8_t __31;}; // Byte31
	#pragma pack(pop)
	struct { char __31_offsetPadding_forAlignmentOnly[31]; uint8_t __31_forAlignmentOnly;}; // Byte31
	#pragma pack(push, 1)
	struct { int8_t __32;}; // SByte0
	#pragma pack(pop)
	struct { int8_t __32_forAlignmentOnly;}; // SByte0
	#pragma pack(push, 1)
	struct { char __33_offsetPadding[1]; int8_t __33;}; // SByte1
	#pragma pack(pop)
	struct { char __33_offsetPadding_forAlignmentOnly[1]; int8_t __33_forAlignmentOnly;}; // SByte1
	#pragma pack(push, 1)
	struct { char __34_offsetPadding[2]; int8_t __34;}; // SByte2
	#pragma pack(pop)
	struct { char __34_offsetPadding_forAlignmentOnly[2]; int8_t __34_forAlignmentOnly;}; // SByte2
	#pragma pack(push, 1)
	struct { char __35_offsetPadding[3]; int8_t __35;}; // SByte3
	#pragma pack(pop)
	struct { char __35_offsetPadding_forAlignmentOnly[3]; int8_t __35_forAlignmentOnly;}; // SByte3
	#pragma pack(push, 1)
	struct { char __36_offsetPadding[4]; int8_t __36;}; // SByte4
	#pragma pack(pop)
	struct { char __36_offsetPadding_forAlignmentOnly[4]; int8_t __36_forAlignmentOnly;}; // SByte4
	#pragma pack(push, 1)
	struct { char __37_offsetPadding[5]; int8_t __37;}; // SByte5
	#pragma pack(pop)
	struct { char __37_offsetPadding_forAlignmentOnly[5]; int8_t __37_forAlignmentOnly;}; // SByte5
	#pragma pack(push, 1)
	struct { char __38_offsetPadding[6]; int8_t __38;}; // SByte6
	#pragma pack(pop)
	struct { char __38_offsetPadding_forAlignmentOnly[6]; int8_t __38_forAlignmentOnly;}; // SByte6
	#pragma pack(push, 1)
	struct { char __39_offsetPadding[7]; int8_t __39;}; // SByte7
	#pragma pack(pop)
	struct { char __39_offsetPadding_forAlignmentOnly[7]; int8_t __39_forAlignmentOnly;}; // SByte7
	#pragma pack(push, 1)
	struct { char __40_offsetPadding[8]; int8_t __40;}; // SByte8
	#pragma pack(pop)
	struct { char __40_offsetPadding_forAlignmentOnly[8]; int8_t __40_forAlignmentOnly;}; // SByte8
	#pragma pack(push, 1)
	struct { char __41_offsetPadding[9]; int8_t __41;}; // SByte9
	#pragma pack(pop)
	struct { char __41_offsetPadding_forAlignmentOnly[9]; int8_t __41_forAlignmentOnly;}; // SByte9
	#pragma pack(push, 1)
	struct { char __42_offsetPadding[10]; int8_t __42;}; // SByte10
	#pragma pack(pop)
	struct { char __42_offsetPadding_forAlignmentOnly[10]; int8_t __42_forAlignmentOnly;}; // SByte10
	#pragma pack(push, 1)
	struct { char __43_offsetPadding[11]; int8_t __43;}; // SByte11
	#pragma pack(pop)
	struct { char __43_offsetPadding_forAlignmentOnly[11]; int8_t __43_forAlignmentOnly;}; // SByte11
	#pragma pack(push, 1)
	struct { char __44_offsetPadding[12]; int8_t __44;}; // SByte12
	#pragma pack(pop)
	struct { char __44_offsetPadding_forAlignmentOnly[12]; int8_t __44_forAlignmentOnly;}; // SByte12
	#pragma pack(push, 1)
	struct { char __45_offsetPadding[13]; int8_t __45;}; // SByte13
	#pragma pack(pop)
	struct { char __45_offsetPadding_forAlignmentOnly[13]; int8_t __45_forAlignmentOnly;}; // SByte13
	#pragma pack(push, 1)
	struct { char __46_offsetPadding[14]; int8_t __46;}; // SByte14
	#pragma pack(pop)
	struct { char __46_offsetPadding_forAlignmentOnly[14]; int8_t __46_forAlignmentOnly;}; // SByte14
	#pragma pack(push, 1)
	struct { char __47_offsetPadding[15]; int8_t __47;}; // SByte15
	#pragma pack(pop)
	struct { char __47_offsetPadding_forAlignmentOnly[15]; int8_t __47_forAlignmentOnly;}; // SByte15
	#pragma pack(push, 1)
	struct { char __48_offsetPadding[16]; int8_t __48;}; // SByte16
	#pragma pack(pop)
	struct { char __48_offsetPadding_forAlignmentOnly[16]; int8_t __48_forAlignmentOnly;}; // SByte16
	#pragma pack(push, 1)
	struct { char __49_offsetPadding[17]; int8_t __49;}; // SByte17
	#pragma pack(pop)
	struct { char __49_offsetPadding_forAlignmentOnly[17]; int8_t __49_forAlignmentOnly;}; // SByte17
	#pragma pack(push, 1)
	struct { char __50_offsetPadding[18]; int8_t __50;}; // SByte18
	#pragma pack(pop)
	struct { char __50_offsetPadding_forAlignmentOnly[18]; int8_t __50_forAlignmentOnly;}; // SByte18
	#pragma pack(push, 1)
	struct { char __51_offsetPadding[19]; int8_t __51;}; // SByte19
	#pragma pack(pop)
	struct { char __51_offsetPadding_forAlignmentOnly[19]; int8_t __51_forAlignmentOnly;}; // SByte19
	#pragma pack(push, 1)
	struct { char __52_offsetPadding[20]; int8_t __52;}; // SByte20
	#pragma pack(pop)
	struct { char __52_offsetPadding_forAlignmentOnly[20]; int8_t __52_forAlignmentOnly;}; // SByte20
	#pragma pack(push, 1)
	struct { char __53_offsetPadding[21]; int8_t __53;}; // SByte21
	#pragma pack(pop)
	struct { char __53_offsetPadding_forAlignmentOnly[21]; int8_t __53_forAlignmentOnly;}; // SByte21
	#pragma pack(push, 1)
	struct { char __54_offsetPadding[22]; int8_t __54;}; // SByte22
	#pragma pack(pop)
	struct { char __54_offsetPadding_forAlignmentOnly[22]; int8_t __54_forAlignmentOnly;}; // SByte22
	#pragma pack(push, 1)
	struct { char __55_offsetPadding[23]; int8_t __55;}; // SByte23
	#pragma pack(pop)
	struct { char __55_offsetPadding_forAlignmentOnly[23]; int8_t __55_forAlignmentOnly;}; // SByte23
	#pragma pack(push, 1)
	struct { char __56_offsetPadding[24]; int8_t __56;}; // SByte24
	#pragma pack(pop)
	struct { char __56_offsetPadding_forAlignmentOnly[24]; int8_t __56_forAlignmentOnly;}; // SByte24
	#pragma pack(push, 1)
	struct { char __57_offsetPadding[25]; int8_t __57;}; // SByte25
	#pragma pack(pop)
	struct { char __57_offsetPadding_forAlignmentOnly[25]; int8_t __57_forAlignmentOnly;}; // SByte25
	#pragma pack(push, 1)
	struct { char __58_offsetPadding[26]; int8_t __58;}; // SByte26
	#pragma pack(pop)
	struct { char __58_offsetPadding_forAlignmentOnly[26]; int8_t __58_forAlignmentOnly;}; // SByte26
	#pragma pack(push, 1)
	struct { char __59_offsetPadding[27]; int8_t __59;}; // SByte27
	#pragma pack(pop)
	struct { char __59_offsetPadding_forAlignmentOnly[27]; int8_t __59_forAlignmentOnly;}; // SByte27
	#pragma pack(push, 1)
	struct { char __60_offsetPadding[28]; int8_t __60;}; // SByte28
	#pragma pack(pop)
	struct { char __60_offsetPadding_forAlignmentOnly[28]; int8_t __60_forAlignmentOnly;}; // SByte28
	#pragma pack(push, 1)
	struct { char __61_offsetPadding[29]; int8_t __61;}; // SByte29
	#pragma pack(pop)
	struct { char __61_offsetPadding_forAlignmentOnly[29]; int8_t __61_forAlignmentOnly;}; // SByte29
	#pragma pack(push, 1)
	struct { char __62_offsetPadding[30]; int8_t __62;}; // SByte30
	#pragma pack(pop)
	struct { char __62_offsetPadding_forAlignmentOnly[30]; int8_t __62_forAlignmentOnly;}; // SByte30
	#pragma pack(push, 1)
	struct { char __63_offsetPadding[31]; int8_t __63;}; // SByte31
	#pragma pack(pop)
	struct { char __63_offsetPadding_forAlignmentOnly[31]; int8_t __63_forAlignmentOnly;}; // SByte31
	#pragma pack(push, 1)
	struct { uint16_t __64;}; // UShort0
	#pragma pack(pop)
	struct { uint16_t __64_forAlignmentOnly;}; // UShort0
	#pragma pack(push, 1)
	struct { char __65_offsetPadding[2]; uint16_t __65;}; // UShort1
	#pragma pack(pop)
	struct { char __65_offsetPadding_forAlignmentOnly[2]; uint16_t __65_forAlignmentOnly;}; // UShort1
	#pragma pack(push, 1)
	struct { char __66_offsetPadding[4]; uint16_t __66;}; // UShort2
	#pragma pack(pop)
	struct { char __66_offsetPadding_forAlignmentOnly[4]; uint16_t __66_forAlignmentOnly;}; // UShort2
	#pragma pack(push, 1)
	struct { char __67_offsetPadding[6]; uint16_t __67;}; // UShort3
	#pragma pack(pop)
	struct { char __67_offsetPadding_forAlignmentOnly[6]; uint16_t __67_forAlignmentOnly;}; // UShort3
	#pragma pack(push, 1)
	struct { char __68_offsetPadding[8]; uint16_t __68;}; // UShort4
	#pragma pack(pop)
	struct { char __68_offsetPadding_forAlignmentOnly[8]; uint16_t __68_forAlignmentOnly;}; // UShort4
	#pragma pack(push, 1)
	struct { char __69_offsetPadding[10]; uint16_t __69;}; // UShort5
	#pragma pack(pop)
	struct { char __69_offsetPadding_forAlignmentOnly[10]; uint16_t __69_forAlignmentOnly;}; // UShort5
	#pragma pack(push, 1)
	struct { char __70_offsetPadding[12]; uint16_t __70;}; // UShort6
	#pragma pack(pop)
	struct { char __70_offsetPadding_forAlignmentOnly[12]; uint16_t __70_forAlignmentOnly;}; // UShort6
	#pragma pack(push, 1)
	struct { char __71_offsetPadding[14]; uint16_t __71;}; // UShort7
	#pragma pack(pop)
	struct { char __71_offsetPadding_forAlignmentOnly[14]; uint16_t __71_forAlignmentOnly;}; // UShort7
	#pragma pack(push, 1)
	struct { char __72_offsetPadding[16]; uint16_t __72;}; // UShort8
	#pragma pack(pop)
	struct { char __72_offsetPadding_forAlignmentOnly[16]; uint16_t __72_forAlignmentOnly;}; // UShort8
	#pragma pack(push, 1)
	struct { char __73_offsetPadding[18]; uint16_t __73;}; // UShort9
	#pragma pack(pop)
	struct { char __73_offsetPadding_forAlignmentOnly[18]; uint16_t __73_forAlignmentOnly;}; // UShort9
	#pragma pack(push, 1)
	struct { char __74_offsetPadding[20]; uint16_t __74;}; // UShort10
	#pragma pack(pop)
	struct { char __74_offsetPadding_forAlignmentOnly[20]; uint16_t __74_forAlignmentOnly;}; // UShort10
	#pragma pack(push, 1)
	struct { char __75_offsetPadding[22]; uint16_t __75;}; // UShort11
	#pragma pack(pop)
	struct { char __75_offsetPadding_forAlignmentOnly[22]; uint16_t __75_forAlignmentOnly;}; // UShort11
	#pragma pack(push, 1)
	struct { char __76_offsetPadding[24]; uint16_t __76;}; // UShort12
	#pragma pack(pop)
	struct { char __76_offsetPadding_forAlignmentOnly[24]; uint16_t __76_forAlignmentOnly;}; // UShort12
	#pragma pack(push, 1)
	struct { char __77_offsetPadding[26]; uint16_t __77;}; // UShort13
	#pragma pack(pop)
	struct { char __77_offsetPadding_forAlignmentOnly[26]; uint16_t __77_forAlignmentOnly;}; // UShort13
	#pragma pack(push, 1)
	struct { char __78_offsetPadding[28]; uint16_t __78;}; // UShort14
	#pragma pack(pop)
	struct { char __78_offsetPadding_forAlignmentOnly[28]; uint16_t __78_forAlignmentOnly;}; // UShort14
	#pragma pack(push, 1)
	struct { char __79_offsetPadding[30]; uint16_t __79;}; // UShort15
	#pragma pack(pop)
	struct { char __79_offsetPadding_forAlignmentOnly[30]; uint16_t __79_forAlignmentOnly;}; // UShort15
	#pragma pack(push, 1)
	struct { int16_t __80;}; // SShort0
	#pragma pack(pop)
	struct { int16_t __80_forAlignmentOnly;}; // SShort0
	#pragma pack(push, 1)
	struct { char __81_offsetPadding[2]; int16_t __81;}; // SShort1
	#pragma pack(pop)
	struct { char __81_offsetPadding_forAlignmentOnly[2]; int16_t __81_forAlignmentOnly;}; // SShort1
	#pragma pack(push, 1)
	struct { char __82_offsetPadding[4]; int16_t __82;}; // SShort2
	#pragma pack(pop)
	struct { char __82_offsetPadding_forAlignmentOnly[4]; int16_t __82_forAlignmentOnly;}; // SShort2
	#pragma pack(push, 1)
	struct { char __83_offsetPadding[6]; int16_t __83;}; // SShort3
	#pragma pack(pop)
	struct { char __83_offsetPadding_forAlignmentOnly[6]; int16_t __83_forAlignmentOnly;}; // SShort3
	#pragma pack(push, 1)
	struct { char __84_offsetPadding[8]; int16_t __84;}; // SShort4
	#pragma pack(pop)
	struct { char __84_offsetPadding_forAlignmentOnly[8]; int16_t __84_forAlignmentOnly;}; // SShort4
	#pragma pack(push, 1)
	struct { char __85_offsetPadding[10]; int16_t __85;}; // SShort5
	#pragma pack(pop)
	struct { char __85_offsetPadding_forAlignmentOnly[10]; int16_t __85_forAlignmentOnly;}; // SShort5
	#pragma pack(push, 1)
	struct { char __86_offsetPadding[12]; int16_t __86;}; // SShort6
	#pragma pack(pop)
	struct { char __86_offsetPadding_forAlignmentOnly[12]; int16_t __86_forAlignmentOnly;}; // SShort6
	#pragma pack(push, 1)
	struct { char __87_offsetPadding[14]; int16_t __87;}; // SShort7
	#pragma pack(pop)
	struct { char __87_offsetPadding_forAlignmentOnly[14]; int16_t __87_forAlignmentOnly;}; // SShort7
	#pragma pack(push, 1)
	struct { char __88_offsetPadding[16]; int16_t __88;}; // SShort8
	#pragma pack(pop)
	struct { char __88_offsetPadding_forAlignmentOnly[16]; int16_t __88_forAlignmentOnly;}; // SShort8
	#pragma pack(push, 1)
	struct { char __89_offsetPadding[18]; int16_t __89;}; // SShort9
	#pragma pack(pop)
	struct { char __89_offsetPadding_forAlignmentOnly[18]; int16_t __89_forAlignmentOnly;}; // SShort9
	#pragma pack(push, 1)
	struct { char __90_offsetPadding[20]; int16_t __90;}; // SShort10
	#pragma pack(pop)
	struct { char __90_offsetPadding_forAlignmentOnly[20]; int16_t __90_forAlignmentOnly;}; // SShort10
	#pragma pack(push, 1)
	struct { char __91_offsetPadding[22]; int16_t __91;}; // SShort11
	#pragma pack(pop)
	struct { char __91_offsetPadding_forAlignmentOnly[22]; int16_t __91_forAlignmentOnly;}; // SShort11
	#pragma pack(push, 1)
	struct { char __92_offsetPadding[24]; int16_t __92;}; // SShort12
	#pragma pack(pop)
	struct { char __92_offsetPadding_forAlignmentOnly[24]; int16_t __92_forAlignmentOnly;}; // SShort12
	#pragma pack(push, 1)
	struct { char __93_offsetPadding[26]; int16_t __93;}; // SShort13
	#pragma pack(pop)
	struct { char __93_offsetPadding_forAlignmentOnly[26]; int16_t __93_forAlignmentOnly;}; // SShort13
	#pragma pack(push, 1)
	struct { char __94_offsetPadding[28]; int16_t __94;}; // SShort14
	#pragma pack(pop)
	struct { char __94_offsetPadding_forAlignmentOnly[28]; int16_t __94_forAlignmentOnly;}; // SShort14
	#pragma pack(push, 1)
	struct { char __95_offsetPadding[30]; int16_t __95;}; // SShort15
	#pragma pack(pop)
	struct { char __95_offsetPadding_forAlignmentOnly[30]; int16_t __95_forAlignmentOnly;}; // SShort15
	#pragma pack(push, 1)
	struct { uint32_t __96;}; // UInt0
	#pragma pack(pop)
	struct { uint32_t __96_forAlignmentOnly;}; // UInt0
	#pragma pack(push, 1)
	struct { char __97_offsetPadding[4]; uint32_t __97;}; // UInt1
	#pragma pack(pop)
	struct { char __97_offsetPadding_forAlignmentOnly[4]; uint32_t __97_forAlignmentOnly;}; // UInt1
	#pragma pack(push, 1)
	struct { char __98_offsetPadding[8]; uint32_t __98;}; // UInt2
	#pragma pack(pop)
	struct { char __98_offsetPadding_forAlignmentOnly[8]; uint32_t __98_forAlignmentOnly;}; // UInt2
	#pragma pack(push, 1)
	struct { char __99_offsetPadding[12]; uint32_t __99;}; // UInt3
	#pragma pack(pop)
	struct { char __99_offsetPadding_forAlignmentOnly[12]; uint32_t __99_forAlignmentOnly;}; // UInt3
	#pragma pack(push, 1)
	struct { char __100_offsetPadding[16]; uint32_t __100;}; // UInt4
	#pragma pack(pop)
	struct { char __100_offsetPadding_forAlignmentOnly[16]; uint32_t __100_forAlignmentOnly;}; // UInt4
	#pragma pack(push, 1)
	struct { char __101_offsetPadding[20]; uint32_t __101;}; // UInt5
	#pragma pack(pop)
	struct { char __101_offsetPadding_forAlignmentOnly[20]; uint32_t __101_forAlignmentOnly;}; // UInt5
	#pragma pack(push, 1)
	struct { char __102_offsetPadding[24]; uint32_t __102;}; // UInt6
	#pragma pack(pop)
	struct { char __102_offsetPadding_forAlignmentOnly[24]; uint32_t __102_forAlignmentOnly;}; // UInt6
	#pragma pack(push, 1)
	struct { char __103_offsetPadding[28]; uint32_t __103;}; // UInt7
	#pragma pack(pop)
	struct { char __103_offsetPadding_forAlignmentOnly[28]; uint32_t __103_forAlignmentOnly;}; // UInt7
	#pragma pack(push, 1)
	struct { int32_t __104;}; // SInt0
	#pragma pack(pop)
	struct { int32_t __104_forAlignmentOnly;}; // SInt0
	#pragma pack(push, 1)
	struct { char __105_offsetPadding[4]; int32_t __105;}; // SInt1
	#pragma pack(pop)
	struct { char __105_offsetPadding_forAlignmentOnly[4]; int32_t __105_forAlignmentOnly;}; // SInt1
	#pragma pack(push, 1)
	struct { char __106_offsetPadding[8]; int32_t __106;}; // SInt2
	#pragma pack(pop)
	struct { char __106_offsetPadding_forAlignmentOnly[8]; int32_t __106_forAlignmentOnly;}; // SInt2
	#pragma pack(push, 1)
	struct { char __107_offsetPadding[12]; int32_t __107;}; // SInt3
	#pragma pack(pop)
	struct { char __107_offsetPadding_forAlignmentOnly[12]; int32_t __107_forAlignmentOnly;}; // SInt3
	#pragma pack(push, 1)
	struct { char __108_offsetPadding[16]; int32_t __108;}; // SInt4
	#pragma pack(pop)
	struct { char __108_offsetPadding_forAlignmentOnly[16]; int32_t __108_forAlignmentOnly;}; // SInt4
	#pragma pack(push, 1)
	struct { char __109_offsetPadding[20]; int32_t __109;}; // SInt5
	#pragma pack(pop)
	struct { char __109_offsetPadding_forAlignmentOnly[20]; int32_t __109_forAlignmentOnly;}; // SInt5
	#pragma pack(push, 1)
	struct { char __110_offsetPadding[24]; int32_t __110;}; // SInt6
	#pragma pack(pop)
	struct { char __110_offsetPadding_forAlignmentOnly[24]; int32_t __110_forAlignmentOnly;}; // SInt6
	#pragma pack(push, 1)
	struct { char __111_offsetPadding[28]; int32_t __111;}; // SInt7
	#pragma pack(pop)
	struct { char __111_offsetPadding_forAlignmentOnly[28]; int32_t __111_forAlignmentOnly;}; // SInt7
	#pragma pack(push, 1)
	struct { uint64_t __112;}; // ULong0
	#pragma pack(pop)
	struct { uint64_t __112_forAlignmentOnly;}; // ULong0
	#pragma pack(push, 1)
	struct { char __113_offsetPadding[8]; uint64_t __113;}; // ULong1
	#pragma pack(pop)
	struct { char __113_offsetPadding_forAlignmentOnly[8]; uint64_t __113_forAlignmentOnly;}; // ULong1
	#pragma pack(push, 1)
	struct { char __114_offsetPadding[16]; uint64_t __114;}; // ULong2
	#pragma pack(pop)
	struct { char __114_offsetPadding_forAlignmentOnly[16]; uint64_t __114_forAlignmentOnly;}; // ULong2
	#pragma pack(push, 1)
	struct { char __115_offsetPadding[24]; uint64_t __115;}; // ULong3
	#pragma pack(pop)
	struct { char __115_offsetPadding_forAlignmentOnly[24]; uint64_t __115_forAlignmentOnly;}; // ULong3
	#pragma pack(push, 1)
	struct { int64_t __116;}; // SLong0
	#pragma pack(pop)
	struct { int64_t __116_forAlignmentOnly;}; // SLong0
	#pragma pack(push, 1)
	struct { char __117_offsetPadding[8]; int64_t __117;}; // SLong1
	#pragma pack(pop)
	struct { char __117_offsetPadding_forAlignmentOnly[8]; int64_t __117_forAlignmentOnly;}; // SLong1
	#pragma pack(push, 1)
	struct { char __118_offsetPadding[16]; int64_t __118;}; // SLong2
	#pragma pack(pop)
	struct { char __118_offsetPadding_forAlignmentOnly[16]; int64_t __118_forAlignmentOnly;}; // SLong2
	#pragma pack(push, 1)
	struct { char __119_offsetPadding[24]; int64_t __119;}; // SLong3
	#pragma pack(pop)
	struct { char __119_offsetPadding_forAlignmentOnly[24]; int64_t __119_forAlignmentOnly;}; // SLong3
	#pragma pack(push, 1)
	struct { float __120;}; // Float0
	#pragma pack(pop)
	struct { float __120_forAlignmentOnly;}; // Float0
	#pragma pack(push, 1)
	struct { char __121_offsetPadding[4]; float __121;}; // Float1
	#pragma pack(pop)
	struct { char __121_offsetPadding_forAlignmentOnly[4]; float __121_forAlignmentOnly;}; // Float1
	#pragma pack(push, 1)
	struct { char __122_offsetPadding[8]; float __122;}; // Float2
	#pragma pack(pop)
	struct { char __122_offsetPadding_forAlignmentOnly[8]; float __122_forAlignmentOnly;}; // Float2
	#pragma pack(push, 1)
	struct { char __123_offsetPadding[12]; float __123;}; // Float3
	#pragma pack(pop)
	struct { char __123_offsetPadding_forAlignmentOnly[12]; float __123_forAlignmentOnly;}; // Float3
	#pragma pack(push, 1)
	struct { char __124_offsetPadding[16]; float __124;}; // Float4
	#pragma pack(pop)
	struct { char __124_offsetPadding_forAlignmentOnly[16]; float __124_forAlignmentOnly;}; // Float4
	#pragma pack(push, 1)
	struct { char __125_offsetPadding[20]; float __125;}; // Float5
	#pragma pack(pop)
	struct { char __125_offsetPadding_forAlignmentOnly[20]; float __125_forAlignmentOnly;}; // Float5
	#pragma pack(push, 1)
	struct { char __126_offsetPadding[24]; float __126;}; // Float6
	#pragma pack(pop)
	struct { char __126_offsetPadding_forAlignmentOnly[24]; float __126_forAlignmentOnly;}; // Float6
	#pragma pack(push, 1)
	struct { char __127_offsetPadding[28]; float __127;}; // Float7
	#pragma pack(pop)
	struct { char __127_offsetPadding_forAlignmentOnly[28]; float __127_forAlignmentOnly;}; // Float7
	#pragma pack(push, 1)
	struct { double __128;}; // Double0
	#pragma pack(pop)
	struct { double __128_forAlignmentOnly;}; // Double0
	#pragma pack(push, 1)
	struct { char __129_offsetPadding[8]; double __129;}; // Double1
	#pragma pack(pop)
	struct { char __129_offsetPadding_forAlignmentOnly[8]; double __129_forAlignmentOnly;}; // Double1
	#pragma pack(push, 1)
	struct { char __130_offsetPadding[16]; double __130;}; // Double2
	#pragma pack(pop)
	struct { char __130_offsetPadding_forAlignmentOnly[16]; double __130_forAlignmentOnly;}; // Double2
	#pragma pack(push, 1)
	struct { char __131_offsetPadding[24]; double __131;}; // Double3
	#pragma pack(pop)
	struct { char __131_offsetPadding_forAlignmentOnly[24]; double __131_forAlignmentOnly;}; // Double3
	#pragma pack(push, 1)
	struct { __struct_320__ __132;}; // Lo128
	#pragma pack(pop)
	struct { __struct_320__ __132_forAlignmentOnly;}; // Lo128
	#pragma pack(push, 1)
	struct { char __133_offsetPadding[16]; __struct_320__ __133;}; // Hi128
	#pragma pack(pop)
	struct { char __133_offsetPadding_forAlignmentOnly[16]; __struct_320__ __133_forAlignmentOnly;}; // Hi128
	};
};
// YooAsset.DownloadFileData
struct __struct_423__ {
	uintptr_t __0; // PackageName
	uintptr_t __1; // FileName
	int64_t __2; // FileSize
};
// YooAsset.DownloadUpdateData
struct __struct_424__ {
	uintptr_t __0; // PackageName
	float __1; // Progress
	int32_t __2; // TotalDownloadCount
	int32_t __3; // CurrentDownloadCount
	int64_t __4; // TotalDownloadBytes
	int64_t __5; // CurrentDownloadBytes
};
// YooAsset.DownloaderFinishData
struct __struct_425__ {
	uintptr_t __0; // PackageName
	uint8_t __1; // Succeed
};
// System.IO.DisableMediaInsertionPrompt
struct __struct_426__ {
	uint8_t __0; // _disableSuccess
	uint32_t __1; // _oldMode
};
// Unity.Collections.LowLevel.Unsafe.UnsafeList
struct __struct_427__ {
	uintptr_t __0; // Ptr
	int32_t __1; // Length
	int32_t __2; // unused
	int32_t __3; // Capacity
	__struct_68__ __4; // Allocator
};
// UnityEngine.ContactFilter2D
struct __struct_429__ {
	uint8_t __0; // useTriggers
	uint8_t __1; // useLayerMask
	uint8_t __2; // useDepth
	uint8_t __3; // useOutsideDepth
	uint8_t __4; // useNormalAngle
	uint8_t __5; // useOutsideNormalAngle
	__struct_85__ __6; // layerMask
	float __7; // minDepth
	float __8; // maxDepth
	float __9; // minNormalAngle
	float __10; // maxNormalAngle
};
// System.Nullable`1<System.Int32>
struct __struct_432__ {
	uint8_t __0; // hasValue
	int32_t __1; // value
};
// System.Nullable`1<System.Text.RegularExpressions.RegexPrefix>
struct __struct_433__ {
	uint8_t __0; // hasValue
	__struct_3__ __1; // value
};
// System.Nullable`1<GameFramework.Config.ConfigManager/ConfigData>
struct __struct_434__ {
	uint8_t __0; // hasValue
	__struct_41__ __1; // value
};
// System.Nullable`1<System.DateTime>
struct __struct_436__ {
	uint8_t __0; // hasValue
	__struct_30__ __1; // value
};
// System.Nullable`1<System.Decimal>
struct __struct_437__ {
	uint8_t __0; // hasValue
	__struct_83__ __1; // value
};
// System.Nullable`1<System.Int64>
struct __struct_438__ {
	uint8_t __0; // hasValue
	int64_t __1; // value
};
// System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Threading.Tasks.VoidTaskResult>
struct __struct_448__ {
	__struct_34__ __0; // m_coreState
	uintptr_t __1; // m_task
};
// System.Runtime.CompilerServices.AsyncTaskMethodBuilder
struct __struct_444__ {
	__struct_448__ __0; // m_builder
};
// System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<System.Int32>
struct __struct_449__ {
	__struct_448__ __0; // _methodBuilder
	int32_t __1; // _result
	uint8_t __2; // _haveResult
	uint8_t __3; // _useBuilder
};
// System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<System.Object>
struct __struct_450__ {
	__struct_448__ __0; // _methodBuilder
	uintptr_t __1; // _result
	uint8_t __2; // _haveResult
	uint8_t __3; // _useBuilder
};
// System.Runtime.CompilerServices.ConfiguredTaskAwaitable
struct __struct_451__ {
	__struct_425__ __0; // m_configuredTaskAwaiter
};
// System.Runtime.CompilerServices.ValueTaskAwaiter
struct __struct_466__ {
	__struct_93__ __0; // _value
};
// System.Runtime.CompilerServices.ValueTaskAwaiter`1<System.Int32>
struct __struct_467__ {
	__struct_248__ __0; // _value
};
// System.Runtime.CompilerServices.ValueTaskAwaiter`1<System.Object>
struct __struct_468__ {
	__struct_92__ __0; // _value
};
// UnityEngine.Color32
struct __struct_478__ {
	union {
	#pragma pack(push, 1)
	struct { int32_t __0;}; // rgba
	#pragma pack(pop)
	struct { int32_t __0_forAlignmentOnly;}; // rgba
	#pragma pack(push, 1)
	struct { uint8_t __1;}; // r
	#pragma pack(pop)
	struct { uint8_t __1_forAlignmentOnly;}; // r
	#pragma pack(push, 1)
	struct { char __2_offsetPadding[1]; uint8_t __2;}; // g
	#pragma pack(pop)
	struct { char __2_offsetPadding_forAlignmentOnly[1]; uint8_t __2_forAlignmentOnly;}; // g
	#pragma pack(push, 1)
	struct { char __3_offsetPadding[2]; uint8_t __3;}; // b
	#pragma pack(pop)
	struct { char __3_offsetPadding_forAlignmentOnly[2]; uint8_t __3_forAlignmentOnly;}; // b
	#pragma pack(push, 1)
	struct { char __4_offsetPadding[3]; uint8_t __4;}; // a
	#pragma pack(pop)
	struct { char __4_offsetPadding_forAlignmentOnly[3]; uint8_t __4_forAlignmentOnly;}; // a
	};
};
// UnityEngine.TransformDispatchData
struct __struct_479__ {
	__struct_24__ __0; // transformedID
	__struct_24__ __1; // parentID
	__struct_24__ __2; // localToWorldMatrices
	__struct_24__ __3; // positions
	__struct_24__ __4; // rotations
	__struct_24__ __5; // scales
};
// UnityEngine.TypeDispatchData
struct __struct_480__ {
	uintptr_t __0; // changed
	__struct_24__ __1; // changedID
	__struct_24__ __2; // destroyedID
};
// UnityEngine.XR.XRNodeState
struct __struct_482__ {
	int32_t __0; // m_Type
	int32_t __1; // m_AvailableFields
	__struct_148__ __2; // m_Position
	__struct_152__ __3; // m_Rotation
	__struct_148__ __4; // m_Velocity
	__struct_148__ __5; // m_AngularVelocity
	__struct_148__ __6; // m_Acceleration
	__struct_148__ __7; // m_AngularAcceleration
	int32_t __8; // m_Tracked
	uint64_t __9; // m_UniqueID
};
// Unity.Profiling.DebugScreenCapture
struct __struct_484__ {
	__struct_24__ __0; // <RawImageDataReference>k__BackingField
	int32_t __1; // <ImageFormat>k__BackingField
	int32_t __2; // <Width>k__BackingField
	int32_t __3; // <Height>k__BackingField
};
// Unity.Collections.AllocatorManager/Range
struct __struct_778__ {
	intptr_t __0; // Pointer
	int32_t __1; // Items
	__struct_68__ __2; // Allocator
};
// Unity.Collections.AllocatorManager/Block
struct __struct_485__ {
	__struct_778__ __0; // Range
	int32_t __1; // BytesPerItem
	int32_t __2; // AllocatedItems
	uint8_t __3; // Log2Alignment
	uint8_t __4; // Padding0
	uint16_t __5; // Padding1
	uint32_t __6; // Padding2
};
// Unity.Collections.NativeHashSet`1<System.Object>
struct __struct_488__ {
	__struct_111__ __0; // m_Data
};
// Unity.Collections.LowLevel.Unsafe.UnsafeBitArray
struct __struct_490__ {
	uintptr_t __0; // Ptr
	int32_t __1; // Length
	__struct_68__ __2; // Allocator
};
// Unity.Collections.NativeKeyValueArrays`2<System.Int32,System.Int32>
struct __struct_491__ {
	__struct_24__ __0; // Keys
	__struct_24__ __1; // Values
};
// Unity.Collections.LowLevel.Unsafe.UnsafeRingQueue`1<System.Object>
struct __struct_501__ {
	uintptr_t __0; // Ptr
	__struct_68__ __1; // Allocator
	__struct_39__ __2; // Control
};
// UnityEngine.ContactPairHeader
struct __struct_503__ {
	int32_t __0; // m_BodyID
	int32_t __1; // m_OtherBodyID
	intptr_t __2; // m_StartPtr
	uint32_t __3; // m_NbPairs
	uint16_t __4; // m_Flags
	__struct_148__ __5; // m_RelativeVelocity
};
// UnityEngine.Experimental.GlobalIllumination.LightDataGI
struct __struct_504__ {
	int32_t __0; // instanceID
	int32_t __1; // cookieID
	float __2; // cookieScale
	__struct_152__ __3; // color
	__struct_152__ __4; // indirectColor
	__struct_152__ __5; // orientation
	__struct_148__ __6; // position
	float __7; // range
	float __8; // coneAngle
	float __9; // innerConeAngle
	float __10; // shape0
	float __11; // shape1
	uint8_t __12; // type
	uint8_t __13; // mode
	uint8_t __14; // shadow
	uint8_t __15; // falloff
};
// UnityEngine.Tilemaps.TileData
struct __struct_505__ {
	int32_t __0; // m_Sprite
	__struct_152__ __1; // m_Color
	__struct_202__ __2; // m_Transform
	int32_t __3; // m_GameObject
	int32_t __4; // m_Flags
	int32_t __5; // m_ColliderType
};
// UnityEngine.U2D.Animation.PerSkinJobData
struct __struct_506__ {
	int32_t __0; // deformVerticesStartPos
	__struct_38__ __1; // bindPosesIndex
	__struct_38__ __2; // verticesIndex
};
// UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.Vector3>
struct __struct_754__ {
	intptr_t __0; // data
	int32_t __1; // length
	int32_t __2; // stride
};
// UnityEngine.U2D.Animation.SpriteSkinData
struct __struct_507__ {
	__struct_754__ __0; // vertices
	__struct_754__ __1; // boneWeights
	__struct_754__ __2; // bindPoses
	__struct_754__ __3; // tangents
	uint8_t __4; // hasTangents
	int32_t __5; // spriteVertexStreamSize
	int32_t __6; // spriteVertexCount
	int32_t __7; // tangentVertexOffset
	int32_t __8; // deformVerticesStartPos
	int32_t __9; // transformId
	__struct_754__ __10; // boneTransformId
};
// Unity.Collections.LowLevel.Unsafe.WordStorage
struct __struct_508__ {
	__struct_24__ __0; // buffer
	__struct_24__ __1; // entry
	__struct_111__ __2; // hash
	int32_t __3; // chars
	int32_t __4; // entries
};
// UnityEngine.U2D.Animation.FillPerSkinJobSingleThread
struct __struct_511__ {
	__struct_506__ __0; // combinedSkinBatch
	__struct_24__ __1; // isSpriteSkinValidForDeformArray
	__struct_24__ __2; // spriteSkinDataArray
	__struct_24__ __3; // perSkinJobDataArray
	__struct_24__ __4; // combinedSkinBatchArray
};
// UnityEngine.CullingGroupEvent
struct __struct_513__ {
	int32_t __0; // m_Index
	uint8_t __1; // m_PrevState
	uint8_t __2; // m_ThisState
};
// UnityEngine.Jobs.TransformAccess
struct __struct_514__ {
	intptr_t __0; // hierarchy
	int32_t __1; // index
};
// UnityEngine.ParticleSystem/Particle
struct __struct_516__ {
	__struct_148__ __0; // m_Position
	__struct_148__ __1; // m_Velocity
	__struct_148__ __2; // m_AnimatedVelocity
	__struct_148__ __3; // m_InitialVelocity
	__struct_148__ __4; // m_AxisOfRotation
	__struct_148__ __5; // m_Rotation
	__struct_148__ __6; // m_AngularVelocity
	__struct_148__ __7; // m_StartSize
	__struct_478__ __8; // m_StartColor
	uint32_t __9; // m_RandomSeed
	uint32_t __10; // m_ParentRandomSeed
	float __11; // m_Lifetime
	float __12; // m_StartLifetime
	int32_t __13; // m_MeshIndex
	float __14; // m_EmitAccumulator0
	float __15; // m_EmitAccumulator1
	uint32_t __16; // m_Flags
};
// UnityEngine.ParticleSystem/EmitParams
struct __struct_515__ {
	__struct_516__ __0; // m_Particle
	uint8_t __1; // m_PositionSet
	uint8_t __2; // m_VelocitySet
	uint8_t __3; // m_AxisOfRotationSet
	uint8_t __4; // m_RotationSet
	uint8_t __5; // m_AngularVelocitySet
	uint8_t __6; // m_StartSizeSet
	uint8_t __7; // m_StartColorSet
	uint8_t __8; // m_RandomSeedSet
	uint8_t __9; // m_StartLifetimeSet
	uint8_t __10; // m_MeshIndexSet
	uint8_t __11; // m_ApplyShapeToPosition
};
// UnityEngine.Playables.FrameData
struct __struct_518__ {
	uint64_t __0; // m_FrameID
	double __1; // m_DeltaTime
	float __2; // m_Weight
	float __3; // m_EffectiveWeight
	double __4; // m_EffectiveParentDelay
	float __5; // m_EffectiveParentSpeed
	float __6; // m_EffectiveSpeed
	int32_t __7; // m_Flags
	__struct_182__ __8; // m_Output
};
// UnityEngine.RenderTextureDescriptor
struct __struct_519__ {
	int32_t __0; // <width>k__BackingField
	int32_t __1; // <height>k__BackingField
	int32_t __2; // <msaaSamples>k__BackingField
	int32_t __3; // <volumeDepth>k__BackingField
	int32_t __4; // <mipCount>k__BackingField
	int32_t __5; // _graphicsFormat
	int32_t __6; // <stencilFormat>k__BackingField
	int32_t __7; // <depthStencilFormat>k__BackingField
	int32_t __8; // <dimension>k__BackingField
	int32_t __9; // <shadowSamplingMode>k__BackingField
	int32_t __10; // <vrUsage>k__BackingField
	int32_t __11; // _flags
	int32_t __12; // <memoryless>k__BackingField
};
// UnityEngine.AnimatorStateInfo
struct __struct_520__ {
	int32_t __0; // m_Name
	int32_t __1; // m_Path
	int32_t __2; // m_FullPath
	float __3; // m_NormalizedTime
	float __4; // m_Length
	float __5; // m_Speed
	float __6; // m_SpeedMultiplier
	int32_t __7; // m_Tag
	int32_t __8; // m_Loop
};
// UnityEngine.Windows.Speech.PhraseRecognizedEventArgs
struct __struct_521__ {
	int32_t __0; // confidence
	uintptr_t __1; // semanticMeanings
	uintptr_t __2; // text
	__struct_30__ __3; // phraseStartTime
	__struct_94__ __4; // phraseDuration
};
// UnityEngine.Windows.WebCam.PhotoCapture/PhotoCaptureResult
struct __struct_522__ {
	int32_t __0; // resultType
	int64_t __1; // hResult
};
// System.Collections.Generic.KeyValuePair`2<System.Int32,UnityEngine.Vector2>
struct __struct_526__ {
	int32_t __0; // key
	__struct_144__ __1; // value
};
// Unity.Burst.BurstString/FormatOptions
struct __struct_527__ {
	uint8_t __0; // Kind
	int8_t __1; // AlignAndSize
	uint8_t __2; // Specifier
	uint8_t __3; // Lowercase
};
// Unity.Collections.FixedList128Bytes`1/Enumerator<System.Byte>
struct __struct_534__ {
	__struct_101__ __0; // m_List
	int32_t __1; // m_Index
};
// Unity.Collections.FixedList32Bytes`1/Enumerator<System.Byte>
struct __struct_538__ {
	__struct_102__ __0; // m_List
	int32_t __1; // m_Index
};
// Unity.Collections.FixedList4096Bytes`1/Enumerator<System.Byte>
struct __struct_542__ {
	__struct_103__ __0; // m_List
	int32_t __1; // m_Index
};
// Unity.Collections.FixedList512Bytes`1/Enumerator<System.Byte>
struct __struct_546__ {
	__struct_104__ __0; // m_List
	int32_t __1; // m_Index
};
// Unity.Collections.FixedList64Bytes`1/Enumerator<System.Byte>
struct __struct_550__ {
	__struct_105__ __0; // m_List
	int32_t __1; // m_Index
};
// Unity.Collections.FixedString128Bytes/Enumerator
struct __struct_554__ {
	__struct_106__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.FixedString32Bytes/Enumerator
struct __struct_555__ {
	__struct_107__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.FixedString4096Bytes/Enumerator
struct __struct_556__ {
	__struct_108__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.FixedString512Bytes/Enumerator
struct __struct_557__ {
	__struct_109__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.FixedString64Bytes/Enumerator
struct __struct_558__ {
	__struct_110__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.HeapString/Enumerator
struct __struct_559__ {
	__struct_111__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.LowLevel.Unsafe.UnsafeHashMapBucketData
struct __struct_563__ {
	uintptr_t __0; // values
	uintptr_t __1; // keys
	uintptr_t __2; // next
	uintptr_t __3; // buckets
	int32_t __4; // bucketCapacityMask
};
// Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/Enumerator<System.Int32,UnityEngine.U2D.Animation.TransformAccessJob/TransformData>
struct __struct_564__ {
	__struct_22__ __0; // m_Enumerator
};
// Unity.Collections.LowLevel.Unsafe.UnsafeHashSet`1/ParallelWriter<System.Object>
struct __struct_571__ {
	__struct_273__ __0; // m_Data
};
// Unity.Collections.LowLevel.Unsafe.UnsafeList/ParallelWriter
struct __struct_573__ {
	uintptr_t __0; // Ptr
	uintptr_t __1; // ListData
};
// Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/Enumerator<System.Object,System.Object>
struct __struct_585__ {
	__struct_510__ __0; // hashmap
	uintptr_t __1; // key
	uint8_t __2; // isFirst
	uintptr_t __3; // value
	__struct_86__ __4; // iterator
};
// Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/Enumerator<System.Int32,System.Int32>
struct __struct_586__ {
	__struct_510__ __0; // hashmap
	int32_t __1; // key
	uint8_t __2; // isFirst
	int32_t __3; // value
	__struct_1__ __4; // iterator
};
// Unity.Collections.LowLevel.Unsafe.UnsafeStream/Reader
struct __struct_595__ {
	uintptr_t __0; // m_BlockStream
	uintptr_t __1; // m_CurrentBlock
	uintptr_t __2; // m_CurrentPtr
	uintptr_t __3; // m_CurrentBlockEnd
	int32_t __4; // m_RemainingItemCount
	int32_t __5; // m_LastBlockSize
};
// Unity.Collections.LowLevel.Unsafe.UnsafeStream/Writer
struct __struct_596__ {
	uintptr_t __0; // m_BlockStream
	uintptr_t __1; // m_CurrentBlock
	uintptr_t __2; // m_CurrentPtr
	uintptr_t __3; // m_CurrentBlockEnd
	int32_t __4; // m_ForeachIndex
	int32_t __5; // m_ElementCount
	uintptr_t __6; // m_FirstBlock
	int32_t __7; // m_FirstOffset
	int32_t __8; // m_NumberOfBlocks
	int32_t __9; // m_ThreadIndex
};
// Unity.Collections.NativeArray`1/Enumerator<System.Byte>
struct __struct_597__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	uint8_t __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<System.Int32>
struct __struct_598__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	int32_t __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<System.IntPtr>
struct __struct_599__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	intptr_t __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<System.Object>
struct __struct_600__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	uintptr_t __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<System.Single>
struct __struct_601__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	float __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>
struct __struct_602__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_38__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics.float3>
struct __struct_603__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_148__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics.float4x4>
struct __struct_604__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_151__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics.float4>
struct __struct_605__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_152__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.BoneWeight>
struct __struct_607__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_193__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Bounds>
struct __struct_608__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_116__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.ContactPairHeader>
struct __struct_609__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_503__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Experimental.GlobalIllumination.LightDataGI>
struct __struct_610__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_504__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Matrix4x4>
struct __struct_611__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_202__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Tilemaps.TileData>
struct __struct_613__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_505__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.U2D.Animation.PerSkinJobData>
struct __struct_614__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_506__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.U2D.Animation.SpriteSkinData>
struct __struct_615__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_507__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector2>
struct __struct_617__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_144__ __2; // value
};
// Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector3Int>
struct __struct_618__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_1__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<System.Byte>
struct __struct_621__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	uint8_t __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<System.Int32>
struct __struct_622__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	int32_t __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<System.IntPtr>
struct __struct_623__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	intptr_t __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<System.Object>
struct __struct_624__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	uintptr_t __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<System.Single>
struct __struct_625__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	float __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>
struct __struct_626__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_38__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics.float3>
struct __struct_627__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_148__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics.float4x4>
struct __struct_628__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_151__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics.float4>
struct __struct_629__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_152__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.BoneWeight>
struct __struct_631__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_193__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Bounds>
struct __struct_632__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_116__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.ContactPairHeader>
struct __struct_633__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_503__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Experimental.GlobalIllumination.LightDataGI>
struct __struct_634__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_504__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Matrix4x4>
struct __struct_635__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_202__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Tilemaps.TileData>
struct __struct_637__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_505__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.U2D.Animation.PerSkinJobData>
struct __struct_638__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_506__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.U2D.Animation.SpriteSkinData>
struct __struct_639__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_507__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector2>
struct __struct_641__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_144__ __2; // value
};
// Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector3Int>
struct __struct_642__ {
	__struct_273__ __0; // m_Array
	int32_t __1; // m_Index
	__struct_1__ __2; // value
};
// Unity.Collections.NativeBitArray
struct __struct_670__ {
	__struct_490__ __0; // m_BitArray
};
// Unity.Collections.NativeHashSet`1/ParallelWriter<System.Object>
struct __struct_679__ {
	__struct_571__ __0; // m_Data
};
// Unity.Collections.NativeMultiHashMap`2/Enumerator<System.Object,System.Object>
struct __struct_682__ {
	__struct_111__ __0; // hashmap
	uintptr_t __1; // key
	uint8_t __2; // isFirst
	uintptr_t __3; // value
	__struct_86__ __4; // iterator
};
// Unity.Collections.NativeMultiHashMap`2/Enumerator<System.Int32,System.Int32>
struct __struct_683__ {
	__struct_111__ __0; // hashmap
	int32_t __1; // key
	uint8_t __2; // isFirst
	int32_t __3; // value
	__struct_1__ __4; // iterator
};
// Unity.Collections.NativeQueue`1/ParallelWriter<System.Object>
struct __struct_688__ {
	uintptr_t __0; // m_Buffer
	uintptr_t __1; // m_QueuePool
	int32_t __2; // m_ThreadIndex
};
// Unity.Collections.NativeSlice`1/Enumerator<System.Byte>
struct __struct_690__ {
	__struct_24__ __0; // m_Array
	int32_t __1; // m_Index
};
// Unity.Collections.NativeStream/Reader
struct __struct_703__ {
	__struct_595__ __0; // m_Reader
};
// Unity.Collections.NativeStream/Writer
struct __struct_704__ {
	__struct_596__ __0; // m_Writer
};
// Unity.Collections.NativeText/Enumerator
struct __struct_705__ {
	__struct_114__ __0; // target
	int32_t __1; // offset
	__struct_85__ __2; // current
};
// Unity.Collections.SortJob`2<System.Object,System.Object>
struct __struct_706__ {
	uintptr_t __0; // Data
	uintptr_t __1; // Comp
	int32_t __2; // Length
};
// Unity.Collections.SortJob`2<System.Object,Unity.Collections.NativeSortExtension/DefaultComparer`1<System.Object>>
struct __struct_707__ {
	uintptr_t __0; // Data
	__struct_100__ __1; // Comp
	int32_t __2; // Length
};
// Unity.Collections.LowLevel.Unsafe.UnsafeStream/ConstructJob
struct __struct_711__ {
	__struct_510__ __0; // Container
	__struct_24__ __1; // Length
};
// Unity.Collections.LowLevel.Unsafe.UnsafeStream/ConstructJobList
struct __struct_712__ {
	__struct_510__ __0; // Container
	uintptr_t __1; // List
};
// Unity.Collections.NativeListDisposeJob
struct __struct_715__ {
	__struct_114__ __0; // Data
};
// Unity.Collections.NativeQueueDispose
struct __struct_793__ {
	uintptr_t __0; // m_Buffer
	uintptr_t __1; // m_QueuePool
	__struct_68__ __2; // m_AllocatorLabel
};
// Unity.Collections.NativeQueueDisposeJob
struct __struct_716__ {
	__struct_793__ __0; // Data
};
// Unity.Collections.NativeSortExtension/SegmentSortMerge`2<System.Object,System.Object>
struct __struct_718__ {
	uintptr_t __0; // Data
	uintptr_t __1; // Comp
	int32_t __2; // Length
	int32_t __3; // SegmentWidth
};
// Unity.Collections.NativeSortExtension/SegmentSortMerge`2<System.Object,Unity.Collections.NativeSortExtension/DefaultComparer`1<System.Object>>
struct __struct_719__ {
	uintptr_t __0; // Data
	__struct_100__ __1; // Comp
	int32_t __2; // Length
	int32_t __3; // SegmentWidth
};
// Unity.Collections.NativeStream/ConstructJob
struct __struct_720__ {
	__struct_111__ __0; // Container
	__struct_24__ __1; // Length
};
// Unity.Collections.NativeStream/ConstructJobList
struct __struct_721__ {
	__struct_111__ __0; // Container
	uintptr_t __1; // List
};
// UnityEngine.U2D.Animation.PrepareDeformJob
struct __struct_724__ {
	__struct_24__ __0; // perSkinJobData
	int32_t __1; // batchDataSize
	__struct_24__ __2; // boneLookupData
	__struct_24__ __3; // vertexLookupData
};
// UnityEngine.U2D.Animation.BoneDeformBatchedJob
struct __struct_729__ {
	__struct_24__ __0; // boneTransform
	__struct_24__ __1; // rootTransform
	__struct_24__ __2; // boneLookupData
	__struct_24__ __3; // spriteSkinData
	__struct_111__ __4; // rootTransformIndex
	__struct_111__ __5; // boneTransformIndex
	__struct_24__ __6; // finalBoneTransforms
};
// UnityEngine.U2D.Animation.CalculateSpriteSkinAABBJob
struct __struct_730__ {
	__struct_24__ __0; // vertices
	__struct_24__ __1; // isSpriteSkinValidForDeformArray
	__struct_24__ __2; // spriteSkinData
	__struct_24__ __3; // bounds
};
// UnityEngine.U2D.Animation.CopySpriteRendererBuffersJob
struct __struct_731__ {
	__struct_24__ __0; // isSpriteSkinValidForDeformArray
	__struct_24__ __1; // spriteSkinData
	intptr_t __2; // ptrVertices
	__struct_24__ __3; // buffers
	__struct_24__ __4; // bufferSizes
};
// UnityEngine.U2D.Animation.SkinDeformBatchedJob
struct __struct_732__ {
	__struct_24__ __0; // vertices
	__struct_24__ __1; // finalBoneTransforms
	__struct_24__ __2; // perSkinJobData
	__struct_24__ __3; // spriteSkinData
	__struct_24__ __4; // vertexLookupData
};
// UnityEngine.U2D.Animation.LocalToWorldTransformAccessJob
struct __struct_734__ {
	__struct_24__ __0; // outMatrix
};
// UnityEngine.Rendering.BatchCullingContext
struct __struct_736__ {
	__struct_24__ __0; // cullingPlanes
	__struct_24__ __1; // cullingSplits
	__struct_217__ __2; // lodParameters
	__struct_202__ __3; // localToWorldMatrix
	int32_t __4; // viewType
	int32_t __5; // projectionType
	int32_t __6; // cullingFlags
	__struct_216__ __7; // viewID
	uint32_t __8; // cullingLayerMask
	uint64_t __9; // sceneCullingMask
	uint8_t __10; // isOrthographic
	int32_t __11; // receiverPlaneOffset
	int32_t __12; // receiverPlaneCount
};
// UnityEngine.LightBakingOutput
struct __struct_743__ {
	int32_t __0; // probeOcclusionLightIndex
	int32_t __1; // occlusionMaskChannel
	int32_t __2; // lightmapBakeType
	int32_t __3; // mixedLightingMode
	uint8_t __4; // isBaked
};
// UnityEngine.LocationInfo
struct __struct_744__ {
	double __0; // m_Timestamp
	float __1; // m_Latitude
	float __2; // m_Longitude
	float __3; // m_Altitude
	float __4; // m_HorizontalAccuracy
	float __5; // m_VerticalAccuracy
};
// UnityEngine.RaycastHit2D
struct __struct_746__ {
	__struct_144__ __0; // m_Centroid
	__struct_144__ __1; // m_Point
	__struct_144__ __2; // m_Normal
	float __3; // m_Distance
	float __4; // m_Fraction
	int32_t __5; // m_Collider
};
// UnityEngine.Resolution
struct __struct_747__ {
	int32_t __0; // m_Width
	int32_t __1; // m_Height
	__struct_173__ __2; // m_RefreshRate
};
// UnityEngine.Touch
struct __struct_748__ {
	int32_t __0; // m_FingerId
	__struct_144__ __1; // m_Position
	__struct_144__ __2; // m_RawPosition
	__struct_144__ __3; // m_PositionDelta
	float __4; // m_TimeDelta
	int32_t __5; // m_TapCount
	int32_t __6; // m_Phase
	int32_t __7; // m_Type
	float __8; // m_Pressure
	float __9; // m_maximumPossiblePressure
	float __10; // m_Radius
	float __11; // m_RadiusVariance
	float __12; // m_AltitudeAngle
	float __13; // m_AzimuthAngle
};
// YooAsset.DownloadStatus
struct __struct_758__ {
	uint8_t __0; // IsDone
	float __1; // Progress
	int64_t __2; // TotalBytes
	int64_t __3; // DownloadedBytes
};
// YooAsset.WebDecryptFileInfo
struct __struct_761__ {
	uintptr_t __0; // BundleName
	uint32_t __1; // FileLoadCRC
	uintptr_t __2; // FileData
};
const FullName2Signature hybridclr::interpreter::g_fullName2SignatureStub[] = {
	{"GameFramework:GameFramework.FileSystem.FileInfo", "s0"},
	{"GameFramework:GameFramework.FileSystem.FileSystem/BlockData", "s1"},
	{"GameFramework:GameFramework.FileSystem.FileSystem/HeaderData", "s2"},
	{"GameFramework:GameFramework.FileSystem.FileSystem/StringData", "s3"},
	{"GameFramework:GameFramework.GameFrameworkLinkedListRange`1/Enumerator<i4>", "s4"},
	{"GameFramework:GameFramework.GameFrameworkLinkedListRange`1/Enumerator<u>", "s5"},
	{"GameFramework:GameFramework.GameFrameworkLinkedListRange`1<i4>", "s6"},
	{"GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>", "s6"},
	{"GameFramework:GameFramework.GameFrameworkLinkedList`1/Enumerator<i4>", "s8"},
	{"GameFramework:GameFramework.GameFrameworkLinkedList`1/Enumerator<u>", "s9"},
	{"GameFramework:GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo>", "s10"},
	{"GameFramework:GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo>", "s11"},
	{"GameFramework:GameFramework.GameFrameworkLinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo>", "s12"},
	{"GameFramework:GameFramework.GameFrameworkMultiDictionary`2/Enumerator<i4,i4>", "s13"},
	{"GameFramework:GameFramework.GameFrameworkMultiDictionary`2/Enumerator<i4,u>", "s13"},
	{"GameFramework:GameFramework.GameFrameworkMultiDictionary`2/Enumerator<u,u>", "s15"},
	{"GameFramework:GameFramework.Resource.LocalVersionList", "s16"},
	{"GameFramework:GameFramework.Resource.PackageVersionList", "s17"},
	{"GameFramework:GameFramework.Resource.ResourceManager/ResourceName", "s28"},
	{"GameFramework:GameFramework.Resource.ResourcePackVersionList", "s19"},
	{"GameFramework:GameFramework.Resource.UpdatableVersionList", "s17"},
	{"GameFramework:GameFramework.TaskInfo", "s21"},
	{"System.ArraySegment`1/Enumerator<u1>", "s22"},
	{"System.ArraySegment`1/Enumerator<u>", "s22"},
	{"System.ArraySegment`1<u1>", "s24"},
	{"System.ArraySegment`1<u>", "s24"},
	{"UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo", "s26"},
	{"UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo", "s27"},
	{"UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo", "s28"},
	{"GameFramework:GameFramework.TypeNamePair", "s6"},
	{"System.DateTime", "s30"},
	{"System.Span`1<u1>", "s31"},
	{"System.ReadOnlySpan`1<u2>", "s31"},
	{"System.Span`1<u2>", "s31"},
	{"System.Collections.Generic.KeyValuePair`2<u,u>", "s34"},
	{"System.Guid", "s35"},
	{"System:System.Text.RegularExpressions.Regex/CachedCodeEntryKey", "s36"},
	{"System.ValueTuple`2<u,u>", "s6"},
	{"UnityEngine.TerrainUtils.TerrainTileCoord", "s38"},
	{"UnityEngine.RenderInstancedDataLayout", "s39"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite", "s40"},
	{"GameFramework:GameFramework.Config.ConfigManager/ConfigData", "s41"},
	{"System.Resources.ResourceLocator", "s42"},
	{"YooAsset:YooAsset.DebugBundleInfo", "s43"},
	{"System.Collections.Generic.KeyValuePair`2<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,u>", "s44"},
	{"System.Collections.Generic.KeyValuePair`2<GameFramework:GameFramework.TypeNamePair,u>", "s45"},
	{"System.Collections.Generic.KeyValuePair`2<u1,u>", "s3"},
	{"System.Collections.Generic.KeyValuePair`2<System.Guid,u>", "s47"},
	{"System.Collections.Generic.KeyValuePair`2<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<i4>>", "s48"},
	{"System.Collections.Generic.KeyValuePair`2<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s48"},
	{"System.Collections.Generic.KeyValuePair`2<i4,i4>", "s38"},
	{"System.Collections.Generic.KeyValuePair`2<i4,u>", "s51"},
	{"System.Collections.Generic.KeyValuePair`2<i4,UnityEngine.RenderInstancedDataLayout>", "s52"},
	{"System.Collections.Generic.KeyValuePair`2<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>", "s53"},
	{"System.Collections.Generic.KeyValuePair`2<u,GameFramework:GameFramework.Config.ConfigManager/ConfigData>", "s54"},
	{"System.Collections.Generic.KeyValuePair`2<u,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s55"},
	{"System.Collections.Generic.KeyValuePair`2<u,i4>", "s42"},
	{"System.Collections.Generic.KeyValuePair`2<u,System.Resources.ResourceLocator>", "s57"},
	{"System.Collections.Generic.KeyValuePair`2<u,YooAsset:YooAsset.DebugBundleInfo>", "s58"},
	{"System.Collections.Generic.KeyValuePair`2<System:System.Text.RegularExpressions.Regex/CachedCodeEntryKey,u>", "s59"},
	{"System.Collections.Generic.KeyValuePair`2<System.ValueTuple`2<u,u>,u>", "s45"},
	{"System.Collections.Generic.KeyValuePair`2<UnityEngine.TerrainUtils.TerrainTileCoord,u>", "s61"},
	{"GameFramework:GameFramework.ObjectPool.ObjectInfo", "s62"},
	{"GameFramework:GameFramework.ReferencePoolInfo", "s63"},
	{"GameFramework:GameFramework.Resource.ResourceManager/ReadWriteResourceInfo", "s64"},
	{"GameFramework:GameFramework.Resource.ResourceManager/ResourceUpdater/ApplyInfo", "s65"},
	{"System.Collections.Generic.KeyValuePair`2<i4,GameFramework:GameFramework.FileSystem.FileSystem/StringData>", "s66"},
	{"System.Nullable`1<u>", "s3"},
	{"System:System.Text.RegularExpressions.RegexCharClass/SingleRange", "s68"},
	{"System.ValueTuple`1<u1>", "s69"},
	{"System.ValueTuple`2<i,u>", "s70"},
	{"Unity.Collections:Unity.Collections.ListPair`2<u,u>", "s34"},
	{"Unity.Collections.NativeArray`1<u>", "s24"},
	{"Unity.Collections:Unity.Collections.Pair`2<u,u>", "s34"},
	{"UnityEngine.BeforeRenderHelper/OrderBlock", "s51"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkin/TransformData", "s34"},
	{"UnityEngine.UnitySynchronizationContext/WorkRequest", "s40"},
	{"YooAsset:YooAsset.DebugOperationInfo", "s77"},
	{"YooAsset:YooAsset.DebugProviderInfo", "s78"},
	{"System.Reflection.CustomAttributeNamedArgument", "s79"},
	{"System.Reflection.CustomAttributeTypedArgument", "s34"},
	{"System.Collections.Generic.KeyValuePair`2<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,GameFramework:GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>", "s81"},
	{"System.ConsoleKeyInfo", "s82"},
	{"System.Decimal", "s83"},
	{"System.DateTimeOffset", "s84"},
	{"System.Index", "s85"},
	{"System.Memory`1<u>", "s86"},
	{"System.Numerics.Vector`1<u>", "s87"},
	{"System.Range", "s88"},
	{"System.ReadOnlyMemory`1<u>", "s86"},
	{"System.Security.Cryptography.HashAlgorithmName", "s90"},
	{"System.Threading.CancellationTokenRegistration", "s57"},
	{"System.Threading.Tasks.ValueTask`1<u>", "s92"},
	{"System.Threading.Tasks.ValueTask", "s93"},
	{"System.TimeSpan", "s94"},
	{"System.TimeZoneInfo/TransitionTime", "s95"},
	{"System.ValueTuple`1<u>", "s90"},
	{"System.ValueTuple`3<u,u,u>", "s97"},
	{"System.ValueTuple`5<u,u,u,u,u>", "s98"},
	{"System.ValueTuple`8<u,u,u,u,u,u,u,u>", "s99"},
	{"System.ValueTuple", "s100"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1<u>", "s101"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1<u>", "s102"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1<u>", "s103"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1<u>", "s104"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1<u>", "s105"},
	{"Unity.Collections:Unity.Collections.FixedString128Bytes", "s106"},
	{"Unity.Collections:Unity.Collections.FixedString32Bytes", "s107"},
	{"Unity.Collections:Unity.Collections.FixedString4096Bytes", "s108"},
	{"Unity.Collections:Unity.Collections.FixedString512Bytes", "s109"},
	{"Unity.Collections:Unity.Collections.FixedString64Bytes", "s110"},
	{"Unity.Collections:Unity.Collections.HeapString", "s111"},
	{"Unity.Collections:Unity.Collections.NativeReference`1<u>", "s510"},
	{"Unity.Collections.NativeSlice`1<u>", "s24"},
	{"Unity.Collections:Unity.Collections.NativeText", "s114"},
	{"Unity.Jobs.JobHandle", "s115"},
	{"Unity.Mathematics:Unity.Mathematics.Geometry.MinMaxAABB", "s116"},
	{"Unity.Mathematics:Unity.Mathematics.bool2x2", "s117"},
	{"Unity.Mathematics:Unity.Mathematics.bool2x3", "s118"},
	{"Unity.Mathematics:Unity.Mathematics.bool2x4", "s119"},
	{"Unity.Mathematics:Unity.Mathematics.bool2", "s120"},
	{"Unity.Mathematics:Unity.Mathematics.bool3x2", "s121"},
	{"Unity.Mathematics:Unity.Mathematics.bool3x3", "s122"},
	{"Unity.Mathematics:Unity.Mathematics.bool3x4", "s123"},
	{"Unity.Mathematics:Unity.Mathematics.bool3", "s124"},
	{"Unity.Mathematics:Unity.Mathematics.bool4x2", "s125"},
	{"Unity.Mathematics:Unity.Mathematics.bool4x3", "s126"},
	{"Unity.Mathematics:Unity.Mathematics.bool4x4", "s127"},
	{"Unity.Mathematics:Unity.Mathematics.bool4", "s128"},
	{"Unity.Mathematics:Unity.Mathematics.double2x2", "s129"},
	{"Unity.Mathematics:Unity.Mathematics.double2x3", "s130"},
	{"Unity.Mathematics:Unity.Mathematics.double2x4", "s131"},
	{"Unity.Mathematics:Unity.Mathematics.double2", "s132"},
	{"Unity.Mathematics:Unity.Mathematics.double3x2", "s133"},
	{"Unity.Mathematics:Unity.Mathematics.double3x3", "s134"},
	{"Unity.Mathematics:Unity.Mathematics.double3x4", "s135"},
	{"Unity.Mathematics:Unity.Mathematics.double3", "s136"},
	{"Unity.Mathematics:Unity.Mathematics.double4x2", "s137"},
	{"Unity.Mathematics:Unity.Mathematics.double4x3", "s138"},
	{"Unity.Mathematics:Unity.Mathematics.double4x4", "s139"},
	{"Unity.Mathematics:Unity.Mathematics.double4", "s140"},
	{"Unity.Mathematics:Unity.Mathematics.float2x2", "s141"},
	{"Unity.Mathematics:Unity.Mathematics.float2x3", "s142"},
	{"Unity.Mathematics:Unity.Mathematics.float2x4", "s143"},
	{"Unity.Mathematics:Unity.Mathematics.float2", "s144"},
	{"Unity.Mathematics:Unity.Mathematics.float3x2", "s116"},
	{"Unity.Mathematics:Unity.Mathematics.float3x3", "s146"},
	{"Unity.Mathematics:Unity.Mathematics.float3x4", "s147"},
	{"Unity.Mathematics:Unity.Mathematics.float3", "s148"},
	{"Unity.Mathematics:Unity.Mathematics.float4x2", "s149"},
	{"Unity.Mathematics:Unity.Mathematics.float4x3", "s150"},
	{"Unity.Mathematics:Unity.Mathematics.float4x4", "s151"},
	{"Unity.Mathematics:Unity.Mathematics.float4", "s152"},
	{"Unity.Mathematics:Unity.Mathematics.half2", "s153"},
	{"Unity.Mathematics:Unity.Mathematics.half3", "s154"},
	{"Unity.Mathematics:Unity.Mathematics.half4", "s155"},
	{"Unity.Mathematics:Unity.Mathematics.half", "s156"},
	{"Unity.Mathematics:Unity.Mathematics.int2x2", "s157"},
	{"Unity.Mathematics:Unity.Mathematics.int2x3", "s158"},
	{"Unity.Mathematics:Unity.Mathematics.int2x4", "s159"},
	{"Unity.Mathematics:Unity.Mathematics.int2", "s38"},
	{"Unity.Mathematics:Unity.Mathematics.int3x2", "s161"},
	{"Unity.Mathematics:Unity.Mathematics.int3x3", "s162"},
	{"Unity.Mathematics:Unity.Mathematics.int3x4", "s163"},
	{"Unity.Mathematics:Unity.Mathematics.int3", "s1"},
	{"Unity.Mathematics:Unity.Mathematics.int4x2", "s165"},
	{"Unity.Mathematics:Unity.Mathematics.int4x3", "s166"},
	{"Unity.Mathematics:Unity.Mathematics.int4x4", "s167"},
	{"Unity.Mathematics:Unity.Mathematics.int4", "s39"},
	{"Unity.Mathematics:Unity.Mathematics.quaternion", "s169"},
	{"Unity.Mathematics:Unity.Mathematics.uint2x2", "s170"},
	{"Unity.Mathematics:Unity.Mathematics.uint2x3", "s171"},
	{"Unity.Mathematics:Unity.Mathematics.uint2x4", "s172"},
	{"Unity.Mathematics:Unity.Mathematics.uint2", "s173"},
	{"Unity.Mathematics:Unity.Mathematics.uint3x2", "s174"},
	{"Unity.Mathematics:Unity.Mathematics.uint3x3", "s175"},
	{"Unity.Mathematics:Unity.Mathematics.uint3x4", "s176"},
	{"Unity.Mathematics:Unity.Mathematics.uint3", "s177"},
	{"Unity.Mathematics:Unity.Mathematics.uint4x2", "s178"},
	{"Unity.Mathematics:Unity.Mathematics.uint4x3", "s179"},
	{"Unity.Mathematics:Unity.Mathematics.uint4x4", "s180"},
	{"Unity.Mathematics:Unity.Mathematics.uint4", "s181"},
	{"UnityEngine.Animations.AnimationClipPlayable", "s182"},
	{"UnityEngine.Animations.AnimationLayerMixerPlayable", "s182"},
	{"UnityEngine.Animations.AnimationMixerPlayable", "s182"},
	{"UnityEngine.Animations.AnimationMotionXToDeltaPlayable", "s182"},
	{"UnityEngine.Animations.AnimationOffsetPlayable", "s182"},
	{"UnityEngine.Animations.AnimationPosePlayable", "s182"},
	{"UnityEngine.Animations.AnimationRemoveScalePlayable", "s182"},
	{"UnityEngine.Animations.AnimationScriptPlayable", "s182"},
	{"UnityEngine.Animations.AnimatorControllerPlayable", "s182"},
	{"UnityEngine.Audio.AudioClipPlayable", "s182"},
	{"UnityEngine.Audio.AudioMixerPlayable", "s182"},
	{"UnityEngine.BoneWeight", "s193"},
	{"UnityEngine.BoundsInt", "s161"},
	{"UnityEngine.Bounds", "s116"},
	{"UnityEngine.Color", "s152"},
	{"UnityEngine.Experimental.Playables.CameraPlayable", "s182"},
	{"UnityEngine.Experimental.Playables.MaterialEffectPlayable", "s182"},
	{"UnityEngine.Experimental.Playables.TextureMixerPlayable", "s182"},
	{"UnityEngine.Experimental.Video.VideoClipPlayable", "s182"},
	{"UnityEngine.Hash128", "s201"},
	{"UnityEngine.Matrix4x4", "s202"},
	{"UnityEngine.PhysicsScene2D", "s85"},
	{"UnityEngine.PhysicsScene", "s85"},
	{"UnityEngine.Playables.PlayableHandle", "s205"},
	{"UnityEngine.Playables.PlayableOutputHandle", "s205"},
	{"UnityEngine.Playables.PlayableOutput", "s182"},
	{"UnityEngine.Playables.Playable", "s182"},
	{"UnityEngine.Quaternion", "s152"},
	{"UnityEngine.RectInt", "s39"},
	{"UnityEngine.Rect", "s152"},
	{"UnityEngine.RefreshRate", "s173"},
	{"UnityEngine.Rendering.BatchID", "s213"},
	{"UnityEngine.Rendering.BatchMaterialID", "s213"},
	{"UnityEngine.Rendering.BatchMeshID", "s213"},
	{"UnityEngine.Rendering.BatchPackedCullingViewID", "s216"},
	{"UnityEngine.Rendering.LODParameters", "s217"},
	{"UnityEngine.Rendering.RenderTargetIdentifier", "s218"},
	{"UnityEngine.Rendering.ScriptableRenderContext", "s763"},
	{"UnityEngine.Rendering.ShaderTagId", "s85"},
	{"UnityEngine.Vector2Int", "s38"},
	{"UnityEngine.Vector2", "s144"},
	{"UnityEngine.Vector3Int", "s1"},
	{"UnityEngine.Vector3", "s148"},
	{"UnityEngine.Vector4", "s152"},
	{"UnityEngine.XR.Bone", "s226"},
	{"UnityEngine.XR.Eyes", "s226"},
	{"UnityEngine.XR.Hand", "s226"},
	{"UnityEngine.XR.InputDevice", "s229"},
	{"UnityEngine.XR.InputFeatureUsage", "s230"},
	{"UnityEngine.XR.MeshGenerationResult", "s231"},
	{"UnityEngine.XR.MeshId", "s201"},
	{"System.ReadOnlySpan`1<u>", "s31"},
	{"System.Memory`1<u1>", "s86"},
	{"System.ModuleHandle", "s763"},
	{"System.Numerics.Vector`1<u2>", "s87"},
	{"System.Numerics.Vector`1<u8>", "s87"},
	{"System.ReadOnlyMemory`1<u1>", "s86"},
	{"System.Span`1<i4>", "s31"},
	{"System.Span`1<u>", "s31"},
	{"System.Span`1<u4>", "s31"},
	{"System.Span`1<UnityEngine.jvalue>", "s31"},
	{"System.Runtime.InteropServices.GCHandle", "s763"},
	{"System.RuntimeFieldHandle", "s763"},
	{"System.ReadOnlySpan`1<u1>", "s31"},
	{"System.Threading.CancellationToken", "s90"},
	{"System.Threading.Tasks.VoidTaskResult", "s100"},
	{"System.Threading.Tasks.ValueTask`1<i4>", "s248"},
	{"System.ValueTuple`2<i4,i4>", "s249"},
	{"System.ValueTuple`2<i4,i>", "s250"},
	{"System.ValueTuple`2<Unity.Collections.NativeArray`1<u>,i4>", "s251"},
	{"System.ValueTuple`3<u,i4,i4>", "s252"},
	{"System.ValueTuple`5<i,i4,i,i4,u1>", "s253"},
	{"System.ValueTuple`8<i,i4,i,i4,i,i4,u1,System.ValueTuple`1<u1>>", "s254"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1<u1>", "s101"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1<i4>", "s101"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1<r4>", "s101"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1<u1>", "s102"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1<i4>", "s102"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1<r4>", "s102"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1<u1>", "s103"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1<i4>", "s103"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1<r4>", "s103"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1<u1>", "s104"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1<i4>", "s104"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1<r4>", "s104"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1<u1>", "s105"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1<i4>", "s105"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1<r4>", "s105"},
	{"Unity.Collections:Unity.Collections.AllocatorManager/AllocatorHandle", "s68"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData", "s38"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1<u>", "s272"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelReader<u>", "s273"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMapIterator`1<i4>", "s1"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMapIterator`1<u>", "s86"},
	{"Unity.Collections:Unity.Collections.NativeList`1<u>", "s510"},
	{"Unity.Collections.NativeArray`1/ReadOnly<u>", "s273"},
	{"Unity.Collections.NativeArray`1<u1>", "s24"},
	{"Unity.Collections.NativeArray`1<i4>", "s24"},
	{"Unity.Collections.NativeArray`1<i>", "s24"},
	{"Unity.Collections.NativeArray`1<r4>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.Mathematics:Unity.Mathematics.float3>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.Mathematics:Unity.Mathematics.float4x4>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.Mathematics:Unity.Mathematics.float4>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.Mathematics:Unity.Mathematics.int2>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.BoneWeight>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Bounds>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.ContactPairHeader>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Matrix4x4>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Quaternion>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Tilemaps.TileData>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PerSkinJobData>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkinData>", "s24"},
	{"Unity.Collections.NativeArray`1<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Vector2>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Vector3Int>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Vector3>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Vector4>", "s24"},
	{"Unity.Collections.NativeSlice`1<u1>", "s24"},
	{"Unity.Collections.NativeSlice`1<i4>", "s24"},
	{"Unity.Collections.NativeSlice`1<Unity.Mathematics:Unity.Mathematics.float3>", "s24"},
	{"Unity.Collections.NativeSlice`1<Unity.Mathematics:Unity.Mathematics.float4x4>", "s24"},
	{"Unity.Collections.NativeSlice`1<Unity.Mathematics:Unity.Mathematics.float4>", "s24"},
	{"Unity.Collections.NativeSlice`1<UnityEngine.BoneWeight>", "s24"},
	{"Unity.Collections.NativeSlice`1<UnityEngine.Matrix4x4>", "s24"},
	{"Unity.Collections.NativeSlice`1<UnityEngine.Vector2>", "s24"},
	{"Unity.Collections.NativeSlice`1<UnityEngine.Vector3>", "s24"},
	{"Unity.Collections.NativeSlice`1<UnityEngine.Vector4>", "s24"},
	{"Unity.Collections:Unity.Collections.NativeText/ReadOnly", "s114"},
	{"Unity.Collections:Unity.Collections.Unicode/Rune", "s85"},
	{"Unity.Mathematics:Unity.Mathematics.RigidTransform", "s313"},
	{"UnityEngine.AssemblyVersion", "s314"},
	{"UnityEngine.Ray", "s116"},
	{"UnityEngine.SceneManagement.Scene", "s85"},
	{"UnityEngine.SendMouseEvents/HitInfo", "s34"},
	{"System.Buffers.MemoryHandle", "s318"},
	{"Unity.Burst:Unity.Burst.Intrinsics.v64", "s319"},
	{"Unity.Burst:Unity.Burst.Intrinsics.v128", "s320"},
	{"YooAsset:YooAsset.DecryptFileInfo", "s321"},
	{"System.Collections.DictionaryEntry", "s34"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,u>", "s323"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<GameFramework:GameFramework.TypeNamePair,u>", "s324"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u1,u>", "s325"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<System.Guid,u>", "s326"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<i4>>", "s327"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s327"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,i4>", "s329"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,u>", "s330"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,UnityEngine.RenderInstancedDataLayout>", "s331"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>", "s332"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,GameFramework:GameFramework.Config.ConfigManager/ConfigData>", "s333"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s334"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,i4>", "s335"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,u>", "s336"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,System.Resources.ResourceLocator>", "s337"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<u,YooAsset:YooAsset.DebugBundleInfo>", "s338"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<System:System.Text.RegularExpressions.Regex/CachedCodeEntryKey,u>", "s339"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<System.ValueTuple`2<u,u>,u>", "s324"},
	{"System.Collections.Generic.Dictionary`2/Enumerator<UnityEngine.TerrainUtils.TerrainTileCoord,u>", "s341"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,u>", "s342"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<GameFramework:GameFramework.TypeNamePair,u>", "s343"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u1,u>", "s344"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.Guid,u>", "s345"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<i4>>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,i4>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,u>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,UnityEngine.RenderInstancedDataLayout>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>", "s346"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,GameFramework:GameFramework.Config.ConfigManager/ConfigData>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,i4>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,System.Resources.ResourceLocator>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<u,YooAsset:YooAsset.DebugBundleInfo>", "s352"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System:System.Text.RegularExpressions.Regex/CachedCodeEntryKey,u>", "s358"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<System.ValueTuple`2<u,u>,u>", "s343"},
	{"System.Collections.Generic.Dictionary`2/KeyCollection/Enumerator<UnityEngine.TerrainUtils.TerrainTileCoord,u>", "s360"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<GameFramework:GameFramework.TypeNamePair,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u1,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.Guid,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<i4>>", "s343"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s343"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,i4>", "s346"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,UnityEngine.RenderInstancedDataLayout>", "s369"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteLibrary/CategoryEntrySprite>", "s370"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,GameFramework:GameFramework.Config.ConfigManager/ConfigData>", "s371"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,GameFramework:GameFramework.GameFrameworkLinkedListRange`1<u>>", "s343"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,i4>", "s346"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,System.Resources.ResourceLocator>", "s375"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<u,YooAsset:YooAsset.DebugBundleInfo>", "s376"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System:System.Text.RegularExpressions.Regex/CachedCodeEntryKey,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.ValueTuple`2<u,u>,u>", "s352"},
	{"System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<UnityEngine.TerrainUtils.TerrainTileCoord,u>", "s352"},
	{"System.Collections.Generic.HashSet`1/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName>", "s342"},
	{"System.Collections.Generic.HashSet`1/Enumerator<i4>", "s346"},
	{"System.Collections.Generic.HashSet`1/Enumerator<u>", "s352"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<i4>", "s384"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<u>", "s385"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadAssetInfo>", "s386"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/LoadSceneInfo>", "s387"},
	{"System:System.Collections.Generic.LinkedList`1/Enumerator<UnityGameFramework.Runtime:UnityGameFramework.Runtime.EditorResourceComponent/UnloadSceneInfo>", "s388"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.FileSystem.FileInfo>", "s389"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.FileSystem.FileSystem/BlockData>", "s390"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.ObjectPool.ObjectInfo>", "s391"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.ReferencePoolInfo>", "s392"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName>", "s342"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceUpdater/ApplyInfo>", "s394"},
	{"System.Collections.Generic.List`1/Enumerator<GameFramework:GameFramework.TaskInfo>", "s395"},
	{"System.Collections.Generic.List`1/Enumerator<System.Collections.Generic.KeyValuePair`2<u,u>>", "s396"},
	{"System.Collections.Generic.List`1/Enumerator<i4>", "s346"},
	{"System.Collections.Generic.List`1/Enumerator<i8>", "s398"},
	{"System.Collections.Generic.List`1/Enumerator<u>", "s352"},
	{"System.Collections.Generic.List`1/Enumerator<System:System.Text.RegularExpressions.RegexCharClass/SingleRange>", "s400"},
	{"System.Collections.Generic.List`1/Enumerator<Unity.Collections:Unity.Collections.ListPair`2<u,u>>", "s396"},
	{"System.Collections.Generic.List`1/Enumerator<Unity.Collections:Unity.Collections.Pair`2<u,u>>", "s396"},
	{"System.Collections.Generic.List`1/Enumerator<UnityEngine.BeforeRenderHelper/OrderBlock>", "s403"},
	{"System.Collections.Generic.List`1/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkin/TransformData>", "s396"},
	{"System.Collections.Generic.List`1/Enumerator<UnityEngine.UnitySynchronizationContext/WorkRequest>", "s370"},
	{"System.Collections.Generic.List`1/Enumerator<YooAsset:YooAsset.DebugBundleInfo>", "s376"},
	{"System.Collections.Generic.List`1/Enumerator<YooAsset:YooAsset.DebugOperationInfo>", "s407"},
	{"System.Collections.Generic.List`1/Enumerator<YooAsset:YooAsset.DebugProviderInfo>", "s408"},
	{"System.Collections.Generic.Queue`1/Enumerator<System.Collections.Generic.KeyValuePair`2<i4,GameFramework:GameFramework.FileSystem.FileSystem/StringData>>", "s409"},
	{"System.Collections.Generic.Queue`1/Enumerator<u>", "s352"},
	{"System.Collections.Generic.Queue`1/Enumerator<System.ValueTuple`2<i,u>>", "s411"},
	{"System:System.Collections.Generic.SortedDictionary`2/Enumerator<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,GameFramework:GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>", "s412"},
	{"System:System.Collections.Generic.SortedDictionary`2/Enumerator<i4,GameFramework:GameFramework.FileSystem.FileSystem/StringData>", "s412"},
	{"System:System.Collections.Generic.SortedDictionary`2/Enumerator<u,i4>", "s412"},
	{"System:System.Collections.Generic.SortedDictionary`2/Enumerator<u,u>", "s412"},
	{"System:System.Collections.Generic.SortedSet`1/Enumerator<System.Collections.Generic.KeyValuePair`2<GameFramework:GameFramework.Resource.ResourceManager/ResourceName,GameFramework:GameFramework.Resource.ResourceManager/ReadWriteResourceInfo>>", "s416"},
	{"System:System.Collections.Generic.SortedSet`1/Enumerator<System.Collections.Generic.KeyValuePair`2<i4,GameFramework:GameFramework.FileSystem.FileSystem/StringData>>", "s416"},
	{"System:System.Collections.Generic.SortedSet`1/Enumerator<System.Collections.Generic.KeyValuePair`2<u,i4>>", "s416"},
	{"System:System.Collections.Generic.SortedSet`1/Enumerator<System.Collections.Generic.KeyValuePair`2<u,u>>", "s416"},
	{"System:System.Collections.Generic.SortedSet`1/Enumerator<u>", "s416"},
	{"Unity.Burst:Unity.Burst.Intrinsics.v256", "s421"},
	{"YooAsset:YooAsset.DownloadErrorData", "s40"},
	{"YooAsset:YooAsset.DownloadFileData", "s423"},
	{"YooAsset:YooAsset.DownloadUpdateData", "s424"},
	{"YooAsset:YooAsset.DownloaderFinishData", "s425"},
	{"System.IO.DisableMediaInsertionPrompt", "s426"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList", "s427"},
	{"Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>", "s100"},
	{"UnityEngine.ContactFilter2D", "s429"},
	{"System.RuntimeMethodHandle", "s763"},
	{"System.RuntimeTypeHandle", "s763"},
	{"System.Nullable`1<i4>", "s432"},
	{"System.Nullable`1<System:System.Text.RegularExpressions.RegexPrefix>", "s433"},
	{"System.Nullable`1<GameFramework:GameFramework.Config.ConfigManager/ConfigData>", "s434"},
	{"System.Nullable`1<u1>", "s120"},
	{"System.Nullable`1<System.DateTime>", "s436"},
	{"System.Nullable`1<System.Decimal>", "s437"},
	{"System.Nullable`1<i8>", "s438"},
	{"System.Runtime.Serialization.StreamingContext", "s42"},
	{"System.ParameterizedStrings/FormatParam", "s51"},
	{"System.ReadOnlySpan`1<u4>", "s31"},
	{"System.ReadOnlySpan`1<i4>", "s31"},
	{"System.ReadOnlySpan`1<UnityEngine.jvalue>", "s31"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder", "s444"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<i4>", "s448"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<u>", "s448"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<u1>", "s448"},
	{"System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Threading.Tasks.VoidTaskResult>", "s448"},
	{"System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<i4>", "s449"},
	{"System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1<u>", "s450"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable", "s451"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter", "s425"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<u1>", "s425"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<i4>", "s425"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<u>", "s425"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Threading.Tasks.VoidTaskResult>", "s425"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<u1>", "s451"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<i4>", "s451"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<u>", "s451"},
	{"System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1<System.Threading.Tasks.VoidTaskResult>", "s451"},
	{"System.Runtime.CompilerServices.TaskAwaiter", "s90"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<u1>", "s90"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<i4>", "s90"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<u>", "s90"},
	{"System.Runtime.CompilerServices.TaskAwaiter`1<System.Threading.Tasks.VoidTaskResult>", "s90"},
	{"System.Runtime.CompilerServices.ValueTaskAwaiter", "s466"},
	{"System.Runtime.CompilerServices.ValueTaskAwaiter`1<i4>", "s467"},
	{"System.Runtime.CompilerServices.ValueTaskAwaiter`1<u>", "s468"},
	{"System.Runtime.Remoting.Messaging.LogicalCallContext/Reader", "s90"},
	{"System.Runtime.Serialization.SerializationEntry", "s40"},
	{"System:System.Text.RegularExpressions.RegexPrefix", "s3"},
	{"System.Threading.LockHolder", "s90"},
	{"System.Threading.SparselyPopulatedArrayAddInfo`1<u>", "s42"},
	{"System.Threading.Tasks.ForceAsyncAwaiter", "s90"},
	{"System.IO.Stream/ReadWriteParameters", "s86"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2<u,u>", "s510"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2<u,u>", "s111"},
	{"UnityEngine.Color32", "s478"},
	{"UnityEngine.TransformDispatchData", "s479"},
	{"UnityEngine.TypeDispatchData", "s480"},
	{"UnityEngine.VFX.VFXOutputEventArgs", "s51"},
	{"UnityEngine.XR.XRNodeState", "s482"},
	{"Unity.Collections.NativeArray`1<UnityEngine.ModifiableContactPair>", "s24"},
	{"Unity.Profiling.DebugScreenCapture", "s484"},
	{"Unity.Collections:Unity.Collections.AllocatorManager/Block", "s485"},
	{"Unity.Collections:Unity.Collections.BitField32", "s213"},
	{"Unity.Collections:Unity.Collections.BitField64", "s216"},
	{"Unity.Collections:Unity.Collections.NativeHashSet`1<u>", "s488"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashSet`1<u>", "s111"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeBitArray", "s490"},
	{"Unity.Collections:Unity.Collections.NativeKeyValueArrays`2<i4,i4>", "s491"},
	{"Unity.Collections:Unity.Collections.NativeKeyValueArrays`2<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s491"},
	{"Unity.Collections:Unity.Collections.NativeKeyValueArrays`2<u,u1>", "s491"},
	{"Unity.Collections:Unity.Collections.NativeKeyValueArrays`2<u,u>", "s491"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2<u,u>", "s510"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1<u1>", "s272"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1<i4>", "s272"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1<i>", "s272"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList", "s427"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList`1<u>", "s272"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeRingQueue`1<u>", "s501"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage/Entry", "s38"},
	{"UnityEngine.ContactPairHeader", "s503"},
	{"UnityEngine.Experimental.GlobalIllumination.LightDataGI", "s504"},
	{"UnityEngine.Tilemaps.TileData", "s505"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PerSkinJobData", "s506"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkinData", "s507"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage", "s508"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2<u,u>", "s111"},
	{"Unity.Collections:Unity.Collections.NativeList`1<u1>", "s510"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.FillPerSkinJobSingleThread", "s511"},
	{"UnityEngine.LayerMask", "s85"},
	{"UnityEngine.CullingGroupEvent", "s513"},
	{"UnityEngine.Jobs.TransformAccess", "s514"},
	{"UnityEngine.ParticleSystem/EmitParams", "s515"},
	{"UnityEngine.ParticleSystem/Particle", "s516"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.ContactPairHeader>", "s273"},
	{"UnityEngine.Playables.FrameData", "s518"},
	{"UnityEngine.RenderTextureDescriptor", "s519"},
	{"UnityEngine.AnimatorStateInfo", "s520"},
	{"UnityEngine.Windows.Speech.PhraseRecognizedEventArgs", "s521"},
	{"UnityEngine.Windows.WebCam.PhotoCapture/PhotoCaptureResult", "s522"},
	{"UnityEngine.Windows.WebCam.VideoCapture/VideoCaptureResult", "s522"},
	{"UnityEngine.SceneManagement.LoadSceneParameters", "s38"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.KeyValue`2<u,u>", "s24"},
	{"System.Collections.Generic.KeyValuePair`2<i4,UnityEngine.Vector2>", "s526"},
	{"Unity.Burst:Unity.Burst.BurstString/FormatOptions", "s527"},
	{"Unity.Burst:Unity.Burst.FunctionPointer`1<u>", "s763"},
	{"Unity.Burst:Unity.Burst.SharedStatic`1<i4>", "s114"},
	{"Unity.Burst:Unity.Burst.SharedStatic`1<i>", "s114"},
	{"Unity.Burst:Unity.Burst.SharedStatic`1<u>", "s114"},
	{"Unity.Burst:Unity.Burst.SharedStatic`1<Unity.Collections:Unity.Collections.AllocatorManager/Array32768`1<Unity.Collections:Unity.Collections.AllocatorManager/TableEntry>>", "s114"},
	{"Unity.Burst:Unity.Burst.SharedStatic`1<Unity.Collections:Unity.Collections.Long1024>", "s114"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1/Enumerator<u1>", "s534"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1/Enumerator<i4>", "s534"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1/Enumerator<u>", "s534"},
	{"Unity.Collections:Unity.Collections.FixedList128Bytes`1/Enumerator<r4>", "s534"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1/Enumerator<u1>", "s538"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1/Enumerator<i4>", "s538"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1/Enumerator<u>", "s538"},
	{"Unity.Collections:Unity.Collections.FixedList32Bytes`1/Enumerator<r4>", "s538"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1/Enumerator<u1>", "s542"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1/Enumerator<i4>", "s542"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1/Enumerator<u>", "s542"},
	{"Unity.Collections:Unity.Collections.FixedList4096Bytes`1/Enumerator<r4>", "s542"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1/Enumerator<u1>", "s546"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1/Enumerator<i4>", "s546"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1/Enumerator<u>", "s546"},
	{"Unity.Collections:Unity.Collections.FixedList512Bytes`1/Enumerator<r4>", "s546"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1/Enumerator<u1>", "s550"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1/Enumerator<i4>", "s550"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1/Enumerator<u>", "s550"},
	{"Unity.Collections:Unity.Collections.FixedList64Bytes`1/Enumerator<r4>", "s550"},
	{"Unity.Collections:Unity.Collections.FixedString128Bytes/Enumerator", "s554"},
	{"Unity.Collections:Unity.Collections.FixedString32Bytes/Enumerator", "s555"},
	{"Unity.Collections:Unity.Collections.FixedString4096Bytes/Enumerator", "s556"},
	{"Unity.Collections:Unity.Collections.FixedString512Bytes/Enumerator", "s557"},
	{"Unity.Collections:Unity.Collections.FixedString64Bytes/Enumerator", "s558"},
	{"Unity.Collections:Unity.Collections.HeapString/Enumerator", "s559"},
	{"Unity.Collections.LowLevel.Unsafe.BurstLike/SharedStatic`1<i>", "s114"},
	{"Unity.Collections.LowLevel.Unsafe.BurstLike/SharedStatic`1<u>", "s114"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeAppendBuffer/Reader", "s24"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMapBucketData", "s563"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/Enumerator<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/Enumerator<u,u1>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/Enumerator<u,u>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/ParallelWriter<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/ParallelWriter<u,u1>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMap`2/ParallelWriter<u,u>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashSet`1/Enumerator<u>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashSet`1/ParallelWriter<u>", "s571"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList/ParallelReader", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList/ParallelWriter", "s573"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/Enumerator<u1>", "s24"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/Enumerator<i4>", "s24"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/Enumerator<i>", "s24"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/Enumerator<u>", "s24"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelReader<u1>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelReader<i4>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelReader<i>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelWriter<u1>", "s114"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelWriter<i4>", "s114"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelWriter<i>", "s114"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeList`1/ParallelWriter<u>", "s114"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/Enumerator<u,u>", "s585"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/Enumerator<i4,i4>", "s586"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/KeyValueEnumerator<i4,i4>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/KeyValueEnumerator<u,u>", "s564"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/ParallelWriter<i4,i4>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeMultiHashMap`2/ParallelWriter<u,u>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList/ParallelReader", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList/ParallelWriter", "s573"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList`1/ParallelReader<u>", "s273"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafePtrList`1/ParallelWriter<u>", "s573"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeStream/Reader", "s595"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeStream/Writer", "s596"},
	{"Unity.Collections.NativeArray`1/Enumerator<u1>", "s597"},
	{"Unity.Collections.NativeArray`1/Enumerator<i4>", "s598"},
	{"Unity.Collections.NativeArray`1/Enumerator<i>", "s599"},
	{"Unity.Collections.NativeArray`1/Enumerator<u>", "s600"},
	{"Unity.Collections.NativeArray`1/Enumerator<r4>", "s601"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>", "s602"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float3>", "s603"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float4x4>", "s604"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float4>", "s605"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.Mathematics:Unity.Mathematics.int2>", "s602"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.BoneWeight>", "s607"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Bounds>", "s608"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.ContactPairHeader>", "s609"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s610"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Matrix4x4>", "s611"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Quaternion>", "s605"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Tilemaps.TileData>", "s613"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PerSkinJobData>", "s614"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkinData>", "s615"},
	{"Unity.Collections.NativeArray`1/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s602"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector2>", "s617"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector3Int>", "s618"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector3>", "s603"},
	{"Unity.Collections.NativeArray`1/Enumerator<UnityEngine.Vector4>", "s605"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<u1>", "s621"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<i4>", "s622"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<i>", "s623"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<u>", "s624"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<r4>", "s625"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>", "s626"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics:Unity.Mathematics.float3>", "s627"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics:Unity.Mathematics.float4x4>", "s628"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics:Unity.Mathematics.float4>", "s629"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.Mathematics:Unity.Mathematics.int2>", "s626"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.BoneWeight>", "s631"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Bounds>", "s632"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.ContactPairHeader>", "s633"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s634"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Matrix4x4>", "s635"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Quaternion>", "s629"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Tilemaps.TileData>", "s637"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PerSkinJobData>", "s638"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkinData>", "s639"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s626"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector2>", "s641"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector3Int>", "s642"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector3>", "s627"},
	{"Unity.Collections.NativeArray`1/ReadOnly/Enumerator<UnityEngine.Vector4>", "s629"},
	{"Unity.Collections.NativeArray`1/ReadOnly<u1>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<i4>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<i>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<r4>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.Collections:Unity.Collections.LowLevel.Unsafe.WordStorage/Entry>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.Mathematics:Unity.Mathematics.float3>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.Mathematics:Unity.Mathematics.float4x4>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.Mathematics:Unity.Mathematics.float4>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.Mathematics:Unity.Mathematics.int2>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.BoneWeight>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Bounds>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Experimental.GlobalIllumination.LightDataGI>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Matrix4x4>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Quaternion>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Tilemaps.TileData>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PerSkinJobData>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SpriteSkinData>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Vector2>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Vector3Int>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Vector3>", "s273"},
	{"Unity.Collections.NativeArray`1/ReadOnly<UnityEngine.Vector4>", "s273"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Plane>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Rendering.BatchCullingOutputDrawCommands>", "s24"},
	{"Unity.Collections.NativeArray`1<UnityEngine.Rendering.CullingSplit>", "s24"},
	{"Unity.Collections:Unity.Collections.NativeBitArray", "s670"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/Enumerator<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/Enumerator<u,u1>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/Enumerator<u,u>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/ParallelWriter<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s571"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/ParallelWriter<u,u1>", "s571"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2/ParallelWriter<u,u>", "s571"},
	{"Unity.Collections:Unity.Collections.NativeHashMap`2<i4,Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.TransformAccessJob/TransformData>", "s111"},
	{"Unity.Collections:Unity.Collections.NativeHashSet`1/Enumerator<u>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeHashSet`1/ParallelWriter<u>", "s679"},
	{"Unity.Collections:Unity.Collections.NativeList`1/ParallelWriter<u1>", "s114"},
	{"Unity.Collections:Unity.Collections.NativeList`1/ParallelWriter<u>", "s114"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/Enumerator<u,u>", "s682"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/Enumerator<i4,i4>", "s683"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/KeyValueEnumerator<i4,i4>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/KeyValueEnumerator<u,u>", "s564"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/ParallelWriter<i4,i4>", "s571"},
	{"Unity.Collections:Unity.Collections.NativeMultiHashMap`2/ParallelWriter<u,u>", "s571"},
	{"Unity.Collections:Unity.Collections.NativeQueue`1/ParallelWriter<u>", "s688"},
	{"Unity.Collections:Unity.Collections.NativeReference`1/ReadOnly<u>", "s114"},
	{"Unity.Collections.NativeSlice`1/Enumerator<u1>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<i4>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<u>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float3>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float4x4>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<Unity.Mathematics:Unity.Mathematics.float4>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<UnityEngine.BoneWeight>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<UnityEngine.Matrix4x4>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<UnityEngine.Vector2>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<UnityEngine.Vector3>", "s690"},
	{"Unity.Collections.NativeSlice`1/Enumerator<UnityEngine.Vector4>", "s690"},
	{"Unity.Collections.NativeSlice`1<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PositionTangentVertex>", "s24"},
	{"Unity.Collections.NativeSlice`1<Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PositionVertex>", "s24"},
	{"Unity.Collections:Unity.Collections.NativeStream/Reader", "s703"},
	{"Unity.Collections:Unity.Collections.NativeStream/Writer", "s704"},
	{"Unity.Collections:Unity.Collections.NativeText/Enumerator", "s705"},
	{"Unity.Collections:Unity.Collections.SortJob`2<u,u>", "s706"},
	{"Unity.Collections:Unity.Collections.SortJob`2<u,Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>>", "s707"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeDisposeJob", "s510"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMapDataDisposeJob", "s111"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeHashMapDisposeJob", "s510"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeStream/ConstructJob", "s711"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeStream/ConstructJobList", "s712"},
	{"Unity.Collections:Unity.Collections.LowLevel.Unsafe.UnsafeStream/DisposeJob", "s111"},
	{"Unity.Collections.NativeArrayDisposeJob", "s571"},
	{"Unity.Collections:Unity.Collections.NativeListDisposeJob", "s715"},
	{"Unity.Collections:Unity.Collections.NativeQueueDisposeJob", "s716"},
	{"Unity.Collections:Unity.Collections.NativeReferenceDisposeJob", "s111"},
	{"Unity.Collections:Unity.Collections.NativeSortExtension/SegmentSortMerge`2<u,u>", "s718"},
	{"Unity.Collections:Unity.Collections.NativeSortExtension/SegmentSortMerge`2<u,Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>>", "s719"},
	{"Unity.Collections:Unity.Collections.NativeStream/ConstructJob", "s720"},
	{"Unity.Collections:Unity.Collections.NativeStream/ConstructJobList", "s721"},
	{"Unity.Collections:Unity.Collections.SortJob`2/SegmentSortMerge<u,u>", "s718"},
	{"Unity.Collections:Unity.Collections.SortJob`2/SegmentSortMerge<u,Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>>", "s719"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.PrepareDeformJob", "s724"},
	{"Unity.Collections:Unity.Collections.NativeSortExtension/SegmentSort`2<u,u>", "s718"},
	{"Unity.Collections:Unity.Collections.NativeSortExtension/SegmentSort`2<u,Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>>", "s719"},
	{"Unity.Collections:Unity.Collections.SortJob`2/SegmentSort<u,u>", "s718"},
	{"Unity.Collections:Unity.Collections.SortJob`2/SegmentSort<u,Unity.Collections:Unity.Collections.NativeSortExtension/DefaultComparer`1<u>>", "s719"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.BoneDeformBatchedJob", "s729"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.CalculateSpriteSkinAABBJob", "s730"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.CopySpriteRendererBuffersJob", "s731"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.SkinDeformBatchedJob", "s732"},
	{"UnityEngine.Jobs.TransformAccessArray", "s763"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.LocalToWorldTransformAccessJob", "s734"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.WorldToLocalTransformAccessJob", "s734"},
	{"UnityEngine.Rendering.BatchCullingContext", "s736"},
	{"UnityEngine.Rendering.BatchCullingOutput", "s734"},
	{"Unity.Mathematics:Unity.Mathematics.Geometry.Plane", "s169"},
	{"Unity.Mathematics:Unity.Mathematics.Random", "s213"},
	{"Unity.Profiling.ProfilerMarker/AutoScope", "s763"},
	{"UnityEngine.AccelerationEvent", "s152"},
	{"UnityEngine.Experimental.GlobalIllumination.LinearColor", "s152"},
	{"UnityEngine.LightBakingOutput", "s743"},
	{"UnityEngine.LocationInfo", "s744"},
	{"UnityEngine.Playables.PlayableGraph", "s205"},
	{"UnityEngine.RaycastHit2D", "s746"},
	{"UnityEngine.Resolution", "s747"},
	{"UnityEngine.Touch", "s748"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<i4>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<u>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.BoneWeight>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.Matrix4x4>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.Vector2>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.Vector3>", "s754"},
	{"Unity.2D.Animation.Runtime:UnityEngine.U2D.Animation.NativeCustomSlice`1<UnityEngine.Vector4>", "s754"},
	{"UnityEngine.Yoga.YogaSize", "s144"},
	{"YooAsset:YooAsset.DecryptResult", "s40"},
	{"YooAsset:YooAsset.DownloadStatus", "s758"},
	{"YooAsset:YooAsset.EncryptFileInfo", "s34"},
	{"YooAsset:YooAsset.EncryptResult", "s3"},
	{"YooAsset:YooAsset.WebDecryptFileInfo", "s761"},
	{"YooAsset:YooAsset.WebDecryptResult", "s90"},
	{ nullptr, nullptr},
};

static void __M2N_i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int8_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int8_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1i1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int8_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i1ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i2i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2i2i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, int16_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i2i2i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, int16_t __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i2i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2i2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i2uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int16_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int16_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int16_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i4i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int16_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4i4i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int16_t __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4i4i4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, __struct_152__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4i4uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4i4uuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4i8ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(int64_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4iiiiuiu4u4u1uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, intptr_t __arg2, intptr_t __arg3, uintptr_t __arg4, intptr_t __arg5, uint32_t __arg6, uint32_t __arg7, uint8_t __arg8, uintptr_t __arg9, uint8_t __arg10, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), method);
}


static void __M2N_i4iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4iu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(float __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s116u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s116ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s116ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s116ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s144s144s429u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_429__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_429__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s144s144s429ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_429__ __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_429__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s148s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s148s148ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s148s148ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s148s148ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4s152i4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_152__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s1s1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_24__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s24u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s24us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s24uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s272u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s272us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s272uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s273u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_273__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_273__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s30s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_30__ __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s31i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_31__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4s31s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_31__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s31u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_31__ __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s31u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_31__ __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s320i4s320i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, __struct_320__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s320s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s38s38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s39s39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_421__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s421s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_421__ __arg0, __struct_421__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s427u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s427us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s427uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s510u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4s510us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s510uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i4ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_0__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_100__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4i4s1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_1__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s21u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_21__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_28__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s34u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_34__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s40u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_40__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s43u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_43__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s51u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_51__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s62u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_62__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s63u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_63__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s65u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_65__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s68u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_68__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s77u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_77__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4s78u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_78__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4i4u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4s152s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_152__ __arg2, __struct_128__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4s181s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_181__ __arg2, __struct_128__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4s39s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_39__ __arg2, __struct_128__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4ui4ui4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4ui4ui4i4i4i4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int8_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4ui4ui4i4i4i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int16_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4ui4ui4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4ui4ui4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint8_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4ui4ui4i4i4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint16_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4ui4us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, __struct_100__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ui8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ui8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4ur4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, float __arg1, uint16_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us0i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us0s0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us101(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_101__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us102(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_102__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us103(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_103__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us104(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_104__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us105(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_105__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us106(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us107(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_107__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us108(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_108__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us109(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us114(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_114__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us116r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_116__ __arg1, float __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4us144s144r4s429u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, float __arg3, __struct_429__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_429__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4us148s148ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, uintptr_t __arg3, float __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4us173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us201(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_201__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us21i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us21s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, __struct_21__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us249(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_249__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_249__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, __struct_24__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us250(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_250__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_250__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us251(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_251__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_251__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us252(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_252__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_252__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us253(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_253__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_253__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us254(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_254__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_254__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us28i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us28s28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us314uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_314__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_314__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us31s31u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, __struct_31__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us34i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us34s34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, __struct_34__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us3s3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, __struct_3__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us40i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us40s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us42s42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, __struct_42__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us43i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us43s43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, __struct_43__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us51i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us51s51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, __struct_51__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us62i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us62s62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, __struct_62__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us63i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us63s63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, __struct_63__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us64(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_64__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_64__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us65i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us65s65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, __struct_65__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us66i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us66s66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, __struct_66__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us68i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us68s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, __struct_68__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us69s69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_69__ __arg1, __struct_69__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us70i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us77i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us77s77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, __struct_77__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us78i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4us78s78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, __struct_78__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us79(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us81s81(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_81__ __arg1, __struct_81__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us84(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_84__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us85i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us94u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4us97(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_97__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us98(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_98__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4us99(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_99__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uu2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uu2u2u2u2u2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, uint16_t __arg5, uint16_t __arg6, uint16_t __arg7, uint16_t __arg8, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_i4uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i4uu8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uui1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int16_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4i4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int8_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int16_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint16_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_0__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_1__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s21u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_21__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_28__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s34u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_34__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s40u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_40__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s43u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_43__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s51u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_51__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s62u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_62__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s63u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_63__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s65u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_65__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s68u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_68__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s77u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_77__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4s78u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_78__ __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint16_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4i4u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint64_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4i4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_i4uui4i4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4uui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_85__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui4ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uui8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuii4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus0i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_1__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus21i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_21__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus24i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_24__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus26i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_26__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus27i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus28i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_28__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus34i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_34__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus35i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_35__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus36i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_36__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus38i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus39i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_39__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus3i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_3__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus40i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_40__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus41i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus42i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus43i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus51i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_51__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus62i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_62__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus63i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_63__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus64i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_64__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_64__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus65i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_65__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus66i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_66__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus68i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_68__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus69i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_69__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus6i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus70i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_70__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus77i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_77__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus78i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_78__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uus85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_85__ __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i4uuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuu2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuu2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuu2uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, uintptr_t __arg3, uint16_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuui4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uuui4us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, __struct_148__ __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uuui4us148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, __struct_148__ __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4uuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uuui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_i4uuus148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_148__ __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint16_t __arg3, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i4uuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i4uuuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_i4uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(int32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_i8i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int32_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int32_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8i8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i8i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8i8i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8i8i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i8i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8i8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(int64_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(double __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8s31i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_31__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_421__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_i8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ui4i8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_i8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8ui8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8ui8i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_i8ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_i8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_i8uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef int64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(int64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ii4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ii4ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int32_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ii8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iii4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iiii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iiuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iiuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_is763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(__struct_763__ __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_is763s763s763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(__struct_763__ __arg0, __struct_763__ __arg1, __struct_763__ __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_iu1u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_iui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iui4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iui4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_iuii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ius31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_iuu2u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_iuui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_iuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef intptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(intptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_r4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_r4r4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4r4r4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4r4r4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4r4r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, float __arg1, uint8_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(float __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_144__ __arg0, float __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s144s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4s144s144u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s148s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_148__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s152r4r4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, float __arg1, float __arg2, float __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_r4s152r4r4r4r4uuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, float __arg1, float __arg2, float __arg3, float __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, int32_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_r4s152r4r4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, float __arg1, float __arg2, float __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_r4s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s152s152u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s169s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_169__ __arg0, __struct_169__ __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4ur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r4uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r4uur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef float (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(float*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_r8i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(int64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8r8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, double __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_r8r8r8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r8r8r8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_r8r8r8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, double __arg1, uint8_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8r8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(double __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s132s132u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s136s136u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s140s140u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_r8u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uint64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8ur8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_r8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_r8uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef double (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(double*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s0u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_0__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_0__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s0ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_0__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_0__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s0uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_0__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_0__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s100u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_100__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_100__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s100uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_100__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_100__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s100uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_100__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_100__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s100uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_100__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_100__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s101u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_101__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_101__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s102u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_102__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_102__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s103u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_103__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_103__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s104u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_104__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_104__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s105u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_105__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_105__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s106s106i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s106s106i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, int32_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, float __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s106s106r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, int32_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106r4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s106s106ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106ui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106ur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106ur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s106s106uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106s106uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(__struct_106__ __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s106u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_106__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_106__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s107u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_107__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_107__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s108u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_108__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_108__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s109s109i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4ur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4ur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109r4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109ur4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109s109uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(__struct_109__ __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s109u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_109__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_109__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s10u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_10__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_10__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s110u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_110__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_110__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s111i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_111__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_111__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s111u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_111__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_111__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s114u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s114u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s114u4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uint32_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s114u4i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uint32_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s114uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s114uuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_114__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_114__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s111s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_111__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s115s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_115__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s115s115s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_115__ __arg0, __struct_115__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s24s100s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_24__ __arg0, __struct_100__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s24s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_24__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s24us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s272s100s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_272__ __arg0, __struct_100__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s272s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_272__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s272us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s427s100s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_427__ __arg0, __struct_100__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s427s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_427__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s427us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s510s100s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_510__ __arg0, __struct_100__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s510s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_510__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s510us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115s571s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_571__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_571__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s711s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_711__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_711__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s712s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_712__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_712__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s715s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_715__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_715__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s716s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_716__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_716__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s718i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_718__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_718__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s718s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_718__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_718__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s719i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_719__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_719__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s719s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_719__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_719__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s720s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_720__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_720__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s721s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_721__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_721__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s724s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_724__ __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_724__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115s729i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_729__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_729__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s730i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_730__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_730__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s731i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_731__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_731__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s732i4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_732__ __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_732__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115s734s763s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(__struct_734__ __arg0, __struct_763__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_734__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s115ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115ui4i4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115ui4s100s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_100__ __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115ui4s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115ui4us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, __struct_115__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s115us24s115s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, __struct_115__ __arg2, __struct_68__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115us510s115s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, __struct_510__ __arg1, __struct_115__ __arg2, __struct_68__ __arg3, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s115us763s115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, __struct_763__ __arg1, __struct_115__ __arg2, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s115uus736s734i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_115__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_736__ __arg2, __struct_734__ __arg3, intptr_t __arg4, const MethodInfo* method);
    *(__struct_115__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_736__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_734__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s116i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s116r4s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(float __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s116r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_116__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s116s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_116__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s116s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_116__ __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s146s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_146__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s147s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_147__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s151s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_151__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116s313s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(__struct_313__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s116ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s116us148i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_116__ (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_116__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s117i4s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(int32_t __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117r4s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(float __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117r8s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(double __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s117s117s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_117__ __arg0, __struct_117__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s117u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_117__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s129r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_129__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s129s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_129__ __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s141r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_141__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s141s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_141__ __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s157i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_157__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s157s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_157__ __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s170s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_170__ __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117s170u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(__struct_170__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s117u1s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(uint8_t __arg0, __struct_117__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s117u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s117u4s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_117__ (*NativeMethod)(uint32_t __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_117__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118i4s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(int32_t __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118r4s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(float __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118r8s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(double __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s118s118s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_118__ __arg0, __struct_118__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s118u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_118__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s120s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s118s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s118s130r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_130__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s130s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_130__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s142r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_142__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s142s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_142__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s158i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_158__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s158s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_158__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s171s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_171__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118s171u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(__struct_171__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s118u1s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(uint8_t __arg0, __struct_118__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s118u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s118u4s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_118__ (*NativeMethod)(uint32_t __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_118__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119i4s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(int32_t __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119r4s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(float __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119r8s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(double __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s119s119s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_119__ __arg0, __struct_119__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s119u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_119__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s120s120s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, __struct_120__ __arg2, __struct_120__ __arg3, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s119s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s119s131r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_131__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s131s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_131__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s143r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_143__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s143s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_143__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s159i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_159__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s159s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_159__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s172s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_172__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119s172u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(__struct_172__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s119u1s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(uint8_t __arg0, __struct_119__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s119u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s119u4s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_119__ (*NativeMethod)(uint32_t __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_119__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s11u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_11__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_11__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(int32_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(float __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(double __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s120s120u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s120s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_120__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s124s124u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s120s128s128u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s120s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_132__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_144__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s153s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_153__ __arg0, __struct_153__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_153__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s156s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_156__ __arg0, __struct_153__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_173__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_38__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s120u1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(uint8_t __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s120u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_120__ (*NativeMethod)(uint32_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_120__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121i4s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(int32_t __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121r4s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(float __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121r8s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(double __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s116r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_116__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s116s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_116__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s121s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s121s121s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_121__ __arg0, __struct_121__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s121u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_121__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s133r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_133__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s133s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_133__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s161i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_161__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s161s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_161__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s174s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_174__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121s174u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(__struct_174__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s121u1s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(uint8_t __arg0, __struct_121__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s121u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s121u4s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_121__ (*NativeMethod)(uint32_t __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_121__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122i4s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(int32_t __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122r4s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(float __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122r8s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(double __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s122s122s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_122__ __arg0, __struct_122__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s122u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_122__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s124s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s122s134r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_134__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s134s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_134__ __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s146r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_146__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s146s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_146__ __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s162i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_162__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s162s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_162__ __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s175s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_175__ __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122s175u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(__struct_175__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s122u1s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(uint8_t __arg0, __struct_122__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s122u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s122u4s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_122__ (*NativeMethod)(uint32_t __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_122__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123i4s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(int32_t __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123r4s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(float __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123r8s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(double __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s123s123s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_123__ __arg0, __struct_123__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s123u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_123__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s124s124s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, __struct_124__ __arg2, __struct_124__ __arg3, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s123s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s123s135r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_135__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s135s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_135__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s147r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_147__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s147s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_147__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s163i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_163__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s163s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_163__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s176s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_176__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123s176u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(__struct_176__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s123u1s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(uint8_t __arg0, __struct_123__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s123u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s123u4s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_123__ (*NativeMethod)(uint32_t __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_123__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124i4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(int32_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124r4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(float __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124r8s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(double __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124s120s120u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s124s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_120__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s124s124u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s124s124u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_124__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s128s128u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s124s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124s136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_136__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s154s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_154__ __arg0, __struct_154__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s154s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_154__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s156s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_156__ __arg0, __struct_154__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s177u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_177__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s124u1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uint8_t __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124u1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uint8_t __arg0, __struct_124__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s124u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s124u4s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_124__ (*NativeMethod)(uint32_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_124__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125i4s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(int32_t __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125r4s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(float __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125r8s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(double __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s125s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s125s125s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_125__ __arg0, __struct_125__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s125u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_125__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s137r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_137__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s137s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_137__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s149r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_149__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s149s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_149__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s165i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_165__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s165s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_165__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s178s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_178__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125s178u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(__struct_178__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s125u1s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(uint8_t __arg0, __struct_125__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s125u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s125u4s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_125__ (*NativeMethod)(uint32_t __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_125__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126i4s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(int32_t __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126r4s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(float __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126r8s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(double __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s126s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s126s126s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_126__ __arg0, __struct_126__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s126u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_126__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s128s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s126s138r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_138__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s138s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_138__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s150r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_150__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s150s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_150__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s166i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_166__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s166s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_166__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s179s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_179__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126s179u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(__struct_179__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s126u1s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(uint8_t __arg0, __struct_126__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s126u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s126u4s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_126__ (*NativeMethod)(uint32_t __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_126__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127i4s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(int32_t __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127r4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(float __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127r8s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(double __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s127s127s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_127__ __arg0, __struct_127__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s127u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_127__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s128s128s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, __struct_128__ __arg2, __struct_128__ __arg3, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s127s139r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_139__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s139s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_139__ __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s151r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_151__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s151s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_151__ __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s167i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_167__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s167s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_167__ __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s180s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_180__ __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127s180u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(__struct_180__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s127u1s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(uint8_t __arg0, __struct_127__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s127u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, uint8_t __arg12, uint8_t __arg13, uint8_t __arg14, uint8_t __arg15, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s127u4s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_127__ (*NativeMethod)(uint32_t __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_127__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128i4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(int32_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128r4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(float __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128r8s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(double __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s120s120u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s128s120u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_120__ __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s128s124s124u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s128s124u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_124__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s128s128u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s128s128u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_128__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128s140r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_140__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128s152r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_152__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s155s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_155__ __arg0, __struct_155__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s155s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_155__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s156s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_156__ __arg0, __struct_155__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s181u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_181__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128s39i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_39__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s128u1s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, __struct_120__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s128u1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, __struct_124__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128u1s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, __struct_128__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s128u1u1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s128u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s128u4s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_128__ (*NativeMethod)(uint32_t __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_128__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s129r8s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(double __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129s129r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_129__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s129s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_129__ __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s130s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_130__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s131s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_131__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s129s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s129u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_129__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_129__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s12u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_12__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_12__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s130r8s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(double __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130s129s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_129__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130s130r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_130__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s130s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_130__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s130s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_130__ __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s131s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_131__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s130s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, __struct_132__ __arg2, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s130s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s130u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_130__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_130__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s131r8s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(double __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131s129s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_129__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s130s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_130__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131s131r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_131__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s131s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_131__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s131s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_131__ __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s131s132s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, __struct_132__ __arg2, __struct_132__ __arg3, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s131s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s131u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_131__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_131__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(double __arg0, double __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(double __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s129s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_129__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s130s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_130__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s131s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_131__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s132s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s132s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s132s132s132s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s132s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, __struct_132__ __arg2, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s132s132s132s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, __struct_132__ __arg2, __struct_132__ __arg3, __struct_132__ __arg4, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s132s132s132u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s132s132s132u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s132s132u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_132__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s136s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_136__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s136s136u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s132s140s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_140__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132s140s140u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s132s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_153__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s132us132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s132us132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_132__ (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, __struct_132__ __arg2, const MethodInfo* method);
    *(__struct_132__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s133i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s133r8s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(double __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133s133r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_133__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s133s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_133__ __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s133s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_133__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s134s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_134__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s135s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_135__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s133s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s133u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_133__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_133__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s134r8s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(double __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s134s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134s133s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_133__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s134s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134s134r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_134__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s134s134s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_134__ __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s134s135s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_135__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s134s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, __struct_136__ __arg2, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s134s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s134u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_134__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_134__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135r8r8r8r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, double __arg10, double __arg11, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s135r8s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(double __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135s133s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_133__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s134s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_134__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135s135r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_135__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s135s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_135__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s135s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_135__ __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s135s136s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, __struct_136__ __arg2, __struct_136__ __arg3, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s135s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s135u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_135__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_135__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s136r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(double __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136r8s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(double __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_132__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s132s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_132__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s132s132u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s136s133s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_133__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s134s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_134__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s135s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_135__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s136s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s136s136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s136s136s136s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s136s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, __struct_136__ __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s136s136s136s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, __struct_136__ __arg2, __struct_136__ __arg3, __struct_136__ __arg4, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s136s136s136u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s136s136s136u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s136s136u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_136__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s139s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_139__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s140s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_140__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136s140s140u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s136s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_154__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s136us136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s136us136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_136__ (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, __struct_136__ __arg2, const MethodInfo* method);
    *(__struct_136__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s137i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s137r8s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(double __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137s137r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_137__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s137s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_137__ __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s137s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_137__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s138s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_138__ __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s139s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_139__ __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s137s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s137u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_137__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_137__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138r8r8r8r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, double __arg10, double __arg11, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s138r8s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(double __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138s137s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_137__ __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138s138r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_138__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s138s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_138__ __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s138s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_138__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s139s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_139__ __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s138s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, __struct_140__ __arg2, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s138s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s138u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_138__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_138__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, double __arg10, double __arg11, double __arg12, double __arg13, double __arg14, double __arg15, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s139r8s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(double __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s139s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139s137s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_137__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s139s138s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_138__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s139s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139s139r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_139__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s139s139s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_139__ __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s139s140s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, __struct_140__ __arg2, __struct_140__ __arg3, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s139s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s139u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_139__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_139__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s13u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_13__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_13__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s140r8r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, double __arg1, __struct_132__ __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140r8s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, __struct_132__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140r8s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140r8s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(double __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s132r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_132__ __arg0, double __arg1, double __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140s132s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_132__ __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s132s132u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_132__ __arg0, __struct_132__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s140s136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_136__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s136s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_136__ __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s136s136u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_136__ __arg0, __struct_136__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s140s137s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_137__ __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s138s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_138__ __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s139s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_139__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s140r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s140s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s140s140r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140s140s140s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, __struct_140__ __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140s140s140s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, __struct_140__ __arg2, __struct_140__ __arg3, __struct_140__ __arg4, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s140s140s140u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s140s140s140u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, __struct_140__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s140s140u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_140__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_155__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s140us140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s140us140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_140__ (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, __struct_140__ __arg2, const MethodInfo* method);
    *(__struct_140__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s141i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s141r4s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(float __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s141r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_141__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141s141s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_141__ __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141s142s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_142__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141s143s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_143__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s141s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s141u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_141__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_141__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s142r4s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(float __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s141s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_141__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s142r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_142__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142s142s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_142__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142s142s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_142__ __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142s143s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_143__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s142s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_144__ __arg2, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s142s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s142u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_142__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_142__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s143r4s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(float __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s141s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_141__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143s142s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_142__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s143r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_143__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143s143s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_143__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143s143s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_143__ __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s143s144s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_144__ __arg2, __struct_144__ __arg3, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s143s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s143u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_143__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_143__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s144i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(float __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s141s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_141__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s142s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_142__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s143s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_143__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s144s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s144s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144s144s144s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_144__ __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144s144s144s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, __struct_144__ __arg2, __struct_144__ __arg3, __struct_144__ __arg4, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s144s144s144u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144s144s144u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s144s144u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s144u1u1uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_144__ __arg0, uint8_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_s144s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s148s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_148__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s148s148u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s144s152s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_152__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144s152s152u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s144s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_153__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s144ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144ur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s144us144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144us144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s144uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s144uur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_144__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(__struct_144__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s146i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s146r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s146r4r4r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s146r4s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(float __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s116s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_116__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s146r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_146__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s146s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_146__ __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s147s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_147__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s146s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_148__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s146s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s146u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_146__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_146__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147r4r4r4r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, float __arg10, float __arg11, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s147r4s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(float __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s116s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_116__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s146s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_146__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s147r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_147__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147s147s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_147__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147s147s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_147__ __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s147s148s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_148__ __arg2, __struct_148__ __arg3, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s147s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s147u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_147__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_147__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s148i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(float __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148r4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(float __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s116s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_116__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s144s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s144s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148s144s144u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s148s146s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_146__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s147s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_147__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s148s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s148s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148s148s148s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148s148s148s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_148__ __arg2, __struct_148__ __arg3, __struct_148__ __arg4, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s148s148s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148s148s148u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s148s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_148__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s151s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_151__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s152s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_152__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s152s152u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s148s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_154__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_169__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148s313s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(__struct_313__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s148ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s148us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s148us148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_148__ (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    *(__struct_148__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s149i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s149r4s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(float __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s149r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_149__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s149s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_149__ __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s149s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_149__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s150s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_150__ __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s151s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_151__ __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s149s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s149u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_149__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_149__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150r4r4r4r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, float __arg10, float __arg11, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s150r4s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(float __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s149s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_149__ __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s150r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_150__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150s150s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_150__ __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150s150s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_150__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150s151s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_151__ __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s150s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s150s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s150u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_150__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_150__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s151r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s151r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s151r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, float __arg10, float __arg11, float __arg12, float __arg13, float __arg14, float __arg15, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s151r4r4r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s151r4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(float __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s146s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_146__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s151s148s169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_148__ __arg0, __struct_169__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s151s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_148__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s149s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_149__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s150s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_150__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s151r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_151__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s151s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_151__ __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s152s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, __struct_152__ __arg2, __struct_152__ __arg3, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s151s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_169__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_202__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151s313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(__struct_313__ __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s151ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s151ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_151__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_151__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s152i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152i4s152uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(int32_t __arg0, __struct_152__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s152r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s152r4r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, float __arg1, __struct_144__ __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152r4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, float __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s152r4s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152r4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152r4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(float __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s144r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_144__ __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s144s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_144__ __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s144s144u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s152s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s148s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_148__ __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s148s148u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s152s149s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_149__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s150s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_150__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s151s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_151__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s152r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s152s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s152s152r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s152s152s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s152s152s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, __struct_152__ __arg2, __struct_152__ __arg3, __struct_152__ __arg4, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s152s152s152u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s152s152u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, __struct_152__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s152s152u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s152uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_152__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_155__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152s313s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_313__ __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s152ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s152us152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s152us152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s152uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_152__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_152__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s153r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(__struct_153__ __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s153s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(__struct_156__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s153u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_153__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_153__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154s153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_153__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s154s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_154__ __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s154s156s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_156__ __arg0, __struct_153__ __arg1, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s154s156s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(__struct_156__ __arg0, __struct_156__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s154u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_154__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_154__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155s153s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_153__ __arg0, __struct_153__ __arg1, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s155s153s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_153__ __arg0, __struct_156__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s155s154s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_154__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s155s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_155__ __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s155s156s153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_156__ __arg0, __struct_153__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s155s156s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_156__ __arg0, __struct_154__ __arg1, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s155s156s156s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_156__ __arg0, __struct_156__ __arg1, __struct_153__ __arg2, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s155s156s156s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(__struct_156__ __arg0, __struct_156__ __arg1, __struct_156__ __arg2, __struct_156__ __arg3, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s155u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_155__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_155__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_156__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_156__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s156r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_156__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_156__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s156r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_156__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_156__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_156__ (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(__struct_156__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s156ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_156__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_156__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s157i4s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(int32_t __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s157i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_157__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157s157s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_157__ __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157s158s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_158__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157s159s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_159__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s157u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s157u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_157__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_157__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s158i4s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(int32_t __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s157s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_157__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s158i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_158__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s158s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_158__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s158s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_158__ __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s159s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_159__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s158s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158s38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s158u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s158u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_158__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_158__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s159i4s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(int32_t __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s157s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_157__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159s158s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_158__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s159i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_159__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159s159s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_159__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159s159s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_159__ __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s159s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159s38s38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, __struct_38__ __arg2, __struct_38__ __arg3, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s159u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s159u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_159__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_159__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s15u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_15__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_15__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s161i4s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(int32_t __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s161i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_161__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161s161s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_161__ __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161s161s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_161__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161s162s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_162__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161s163s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_163__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s161u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s161u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_161__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_161__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s162i4s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(int32_t __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s162r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s161s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_161__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s162s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s162i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_162__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s162s162s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_162__ __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s162s163s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_163__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s162s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162s1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s162u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s162u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_162__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_162__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163i4i4i4i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, int32_t __arg10, int32_t __arg11, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s163i4s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(int32_t __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s161s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_161__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163s162s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_162__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s163i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_163__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163s163s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_163__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163s163s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_163__ __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s163s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163s1s1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, __struct_1__ __arg2, __struct_1__ __arg3, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s163u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s163u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_163__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_163__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s165i4s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(int32_t __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s165i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_165__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165s165s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_165__ __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165s165s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_165__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165s166s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_166__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165s167s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_167__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s165u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s165u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_165__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_165__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166i4i4i4i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, int32_t __arg10, int32_t __arg11, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s166i4s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(int32_t __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s165s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_165__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s166i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_166__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166s166s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_166__ __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166s166s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_166__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166s167s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_167__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s166s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166s39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s166u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s166u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_166__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_166__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, int32_t __arg10, int32_t __arg11, int32_t __arg12, int32_t __arg13, int32_t __arg14, int32_t __arg15, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s167i4s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(int32_t __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s167r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s165s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_165__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s167s166s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_166__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s167s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s167i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_167__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s167s167s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_167__ __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s167s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167s39s39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, __struct_39__ __arg2, __struct_39__ __arg3, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s167u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s167u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_167__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_167__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s169r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s169r4r4r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s169s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s169s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s169s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_148__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s169s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s169s169s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_169__ __arg0, __struct_169__ __arg1, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s169s169s169r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(__struct_169__ __arg0, __struct_169__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s169u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_169__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_169__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s16u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_16__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_16__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s16uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_16__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_16__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170s170i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_170__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170s170s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_170__ __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170s170u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_170__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170s171s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_171__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170s172s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_172__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s170u4s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(uint32_t __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s170u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_170__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, const MethodInfo* method);
    *(__struct_170__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s171i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s170s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_170__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171s171i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_171__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s171s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_171__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s171s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_171__ __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s171u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_171__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s172s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_172__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171s173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, __struct_173__ __arg2, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s171s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s171u4s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(uint32_t __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s171u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_171__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, const MethodInfo* method);
    *(__struct_171__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s172i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s170s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_170__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s171s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_171__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172s172i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_172__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s172s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_172__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s172s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_172__ __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s172u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_172__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172s173s173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, __struct_173__ __arg2, __struct_173__ __arg3, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s172s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s172u4s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(uint32_t __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s172u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_172__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, const MethodInfo* method);
    *(__struct_172__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s173i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_153__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s170s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_170__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s171s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_171__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s172s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_172__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173s173i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s173s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s173s173s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s173s173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, __struct_173__ __arg2, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s173s173s173u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s173s173s173u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s173s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_173__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s177s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_177__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s177s177u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s173s181s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_181__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173s181s181u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s173s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s173u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uint32_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173ui8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s173us173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s173us173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_173__ (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, __struct_173__ __arg2, const MethodInfo* method);
    *(__struct_173__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s174i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174s174i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_174__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s174s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_174__ __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s174s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_174__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s174u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_174__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s175s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_175__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s176s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_176__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s174u4s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(uint32_t __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s174u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_174__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, const MethodInfo* method);
    *(__struct_174__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s175i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s174s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_174__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175s175i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_175__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175s175s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_175__ __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175s175u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_175__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175s176s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_176__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175s177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, __struct_177__ __arg2, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s175u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s175u4s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(uint32_t __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s175u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_175__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, const MethodInfo* method);
    *(__struct_175__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s176i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s174s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_174__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s175s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_175__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176s176i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_176__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s176s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_176__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s176s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_176__ __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s176u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_176__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176s177s177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, __struct_177__ __arg2, __struct_177__ __arg3, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s176s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s176u4s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(uint32_t __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s176u4u4u4u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_176__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, uint32_t __arg10, uint32_t __arg11, const MethodInfo* method);
    *(__struct_176__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s177i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_154__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s173s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_173__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s173s173u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s177s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_173__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s174s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_174__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s175s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_175__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s176s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_176__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177s177i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s177s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s177s177s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s177s177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, __struct_177__ __arg2, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s177s177s177u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s177s177s177u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s177s177u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_177__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s181s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_181__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177s181s181u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s177u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s177u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uint32_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177u4s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uint32_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s177us177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s177us177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_177__ (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, __struct_177__ __arg2, const MethodInfo* method);
    *(__struct_177__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s178i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178s178i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_178__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s178s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_178__ __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s178s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_178__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s178u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_178__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s179s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_179__ __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s180s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_180__ __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s178u4s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(uint32_t __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s178u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_178__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, const MethodInfo* method);
    *(__struct_178__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s179i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s178s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_178__ __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179s179i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_179__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s179s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_179__ __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s179s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_179__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s179u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_179__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s180s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_180__ __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179s181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, __struct_181__ __arg2, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s179u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s179u4s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(uint32_t __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s179u4u4u4u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_179__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, uint32_t __arg10, uint32_t __arg11, const MethodInfo* method);
    *(__struct_179__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_s17u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_17__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_17__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s17uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_17__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_17__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s178s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_178__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180s179s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_179__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180s180i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_180__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180s180s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_180__ __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180s180u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_180__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180s181s181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, __struct_181__ __arg2, __struct_181__ __arg3, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s180u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s180u4s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(uint32_t __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s180u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_180__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, uint32_t __arg10, uint32_t __arg11, uint32_t __arg12, uint32_t __arg13, uint32_t __arg14, uint32_t __arg15, const MethodInfo* method);
    *(__struct_180__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s181i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_155__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s173s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_173__ __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s173s173u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s181s173u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_173__ __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181s177s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_177__ __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s177s177u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s181s177u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_177__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s178s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_178__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s179s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_179__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s180s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_180__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s181i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s181s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s181s181s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181s181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, __struct_181__ __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181s181s181u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181s181s181u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s181s181u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_181__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181s313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_313__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s181u4s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, __struct_173__ __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181u4s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181u4s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181u4u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, __struct_173__ __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s181ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181ui8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181us181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s181us181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, __struct_181__ __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181uui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s181uui8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_181__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uint64_t __arg3, const MethodInfo* method);
    *(__struct_181__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s182(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_182__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_182__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s182us205u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_182__ (*NativeMethod)(uintptr_t __arg0, __struct_205__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_182__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_205__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s193u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_193__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_193__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s193ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_193__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_193__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s193ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_193__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_193__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s19u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s19uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_19__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_19__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s1i4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s161s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_161__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s162s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_162__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s163s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_163__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1s1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s1s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s1s1s1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s1s1s1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s1s1s1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s1s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_38__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s38s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_38__ __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s38s38u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s1s39s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_39__ __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1s39s39u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s1us1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_1__ (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(__struct_1__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s201u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_201__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_201__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s202s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s202s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s202u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s202ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s202ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_202__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_202__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s205(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_205__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_205__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s205u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_205__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_205__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s213u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_213__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_213__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s21u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_21__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_21__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s21ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_21__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_21__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s22u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_22__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_22__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s248u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_248__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_248__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s248us86s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_248__ (*NativeMethod)(uintptr_t __arg0, __struct_86__ __arg1, __struct_90__ __arg2, const MethodInfo* method);
    *(__struct_248__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s249ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_249__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_249__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s24i4s68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(int32_t __arg0, __struct_68__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s24i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(__struct_24__ __arg0, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s24s24i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(__struct_24__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s24s24s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(__struct_24__ __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s24s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(__struct_510__ __arg0, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s24u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s24ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s24ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s24us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s24uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_24__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_24__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s251s111s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_251__ (*NativeMethod)(__struct_111__ __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_251__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s251s510s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_251__ (*NativeMethod)(__struct_510__ __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_251__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s251us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_251__ (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_251__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s26u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_26__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_26__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s272i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_272__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_272__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s273u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_273__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_273__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s27u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_27__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_27__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_28__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_28__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s28ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_28__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_28__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s2i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_2__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_2__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s2i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_2__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_2__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_2__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_2__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s30i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s30s30i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(__struct_30__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30s30s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(__struct_30__ __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s30ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30ui4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_s30ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s30uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_30__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_30__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s313r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s313r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s313r4r4r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s313s146s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_146__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s313s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s313s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_148__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s313s148u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_148__ __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s313s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s313s169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_169__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s313s313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_313__ __arg0, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s313s313s313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_313__ (*NativeMethod)(__struct_313__ __arg0, __struct_313__ __arg1, const MethodInfo* method);
    *(__struct_313__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s318u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_318__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_318__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s318ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_318__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_318__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319i1s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int8_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319i2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int16_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int32_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319i8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(int64_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319r4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(float __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319r8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(double __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319s319i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, int16_t __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s319s319i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s319s319r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319s319i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, int16_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, __struct_319__ __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s319s319s319s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s319s319s319u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, uint16_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s319u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319s320s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, __struct_320__ __arg1, __struct_319__ __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319s319u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, uint16_t __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s319u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_319__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s320s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s319u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319u1s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint8_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319u2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint16_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319u4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint32_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s319u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s319u8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_319__ (*NativeMethod)(uint64_t __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_319__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s31s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_31__ (*NativeMethod)(__struct_31__ __arg0, const MethodInfo* method);
    *(__struct_31__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_31__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_31__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s31ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_31__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_31__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s31ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_31__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_31__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s31us88(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_31__ (*NativeMethod)(uintptr_t __arg0, __struct_88__ __arg1, const MethodInfo* method);
    *(__struct_31__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_88__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s320i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int8_t __arg0, int8_t __arg1, int8_t __arg2, int8_t __arg3, int8_t __arg4, int8_t __arg5, int8_t __arg6, int8_t __arg7, int8_t __arg8, int8_t __arg9, int8_t __arg10, int8_t __arg11, int8_t __arg12, int8_t __arg13, int8_t __arg14, int8_t __arg15, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s320i1s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int8_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320i2i2i2i2i2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int16_t __arg0, int16_t __arg1, int16_t __arg2, int16_t __arg3, int16_t __arg4, int16_t __arg5, int16_t __arg6, int16_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320i2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int16_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320i4i4i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int8_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4i4i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4i4u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4i4u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int32_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int64_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320i8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(int64_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320r4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(float __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(double __arg0, double __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320r8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(double __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320s319i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, int16_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s319s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s319s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s319s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s319s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, __struct_320__ __arg1, __struct_320__ __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s319u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, uint16_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s319u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_319__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320s320i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int16_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320i4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320i4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320i4s320i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, __struct_320__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s320s320i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int64_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, float __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, double __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320s319i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, int16_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, __struct_319__ __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s319s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320s319s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320s319u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, uint16_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s319u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_319__ __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320s320i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, int16_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, double __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, __struct_319__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, __struct_320__ __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, __struct_320__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s320s320s320u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, uint16_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320s320u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, uint32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uint16_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320s320u4s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uint32_t __arg1, __struct_320__ __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320s320us320s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uintptr_t __arg1, __struct_320__ __arg2, __struct_320__ __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s320s320us421s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_320__ __arg0, uintptr_t __arg1, __struct_421__ __arg2, __struct_320__ __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s320s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(__struct_421__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320u1s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint8_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320u2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint16_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320u4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint32_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s320u8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uint64_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320ui4ui4i4i4i4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int8_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320ui4ui4i4i4i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int16_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320ui4ui4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320ui4ui4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint8_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320ui4ui4i4i4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint16_t __arg7, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s320us320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s320us320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320us421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, __struct_421__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s320uui4i4i4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int8_t __arg5, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s320uui4i4i4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int16_t __arg5, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s320uui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s320uui4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s320uui4i4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_320__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint16_t __arg5, const MethodInfo* method);
    *(__struct_320__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s323u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_323__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_323__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s324u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_324__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_324__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s325u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_325__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_325__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s326u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_326__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_326__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s327u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_327__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_327__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s329u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_329__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_329__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s330u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_330__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_330__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s331u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_331__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_331__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s332u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_332__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_332__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s333u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_333__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_333__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s334u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_334__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_334__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s335u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_335__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_335__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s336u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_336__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_336__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s337u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_337__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_337__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s338u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_338__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_338__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s339u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_339__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_339__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s341u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_341__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_341__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s342u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_342__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_342__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s343u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_343__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_343__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s344u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_344__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_344__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s345u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_345__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_345__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s346u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_346__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_346__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s34u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_34__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_34__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s34ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_34__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_34__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_35__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_35__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s352u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_352__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_352__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s358u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_358__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_358__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s35s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_35__ (*NativeMethod)(__struct_31__ __arg0, const MethodInfo* method);
    *(__struct_35__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s35u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_35__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_35__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s360u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_360__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_360__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s369u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_369__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_369__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s36u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_36__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_36__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s370u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_370__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_370__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s371u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_371__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_371__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s375u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_375__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_375__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s376u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_376__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_376__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s384u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_384__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_384__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s385u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_385__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_385__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s386u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_386__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_386__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s387u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_387__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_387__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s388u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_388__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_388__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s389u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_389__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_389__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(int32_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s157s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_157__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s158s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_158__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s159s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_159__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s1s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_1__ __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s1s1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s38s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s38s38s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s38s38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s38s38s38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s38s38s38u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s38s39s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_39__ __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38s39s39u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s38u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s38ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38us38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s38us38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_38__ (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(__struct_38__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s390u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_390__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_390__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s391u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_391__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_391__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s392u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_392__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_392__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s394u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_394__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_394__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s395u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_395__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_395__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s396u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_396__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_396__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s398u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_398__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_398__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s39i4i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39i4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39i4s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, __struct_38__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39i4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(int32_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s165s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_165__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s166s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_166__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s167s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_167__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s1s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_1__ __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s1s1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s39s38i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_38__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39s38s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_38__ __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s38s38u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_38__ __arg0, __struct_38__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39s39i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s39s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39s39s39s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39s39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39s39s39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s39s39s39u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(__struct_39__ __arg0, __struct_39__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s39u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s39ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39us39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s39us39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_39__ (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method);
    *(__struct_39__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s3i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s3i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s3u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s3ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s3us34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s3uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_3__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_3__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s400u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_400__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_400__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s403u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_403__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_403__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s407u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_407__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_407__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s408u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_408__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_408__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s409u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_409__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_409__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s40u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s40ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s40us321(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_321__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s40uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_40__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_40__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s411u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_411__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_411__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s412u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_412__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_412__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s416u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_416__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_416__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s41u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_41__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_41__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s41uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_41__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_41__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s421i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int16_t __arg0, int16_t __arg1, int16_t __arg2, int16_t __arg3, int16_t __arg4, int16_t __arg5, int16_t __arg6, int16_t __arg7, int16_t __arg8, int16_t __arg9, int16_t __arg10, int16_t __arg11, int16_t __arg12, int16_t __arg13, int16_t __arg14, int16_t __arg15, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s421i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421i8i8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(int64_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s421r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(float __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_s421r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(double __arg0, double __arg1, double __arg2, double __arg3, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s421s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421s320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_320__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421s421i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421s421i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421s421s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, __struct_320__ __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421s421s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421s421s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, __struct_421__ __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421s421s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, __struct_421__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421s421s421s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, __struct_421__ __arg1, __struct_421__ __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421s421us320s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, uintptr_t __arg1, __struct_320__ __arg2, __struct_421__ __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s421s421us421s421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(__struct_421__ __arg0, uintptr_t __arg1, __struct_421__ __arg2, __struct_421__ __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s421u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s421u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, uint8_t __arg12, uint8_t __arg13, uint8_t __arg14, uint8_t __arg15, uint8_t __arg16, uint8_t __arg17, uint8_t __arg18, uint8_t __arg19, uint8_t __arg20, uint8_t __arg21, uint8_t __arg22, uint8_t __arg23, uint8_t __arg24, uint8_t __arg25, uint8_t __arg26, uint8_t __arg27, uint8_t __arg28, uint8_t __arg29, uint8_t __arg30, uint8_t __arg31, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[16]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[17]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[18]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[19]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[20]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[21]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[22]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[23]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[24]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[25]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[26]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[27]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[28]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[29]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[30]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[31]), method);
}


static void __M2N_s421us320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uintptr_t __arg0, __struct_320__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421us421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uintptr_t __arg0, __struct_421__ __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s421us421i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uintptr_t __arg0, __struct_421__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s421uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_421__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_421__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s425u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_425__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_425__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s426(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_426__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_426__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s427i4i4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_427__ (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_427__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s42u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_42__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_42__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s42uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_42__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_42__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s432u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_432__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_432__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s433u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_433__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_433__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s434u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_434__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_434__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s436u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_436__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_436__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s437u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_437__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_437__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s438u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_438__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_438__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s43u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_43__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_43__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s43ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_43__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_43__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s43uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_43__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_43__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s444(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_444__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_444__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s448(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_448__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_448__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s448uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_448__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_448__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s449(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_449__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_449__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s44u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_44__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_44__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s450(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_450__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_450__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s451uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_451__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_451__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s45u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_45__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_45__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s466u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_466__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_466__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s467u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_467__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_467__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s468u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_468__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_468__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s478s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_478__ (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(__struct_478__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s478u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_478__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_478__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s47u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_47__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_47__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s485ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_485__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_485__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s485ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_485__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_485__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s485uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_485__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_485__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s48u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_48__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_48__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s491us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_491__ (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_491__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_4__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_4__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s503u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_503__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_503__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s503ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_503__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_503__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s504u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_504__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_504__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s504ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_504__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_504__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s505u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_505__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_505__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s505ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_505__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_505__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s506u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_506__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_506__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s506ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_506__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_506__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s507u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_507__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_507__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s507ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_507__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_507__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s510i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_510__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_510__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s510i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_510__ (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_510__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s510ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_510__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_510__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s510us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_510__ (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(__struct_510__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s519u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_519__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_519__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s51i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_51__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_51__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s51u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_51__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_51__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s51ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_51__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_51__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s526u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_526__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_526__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s527u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_527__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_527__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s52u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_52__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_52__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s534u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_534__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_534__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s538u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_538__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_538__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s53u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_53__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_53__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s542u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_542__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_542__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s546u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_546__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_546__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s54u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_54__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_54__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s550u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_550__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_550__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s554u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_554__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_554__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s555u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_555__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_555__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s556u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_556__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_556__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s557u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_557__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_557__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s558u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_558__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_558__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s559u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_559__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_559__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s55u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_55__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_55__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s563s111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_563__ (*NativeMethod)(__struct_111__ __arg0, const MethodInfo* method);
    *(__struct_563__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s564u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_564__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_564__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s571u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_571__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_571__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s573u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_573__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_573__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s57u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_57__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_57__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s57uuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_57__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(__struct_57__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s585u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_585__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_585__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s585uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_585__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_585__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s586ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_586__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_586__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s58u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_58__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_58__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s595u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_595__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_595__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s596u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_596__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_596__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s597u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_597__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_597__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s598u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_598__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_598__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s599u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_599__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_599__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s59u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_59__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_59__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s5u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_5__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_5__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s600u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_600__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_600__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s601u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_601__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_601__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s602u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_602__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_602__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s603u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_603__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_603__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s604u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_604__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_604__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s605u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_605__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_605__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s607u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_607__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_607__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s608u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_608__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_608__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s609u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_609__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_609__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s610u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_610__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_610__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s611u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_611__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_611__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s613u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_613__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_613__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s614u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_614__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_614__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s615u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_615__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_615__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s617u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_617__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_617__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s618u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_618__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_618__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s61u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_61__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_61__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s621u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_621__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_621__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s622u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_622__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_622__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s623u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_623__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_623__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s624u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_624__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_624__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s625u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_625__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_625__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s626u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_626__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_626__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s627u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_627__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_627__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s628u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_628__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_628__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s629u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_629__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_629__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s62u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_62__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_62__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s62ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_62__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_62__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s631u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_631__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_631__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s632u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_632__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_632__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s633u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_633__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_633__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s634u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_634__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_634__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s635u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_635__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_635__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s637u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_637__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_637__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s638u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_638__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_638__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s639u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_639__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_639__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s63u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_63__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_63__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s63ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_63__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_63__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s641u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_641__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_641__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s642u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_642__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_642__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s64u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_64__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_64__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s64us28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_64__ (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method);
    *(__struct_64__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s65u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_65__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_65__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s65ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_65__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_65__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s66u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_66__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_66__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s670ui4s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_670__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_68__ __arg2, const MethodInfo* method);
    *(__struct_670__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s679u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_679__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_679__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s682u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_682__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_682__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s682uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_682__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_682__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s683ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_683__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_683__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s688u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_688__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_688__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_68__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_68__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s68u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_68__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_68__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s68ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_68__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_68__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s690u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_690__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_690__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s6u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_6__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_6__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s6ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_6__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_6__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s6uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_6__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_6__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s703u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_703__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_703__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s704u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_704__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_704__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s705u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_705__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_705__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s706s24u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_706__ (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_706__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s706s272u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_706__ (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_706__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s706s427u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_706__ (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_706__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s706s510u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_706__ (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_706__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s706ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_706__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_706__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s707s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(__struct_24__ __arg0, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s707s272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(__struct_272__ __arg0, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s707s427(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(__struct_427__ __arg0, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s707s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(__struct_510__ __arg0, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s707ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s707ui4s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_707__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    *(__struct_707__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s70u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_70__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_70__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s743u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_743__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_743__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s744u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_744__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_744__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s746s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s746s144s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s746s144s144r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s746s144s144r4i4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s746s144s144r4i4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, float __arg2, int32_t __arg3, float __arg4, float __arg5, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_s746us144s144r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s746us144s144r4s429(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_746__ (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, float __arg3, __struct_429__ __arg4, const MethodInfo* method);
    *(__struct_746__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_429__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_s747(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_747__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_747__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s748i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_748__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_748__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s754(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_754__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_754__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s758(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_758__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_758__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s758u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_758__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_758__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s763i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_763__ (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(__struct_763__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s763u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_763__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_763__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s763ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_763__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_763__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s77u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_77__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_77__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s77ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_77__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_77__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s78u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_78__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_78__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s78ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_78__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_78__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s79ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_79__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_79__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s81u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_81__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_81__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s82(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_82__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_82__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s82u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_82__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_82__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s82uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_82__ (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(__struct_82__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s83i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83s83i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(__struct_83__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s83u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s83ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s83uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_83__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_83__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s84i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_84__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_84__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s84s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_84__ (*NativeMethod)(__struct_30__ __arg0, const MethodInfo* method);
    *(__struct_84__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s84u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_84__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_84__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s85i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s85i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(int32_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s85u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s85u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s85ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s85us38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s85uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_85__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_85__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s86s86(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_86__ (*NativeMethod)(__struct_86__ __arg0, const MethodInfo* method);
    *(__struct_86__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s86u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_86__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_86__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s86ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_86__ (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_86__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s87(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_87__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_87__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s87s87(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_87__ (*NativeMethod)(__struct_87__ __arg0, const MethodInfo* method);
    *(__struct_87__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s87s87s87(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_87__ (*NativeMethod)(__struct_87__ __arg0, __struct_87__ __arg1, const MethodInfo* method);
    *(__struct_87__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s87u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_87__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_87__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_8__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_8__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_90__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_90__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s90u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_90__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_90__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s90us761(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_90__ (*NativeMethod)(uintptr_t __arg0, __struct_761__ __arg1, const MethodInfo* method);
    *(__struct_90__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_761__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s92u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_92__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_92__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s93us86s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_93__ (*NativeMethod)(uintptr_t __arg0, __struct_86__ __arg1, __struct_90__ __arg2, const MethodInfo* method);
    *(__struct_93__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_s94i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s94r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s94s30s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(__struct_30__ __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s94s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(__struct_94__ __arg0, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s94s94s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(__struct_94__ __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s94u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s94us30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s94us94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s94uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_94__ (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(__struct_94__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_s95s30i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_95__ (*NativeMethod)(__struct_30__ __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(__struct_95__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_s95s30i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_95__ (*NativeMethod)(__struct_30__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(__struct_95__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_s95u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_95__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_95__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_s9u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef __struct_9__ (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(__struct_9__*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_typedbyrefuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef Il2CppTypedRef (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(Il2CppTypedRef*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int8_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i4s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1i8s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(int64_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1iu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1iu4iu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(intptr_t __arg0, uint32_t __arg1, intptr_t __arg2, uint32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1r4s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(float __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1r8s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(double __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s116r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s116r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s116r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s116u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s116ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s116ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s116ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_116__ __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s120s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_120__ __arg0, __struct_120__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s124s124u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_124__ __arg0, __struct_124__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s128s128u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_128__ __arg0, __struct_128__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s148s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s148s148r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s148s148r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s148s148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s148s148ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s148s148ur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s148s148ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s152u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_152__ __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s152uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_152__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_156__ __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s201s201(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_201__ __arg0, __struct_201__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_201__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_201__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s205s205(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_205__ __arg0, __struct_205__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_205__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_205__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_24__ __arg0, __struct_24__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s24u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s272s272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_272__ __arg0, __struct_272__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s272u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s273u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_273__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_273__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s28s28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_28__ __arg0, __struct_28__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_30__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s30s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_30__ __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s314s314(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_314__ __arg0, __struct_314__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_314__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_314__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s31i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s31i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1s31s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s31s31i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s31s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s31s31u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s31u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_31__ __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_34__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s34s34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_34__ __arg0, __struct_34__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s35s35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_35__ __arg0, __struct_35__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s36s36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_36__ __arg0, __struct_36__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s510s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_510__ __arg0, __struct_24__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s510s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_510__ __arg0, __struct_510__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s510u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s6s6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_6__ __arg0, __struct_6__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s763s763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_763__ __arg0, __struct_763__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s79s79(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_79__ __arg0, __struct_79__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s83s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_83__ __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1s83s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_83__ __arg0, __struct_83__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_85__ __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1s85s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_85__ __arg0, __struct_85__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s86u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_86__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s87s87(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_87__ __arg0, __struct_87__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s90s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_90__ __arg0, __struct_90__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s94s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_94__ __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1s95s95(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(__struct_95__ __arg0, __struct_95__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_95__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_95__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u4s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint32_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u1u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1u8s31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint64_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4i4u1s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, __struct_68__ __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1ui4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4s38u1s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, uint8_t __arg3, __struct_68__ __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1ui4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_39__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_39__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_40__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s40u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_40__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4s6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_6__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4s6u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_6__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_90__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1ui4uu1s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uint8_t __arg3, __struct_68__ __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us0s0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us101(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_101__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us102(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_102__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us103(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_103__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us104(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_104__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us105(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_105__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us106(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us107(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_107__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us108(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_108__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us109(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us114(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_114__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us115(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_118__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_119__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_121__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_122__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_123__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_125__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_126__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_127__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_128__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_129__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_130__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_131__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_133__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_134__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_135__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_137__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_138__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_139__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_141__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_142__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_143__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_146__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_147__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us148s148r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, float __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1us148s148ur4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, uintptr_t __arg3, float __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1us149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_149__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_150__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_151__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_153__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_154__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_155__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_157__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_158__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_159__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us16(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_16__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_16__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_161__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_162__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_163__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_165__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_166__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_167__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_169__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_170__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_171__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_172__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_174__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_175__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_176__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_178__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_179__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_180__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us182(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us193(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_193__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_193__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us201(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_201__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_202__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us205(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_205__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_205__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us213(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_213__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_213__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us216(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_216__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_216__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us217(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_217__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_217__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us218(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_218__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_218__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us21s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, __struct_21__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us226(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_226__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_226__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us229(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_229__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_229__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us230(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_230__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_230__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us231(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_231__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_231__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us248(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_248__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_248__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us249(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_249__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_249__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, __struct_24__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us250(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_250__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_250__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us251(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_251__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_251__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us252(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_252__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_252__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us253(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_253__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_253__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us254(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_254__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_254__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us26s26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, __struct_26__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us27s27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, __struct_27__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us28s28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us28uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_313__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us31i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us31s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, __struct_31__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us31us31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us31us31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1us34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us34s34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, __struct_34__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us35i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us35s35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, __struct_35__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us35u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us35ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us35uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us36s36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, __struct_36__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us36u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us36uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us38u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us38uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us3s3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, __struct_3__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us40s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us41s41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_41__ __arg1, __struct_41__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us42s42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, __struct_42__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us43s43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, __struct_43__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us44(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_44__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_44__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_45__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us47(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_47__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_47__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_510__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us51s51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, __struct_51__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us52(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_52__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_52__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us53(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_53__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_53__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us54(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_54__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_54__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us55(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_55__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us58(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_58__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_58__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us62s62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, __struct_62__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us63s63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, __struct_63__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us64s64(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_64__ __arg1, __struct_64__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_64__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_64__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us65s65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, __struct_65__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us66s66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, __struct_66__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us68s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, __struct_68__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us69s69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_69__ __arg1, __struct_69__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us6s6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, __struct_6__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us6u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us6uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1us70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us70s70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, __struct_70__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_763__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us77s77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, __struct_77__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us78s78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, __struct_78__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us79(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us81(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us82(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_82__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_82__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us84(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_84__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us86(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_86__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us87(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_87__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_87__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us88(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_88__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_88__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us92(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_92__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_92__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us93(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_93__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_93__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us94s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, __struct_94__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1us95(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_95__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_95__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us97(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_97__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us98(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_98__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1us99(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_99__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu1uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uu2u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uu4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u1uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uui4uu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1uur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uur4i4r4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1uus16(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_16__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_16__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus16u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_16__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_16__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus17(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_17__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_17__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus17u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_17__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_17__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus19(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus19u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus41u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus42u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus43u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uus6u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uus86(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_86__ __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuu1i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuu1u1r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuu1u1r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuu1u1s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, __struct_68__ __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuu2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuu2u2u2u2u2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, uint16_t __arg5, uint16_t __arg6, uint16_t __arg7, uint16_t __arg8, uint16_t __arg9, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_u1uuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u1uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u1uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u1uuuu1s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, __struct_68__ __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_u1uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u1uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint8_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uint8_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u2i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2ii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2iis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2iiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint16_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u2uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u2uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint16_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint16_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u4i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(float __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_1__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_117__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_118__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_119__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_121__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_122__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_123__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_124__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_125__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_126__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_127__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_128__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_129__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_130__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_131__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_132__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_133__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_134__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_135__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_136__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_137__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_138__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_139__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_140__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_141__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_142__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_143__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_146__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_147__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_149__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_150__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_151__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_153__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_154__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_155__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_156__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_157__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_158__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_159__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_161__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_162__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_163__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_165__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_166__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_167__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_169__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_170__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_171__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_172__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_173__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4s173s173u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_173__ __arg0, __struct_173__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4s174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_174__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_175__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_176__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_177__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4s177s177u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_177__ __arg0, __struct_177__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4s178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_178__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_179__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_180__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_181__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4s181s181u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_181__ __arg0, __struct_181__ __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4s313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_313__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_38__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_39__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4u4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4u4u4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4u4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4u4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint32_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u4u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uint64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4ui4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u4uu4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u4uu4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint32_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uint32_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_u8i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(double __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(double __arg0, double __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_319__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s319i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_319__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_320__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8s320i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_320__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8s83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_u8u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8u8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8u8u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8u8u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8u8u8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8u8u8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8u8u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uint64_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_u8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_u8uui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_u8uuui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uint64_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uint64_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int8_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int16_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4i4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_ui4s252u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_252__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_252__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4s253u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_253__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_253__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4s254u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_254__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_254__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4s68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_68__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, __struct_90__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui4uu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_ui4uui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4uur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_ui4uuu1r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_ui4uuu1ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_ui4uuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_ui4uuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_ui4uuur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_ui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_ui4uuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_ui4uuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ui8i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui8i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_ui8i8u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, int64_t __arg1, uint32_t __arg2, uint32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_ui8s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ui8s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(int64_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uii(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uiis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uiiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uis763s763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, __struct_763__ __arg1, __struct_763__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_ur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(float __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ur4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(float __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_ur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(double __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_ur8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(double __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_100__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_111__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_116__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us116r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us116r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us116r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_116__ __arg0, float __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_120__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_144__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us144s144uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_144__ __arg0, __struct_144__ __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_148__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us148s148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us148s148r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us148s148r4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, float __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_us152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_24__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_3__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_30__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_31__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us31s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us31s31s31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_31__ __arg0, __struct_31__ __arg1, __struct_31__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us432(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_432__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_432__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us433(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_433__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_433__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us434(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_434__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_434__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us436(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_436__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_436__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us437(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_437__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_437__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us438(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_438__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_438__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us478(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_478__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_478__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us488(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_488__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_510__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_68__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_68__ __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us68i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_68__ __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_us763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_763__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us763s763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_763__ __arg0, __struct_763__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_83__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us83s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_83__ __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_us85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_85__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us85s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_85__ __arg0, __struct_85__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_us90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_90__ __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_us90s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(__struct_90__ __arg0, __struct_90__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint8_t __arg0, float __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint16_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu4s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint32_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint64_t __arg0, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_uu8s31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uint64_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui2ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4i4i4i8i8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4i4u1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, uint32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4s38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_90__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4u1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uui4uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uui8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uui8i8s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, __struct_68__ __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuiuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, float __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus148s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus148s152u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_152__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus148s152u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_152__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus148s152uu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_152__ __arg2, uintptr_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uus148u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus272i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_272__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus28ui4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uus28uu1i4i4i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_uus28uui4i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uus28uui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uus28uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uus31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus321(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_321__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus40uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus423uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_423__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_423__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus424uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_424__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_424__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus425uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_425__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_425__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus427i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_427__ __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uus6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus81(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus86uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_86__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uus88(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_88__ __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_88__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uus94uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu1i4i4i4ui4i4i4i4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, uint8_t __arg10, uintptr_t __arg11, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_uuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu1ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuu1uuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuu4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu4u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint64_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuui4i4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uuui4i4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4i4u1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint32_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4i4uuuu1uu1i4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, uintptr_t __arg8, uint8_t __arg9, int32_t __arg10, int32_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), method);
}


static void __M2N_uuui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuui4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_30__ __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuui4s30uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_30__ __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4s38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_38__ __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4u1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4ui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuui4uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uuui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuur4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuus16uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_16__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_16__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus17uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_17__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_17__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus19uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_19__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_26__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuus28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_28__ __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuus38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuus38u1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, uint8_t __arg3, uint32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuus42u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuus86uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_86__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuu1i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuu1i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuu1r4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, float __arg3, int32_t __arg4, float __arg5, int32_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuu1uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_uuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuui4i4i4i4u1s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint8_t __arg7, __struct_94__ __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uuuui4i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, float __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuui4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uuuui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuui4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuui4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuui8uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuui8uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uuuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuur4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuur4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, float __arg5, int32_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuur4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuus42u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuus90i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_90__ __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuus94u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_94__ __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint32_t __arg3, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_uuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_uuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_uuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_uuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_uuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_uuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_uuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), method);
}


static void __M2N_uuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_uuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_uuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), method);
}


static void __M2N_uuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), method);
}


static void __M2N_uuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_uuuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_uuuuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, uintptr_t __arg17, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[16]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[17]), method);
}


static void __M2N_uuuuuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef uintptr_t (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, uintptr_t __arg17, uintptr_t __arg18, const MethodInfo* method);
    *(uintptr_t*)ret = ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[16]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[17]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[18]), method);
}


static void __M2N_v(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(method);
}


static void __M2N_vi(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vi2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int16_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vi4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vi4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vi4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vi4i4s68u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, __struct_68__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vi4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vi4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vi4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, int64_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uint8_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vi4uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vi4uuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int32_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vi8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int64_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vi8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int64_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vi8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(int64_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vii4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_viis31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, __struct_31__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_viiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_viu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_viui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(intptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vr4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(float __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vr4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(float __arg0, float __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vr4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(float __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vr4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(float __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vr4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(float __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vr8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(double __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vr8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(double __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vr8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(double __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs111s101(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_101__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_101__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s102(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_102__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_102__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s103(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_103__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_103__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s104(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_104__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_104__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s105(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_105__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_105__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_111__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_24__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_272__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s488(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_488__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, __struct_510__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs111uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_111__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs132uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_132__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs136uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_136__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs140uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_140__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs144uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_144__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs148s148s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs148s148s152r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_152__ __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vs148s148s152r4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_148__ __arg0, __struct_148__ __arg1, __struct_152__ __arg2, float __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vs148uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_148__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_152__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs152uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_152__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs1i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_1__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vs202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_202__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs24i4i4s24i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, int32_t __arg1, int32_t __arg2, __struct_24__ __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vs24i4s24i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, int32_t __arg1, __struct_24__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vs24i4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vs24s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, __struct_100__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, __struct_24__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs24s24i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, __struct_24__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs24u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs24ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_24__ __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_272__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs272s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_272__ __arg0, __struct_100__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs272u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_272__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs2i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_2__ __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs2i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_2__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_2__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vs31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_31__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs3i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_3__ __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs3i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_3__ __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vs427(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_427__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs427s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_427__ __arg0, __struct_100__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs427u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_427__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s101(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_101__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_101__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s102(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_102__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_102__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s103(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_103__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_103__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s104(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_104__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_104__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s105(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_105__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_105__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_111__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_24__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_272__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s488(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_488__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs488s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_488__ __arg0, __struct_510__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_510__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs510s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_510__ __arg0, __struct_100__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs510s510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_510__ __arg0, __struct_510__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs510u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_510__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs511(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_511__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_511__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs68u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_68__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs68ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_68__ __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vs68ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_68__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vs763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_763__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vs763u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_763__ __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vs94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(__struct_94__ __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vtypedbyrefu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(Il2CppTypedRef __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<Il2CppTypedRef>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu1ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vu1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint8_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vu2u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu2ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint16_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint32_t __arg0, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), method);
}


static void __M2N_vu4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint32_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint32_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vu8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint64_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vu8ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uint64_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui1i1i1i1i1i1i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, int8_t __arg3, int8_t __arg4, int8_t __arg5, int8_t __arg6, int8_t __arg7, int8_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, int8_t __arg3, int8_t __arg4, int8_t __arg5, int8_t __arg6, int8_t __arg7, int8_t __arg8, int8_t __arg9, int8_t __arg10, int8_t __arg11, int8_t __arg12, int8_t __arg13, int8_t __arg14, int8_t __arg15, int8_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, int8_t __arg3, int8_t __arg4, int8_t __arg5, int8_t __arg6, int8_t __arg7, int8_t __arg8, int8_t __arg9, int8_t __arg10, int8_t __arg11, int8_t __arg12, int8_t __arg13, int8_t __arg14, int8_t __arg15, int8_t __arg16, int8_t __arg17, int8_t __arg18, int8_t __arg19, int8_t __arg20, int8_t __arg21, int8_t __arg22, int8_t __arg23, int8_t __arg24, int8_t __arg25, int8_t __arg26, int8_t __arg27, int8_t __arg28, int8_t __arg29, int8_t __arg30, int8_t __arg31, int8_t __arg32, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[16]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[17]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[18]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[19]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[20]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[21]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[22]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[23]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[24]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[25]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[26]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[27]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[28]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[29]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[30]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[31]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[32]), method);
}


static void __M2N_vui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, int16_t __arg3, int16_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui2i2i2i2i2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, int16_t __arg3, int16_t __arg4, int16_t __arg5, int16_t __arg6, int16_t __arg7, int16_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vui2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, int16_t __arg3, int16_t __arg4, int16_t __arg5, int16_t __arg6, int16_t __arg7, int16_t __arg8, int16_t __arg9, int16_t __arg10, int16_t __arg11, int16_t __arg12, int16_t __arg13, int16_t __arg14, int16_t __arg15, int16_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4i2i2u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int16_t __arg2, int16_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_vui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4i4i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, intptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vui4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vui4i4i4i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, int32_t __arg10, int32_t __arg11, int32_t __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vui4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, int32_t __arg10, int32_t __arg11, int32_t __arg12, int32_t __arg13, int32_t __arg14, int32_t __arg15, int32_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vui4i4i4i4i4iu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, intptr_t __arg6, uint8_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4i4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, uint8_t __arg6, uint8_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4i4u1i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, intptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4i4u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vui4i4i4i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, int64_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, __struct_100__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4s68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, __struct_68__ __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4i4u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4i4i4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i4s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_100__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_144__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_148__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_151__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_152__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s193(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_193__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_193__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_202__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_38__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, __struct_68__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uint16_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4i8i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4i8i8u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4ii4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_0__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_1__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_100__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_116__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_144__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_148__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_151__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_152__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_156__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s193(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_193__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_193__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_202__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_21__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_24__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s24i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_24__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4s28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_28__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_3__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s31i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_31__ __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4s34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_34__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_38__ __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_39__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_40__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_43__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s503(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_503__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_503__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s504(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_504__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_504__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s505(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_505__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_505__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s506(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_506__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_506__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s507(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_507__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_507__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_51__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s514(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_514__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_514__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_6__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_62__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_63__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_65__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_68__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_68__ __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4s77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_77__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_78__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s79(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_79__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4s94u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, __struct_94__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui4u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uint64_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4ui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4ui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4ui4uu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui4uui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4uui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui4uuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4uuu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4uuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4uuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vui4uuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vui8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui8i8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui8i8i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui8s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, __struct_68__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, __struct_94__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vui8ui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vui8ui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuii4ii4ii4u1s69(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, int32_t __arg2, intptr_t __arg3, int32_t __arg4, intptr_t __arg5, int32_t __arg6, uint8_t __arg7, __struct_69__ __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<__struct_69__>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuii4ii4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, int32_t __arg2, intptr_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuiiiiiii4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, intptr_t __arg3, intptr_t __arg4, intptr_t __arg5, intptr_t __arg6, int32_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuiiui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuiu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, intptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vur4i4r4i4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, intptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur4r4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, intptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vur4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vur4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vur4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vur4r4r4r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, float __arg10, float __arg11, float __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vur4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, float __arg5, float __arg6, float __arg7, float __arg8, float __arg9, float __arg10, float __arg11, float __arg12, float __arg13, float __arg14, float __arg15, float __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vur4r4r4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vur4r4r4r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, float __arg3, float __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vur4r4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, float __arg2, __struct_144__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, __struct_144__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur4s144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, __struct_144__ __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur4s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, float __arg1, __struct_148__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vur8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vur8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vur8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vur8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vur8r8r8r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, double __arg10, double __arg11, double __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vur8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, double __arg3, double __arg4, double __arg5, double __arg6, double __arg7, double __arg8, double __arg9, double __arg10, double __arg11, double __arg12, double __arg13, double __arg14, double __arg15, double __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vur8r8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, double __arg2, __struct_132__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur8s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, __struct_132__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vur8s132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, __struct_132__ __arg2, double __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vur8s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, double __arg1, __struct_136__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus0(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_0__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus100(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus101(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_101__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus102(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_102__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus103(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_103__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus104(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_104__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus105(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_105__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus106(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_106__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus107(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_107__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus108(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_108__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus109(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_109__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus110(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_110__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus111(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_111__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus114(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_114__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus116(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_116__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus117(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_117__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus118(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_118__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_118__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus119(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_119__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_119__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, __struct_120__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus120s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, __struct_120__ __arg2, __struct_120__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus120s120s120s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, __struct_120__ __arg2, __struct_120__ __arg3, __struct_120__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus120u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_120__ __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus121(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_121__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_121__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus122(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_122__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_122__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus123(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_123__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_123__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, __struct_124__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus124s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, __struct_124__ __arg2, __struct_124__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus124s124s124s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, __struct_124__ __arg2, __struct_124__ __arg3, __struct_124__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus124u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_124__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus125(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_125__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_125__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus126(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_126__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_126__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus127(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_127__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_127__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_128__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_128__ __arg1, __struct_128__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus128s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_128__ __arg1, __struct_128__ __arg2, __struct_128__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus128s128s128s128(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_128__ __arg1, __struct_128__ __arg2, __struct_128__ __arg3, __struct_128__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_128__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus129(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_129__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_129__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus130(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_130__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_130__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus131(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_131__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_131__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus132r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus132r8r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, double __arg2, double __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, __struct_132__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, __struct_132__ __arg2, __struct_132__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus132s132s132s132(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_132__ __arg1, __struct_132__ __arg2, __struct_132__ __arg3, __struct_132__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_132__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus133(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_133__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_133__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus134(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_134__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_134__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus135(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_135__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_135__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus136r8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, __struct_136__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, __struct_136__ __arg2, __struct_136__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus136s136s136s136(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_136__ __arg1, __struct_136__ __arg2, __struct_136__ __arg3, __struct_136__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_136__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus137(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_137__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_137__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus138(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_138__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_138__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus139(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_139__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_139__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, __struct_140__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, __struct_140__ __arg2, __struct_140__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus140s140s140s140(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_140__ __arg1, __struct_140__ __arg2, __struct_140__ __arg3, __struct_140__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_140__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus141(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_141__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_141__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus142(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_142__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_142__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus143(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_143__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_143__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus144r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus144r4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, float __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, __struct_144__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus144s144s144s144(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_144__ __arg1, __struct_144__ __arg2, __struct_144__ __arg3, __struct_144__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_144__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus146(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_146__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus146s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_146__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_146__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus147(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_147__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_147__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus148r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus148s148r4r4s478(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, float __arg3, float __arg4, __struct_478__ __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_478__>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, __struct_148__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus148s148s148s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_148__ __arg1, __struct_148__ __arg2, __struct_148__ __arg3, __struct_148__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus149(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_149__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_149__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus150(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_150__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_150__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus151(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_151__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_151__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus152r4r4r4r4uuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, float __arg2, float __arg3, float __arg4, float __arg5, uintptr_t __arg6, uintptr_t __arg7, uint8_t __arg8, int32_t __arg9, uintptr_t __arg10, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), method);
}


static void __M2N_vus152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, __struct_152__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, __struct_152__ __arg2, __struct_152__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus152s152s152s152(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, __struct_152__ __arg2, __struct_152__ __arg3, __struct_152__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus152u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus152ui4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus152uu1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_152__ __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_152__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vus153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_153__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus153s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_153__ __arg1, __struct_153__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_153__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus153s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_153__ __arg1, __struct_156__ __arg2, __struct_156__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_154__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus154s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_154__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus155(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_155__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_155__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus156s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_153__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus156s153s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_153__ __arg2, __struct_156__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus156s154(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_154__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_154__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_156__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus156s156s153(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_156__ __arg2, __struct_153__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_153__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus156s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_156__ __arg2, __struct_156__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus156s156s156s156(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_156__ __arg1, __struct_156__ __arg2, __struct_156__ __arg3, __struct_156__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_156__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus157(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_157__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_157__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus158(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_158__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_158__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus159(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_159__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_159__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus161(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_161__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_161__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus162(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_162__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_162__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus163(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_163__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_163__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus165(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_165__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_165__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus166(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_166__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_166__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus167(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_167__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_167__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus169(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_169__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus169s148(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_169__ __arg1, __struct_148__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_169__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_148__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus170(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_170__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_170__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus171(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_171__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_171__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus172(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_172__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_172__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, __struct_173__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, __struct_173__ __arg2, __struct_173__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus173s173s173s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, __struct_173__ __arg2, __struct_173__ __arg3, __struct_173__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus173u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_173__ __arg1, uint32_t __arg2, uint32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus174(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_174__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_174__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus175(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_175__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_175__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus176(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_176__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_176__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, __struct_177__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, __struct_177__ __arg2, __struct_177__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus177s177s177s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, __struct_177__ __arg2, __struct_177__ __arg3, __struct_177__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus177u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_177__ __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus178(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_178__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_178__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus179(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_179__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_179__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus180(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_180__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_180__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, __struct_181__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, __struct_181__ __arg2, __struct_181__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus181s181s181s181(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_181__ __arg1, __struct_181__ __arg2, __struct_181__ __arg3, __struct_181__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_181__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus182(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus182s518(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_518__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus182s518u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_518__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus182uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_182__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, __struct_1__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus1s1s1s1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, __struct_1__ __arg3, __struct_1__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_1__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus202(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_202__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_202__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus205(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_205__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_205__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus21(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_21__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus213(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_213__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_213__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus216(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_216__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_216__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus229(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_229__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_229__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus231(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_231__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_231__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus248(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_248__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_248__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus24i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus24i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus24s24s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, __struct_24__ __arg2, __struct_24__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus24u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_24__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus272(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_272__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_272__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus28i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus28s64(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, __struct_64__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_64__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus28ui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus28uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus28uu1i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vus28uu1i4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vus28uu1i4i4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uint8_t __arg7, uint8_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vus28uu1i8i4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int64_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vus28uui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vus28uui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vus3(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_3__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus30s30s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_30__ __arg1, __struct_30__ __arg2, __struct_94__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus31(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus313(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_313__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_313__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_319__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus319s319(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_319__ __arg1, __struct_319__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_319__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus31i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus31s252(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, __struct_252__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_252__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus31s253(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, __struct_253__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_253__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus31s254(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, __struct_254__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_254__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus31u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_31__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_320__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus320s320(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_320__ __arg1, __struct_320__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_320__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus34u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_34__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus35(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus35u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus35ui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_35__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus36(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus36u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus36uuuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, int32_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_36__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vus38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus38i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus38i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, __struct_38__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus38s38s38s38(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, __struct_38__ __arg3, __struct_38__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus38u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_38__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, __struct_39__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus39s39s39s39(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, __struct_39__ __arg3, __struct_39__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus40(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_40__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_421__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus421s421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_421__ __arg1, __struct_421__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus423(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_423__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_423__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus424(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_424__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_424__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus425(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_425__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_425__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus427(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_427__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_427__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus42u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_42__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus44(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_44__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_44__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus45(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_45__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus47(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_47__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_47__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus478(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_478__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_478__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus479(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_479__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_479__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus48(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_48__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus480(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_480__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_480__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus482(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_482__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_482__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus485(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_485__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_485__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus488(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_488__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_488__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus490(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_490__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_490__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus491(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_491__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_491__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus501(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_501__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_501__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus508(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_508__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_508__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus51(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_51__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus510(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_510__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_510__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus513(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_513__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_513__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus515i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_515__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_515__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus516(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_516__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_516__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus519(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_519__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_519__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus52(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_52__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_52__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus521(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_521__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_521__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus522(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_522__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_522__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus522u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_522__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_522__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus53(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_53__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_53__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus54(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_54__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_54__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus55(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_55__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus57(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_57__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus58(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_58__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_58__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus59(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_59__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus61(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_61__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus62(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_62__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus63(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_63__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus65(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_65__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus66(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus66u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_66__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_66__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus68i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_68__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus6u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_6__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus70(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_70__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus763(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_763__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus763u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_763__ __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus763uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_763__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vus77(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_77__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus78(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_78__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus79(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_79__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus81(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus81u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_81__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_81__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus82(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_82__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_82__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus83(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_83__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus84u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_84__ __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_84__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus85i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus85i4s85i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, int32_t __arg2, __struct_85__ __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus85s24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, __struct_24__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus85s273(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, __struct_273__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_273__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus85s85(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_85__ __arg1, __struct_85__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_85__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vus86(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_86__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_86__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus90i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_90__ __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vus92(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_92__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_92__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vus94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vutypedbyrefu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, Il2CppTypedRef __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<Il2CppTypedRef>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu1i1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu1i4i4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1i4r4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1s100i4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, __struct_100__ __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_100__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, __struct_120__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1s120u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, __struct_120__ __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1s124(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, __struct_124__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_124__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1i4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u1s120(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, __struct_120__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_120__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuu1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, uint8_t __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, uint8_t __arg12, uint8_t __arg13, uint8_t __arg14, uint8_t __arg15, uint8_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, uint8_t __arg6, uint8_t __arg7, uint8_t __arg8, uint8_t __arg9, uint8_t __arg10, uint8_t __arg11, uint8_t __arg12, uint8_t __arg13, uint8_t __arg14, uint8_t __arg15, uint8_t __arg16, uint8_t __arg17, uint8_t __arg18, uint8_t __arg19, uint8_t __arg20, uint8_t __arg21, uint8_t __arg22, uint8_t __arg23, uint8_t __arg24, uint8_t __arg25, uint8_t __arg26, uint8_t __arg27, uint8_t __arg28, uint8_t __arg29, uint8_t __arg30, uint8_t __arg31, uint8_t __arg32, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[16]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[17]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[18]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[19]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[20]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[21]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[22]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[23]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[24]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[25]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[26]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[27]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[28]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[29]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[30]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[31]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[32]), method);
}


static void __M2N_vuu1u1u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu1u1uuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, int32_t __arg7, int32_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuu1u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uint64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu1ui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu1ui4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1uu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu1uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu2i4i4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu2i4u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, uint8_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuu2u1u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint8_t __arg2, uint8_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu2u2u2u2u2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, uint16_t __arg5, uint16_t __arg6, uint16_t __arg7, uint16_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu2u2u2u2u2u2u2u2u2u2u2u2u2u2u2u2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, uint16_t __arg3, uint16_t __arg4, uint16_t __arg5, uint16_t __arg6, uint16_t __arg7, uint16_t __arg8, uint16_t __arg9, uint16_t __arg10, uint16_t __arg11, uint16_t __arg12, uint16_t __arg13, uint16_t __arg14, uint16_t __arg15, uint16_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, __struct_173__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu4s173u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, __struct_173__ __arg2, uint32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu4s177(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, __struct_177__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_177__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu4u4s173(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, __struct_173__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_173__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuu4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuu4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuu4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuu4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuu4u4u4u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, uint32_t __arg10, uint32_t __arg11, uint32_t __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vuu4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint32_t __arg1, uint32_t __arg2, uint32_t __arg3, uint32_t __arg4, uint32_t __arg5, uint32_t __arg6, uint32_t __arg7, uint32_t __arg8, uint32_t __arg9, uint32_t __arg10, uint32_t __arg11, uint32_t __arg12, uint32_t __arg13, uint32_t __arg14, uint32_t __arg15, uint32_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[16]), method);
}


static void __M2N_vuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), method);
}


static void __M2N_vuu8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuu8u8u8u8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, uint64_t __arg3, uint64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui2(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int16_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui4i1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int8_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int16_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuui4i4i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuui4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4i4u1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4i4uuuu1uu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, uintptr_t __arg8, uint8_t __arg9, int32_t __arg10, int32_t __arg11, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_vuui4i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int64_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4r8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, double __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4s182(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_182__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4s68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_68__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui4u1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4u2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint16_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4u4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4u8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint64_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4ui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui4uuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuui8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui8i8i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui8i8i8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui8i8s30s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, __struct_30__ __arg4, __struct_30__ __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuui8i8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuui8u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuui8ui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, int64_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuiii4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, intptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuiiui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, intptr_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuis115i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, __struct_115__ __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_115__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuiu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuur4i4r4i4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuur4r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuur8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, double __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<double>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus201u4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_201__ __arg2, uint32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_201__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus24(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_24__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_24__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus26(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_26__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_26__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus27(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_27__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus28(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_28__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus28u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_28__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_28__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_30__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus30s30(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_30__ __arg2, __struct_30__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus34(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_34__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_34__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_39__ __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus41(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_41__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus421(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_421__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_421__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus43(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_43__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus520i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_520__ __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_520__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus520i4s182(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_520__ __arg2, int32_t __arg3, __struct_182__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_520__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_182__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuus6(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_6__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus68(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_68__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_68__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuus763u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_763__ __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_763__>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuus90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, __struct_90__ __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu1i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuu1i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu1r4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1r4i4r4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, float __arg3, int32_t __arg4, float __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuu1s484(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_484__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_484__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu1u1i4s30i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, int32_t __arg4, __struct_30__ __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuu1u1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuu4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuu4i(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, intptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint32_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<intptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuu8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uint64_t __arg2, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uint64_t>(localVarBase+argVarIndexs[2]), method);
}


static void __M2N_vuuui2i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int16_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int16_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuui4s30r4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, __struct_30__ __arg4, float __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuui4s30uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, __struct_30__ __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_30__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuui4s90(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuui4ui4us433i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, uintptr_t __arg6, __struct_433__ __arg7, int32_t __arg8, uint8_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<__struct_433__>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuuui4uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuui4uuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuui4uuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuui4uuuu1u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, uint8_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuuui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuui8uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuur4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuur4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<float>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuus39u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_39__ __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_39__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuus42(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_42__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuus90i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_90__ __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuus94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_94__ __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuus94s94(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_94__ __arg3, __struct_94__ __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), method);
}


static void __M2N_vuuuu1i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuu1i4u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuu1u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuu1uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuui4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuui4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int64_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuus38u1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, __struct_38__ __arg4, uint8_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_38__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuus90i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, __struct_90__ __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_90__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuus94uu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, __struct_94__ __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuus94uui8(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, __struct_94__ __arg4, uintptr_t __arg5, uintptr_t __arg6, int64_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<__struct_94__>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuuu1(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), method);
}


static void __M2N_vuuuuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuuu1i4i4i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuuuuu1i4i4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuu1i8i4i4i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, int64_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, int32_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int64_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuuuuui4u(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), method);
}


static void __M2N_vuuuuuu1i4i4(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uint8_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uint8_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<int32_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), method);
}


static void __M2N_vuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), method);
}


static void __M2N_vuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), method);
}


static void __M2N_vuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), method);
}


static void __M2N_vuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), method);
}


static void __M2N_vuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), method);
}


static void __M2N_vuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), method);
}


static void __M2N_vuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), method);
}


static void __M2N_vuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), method);
}


static void __M2N_vuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), method);
}


static void __M2N_vuuuuuuuuuuuuuuuuu(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)
{
    typedef void (*NativeMethod)(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, const MethodInfo* method);
    ((NativeMethod)(method->methodPointerCallByInterp))(M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[0]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[1]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[2]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[3]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[4]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[5]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[6]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[7]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[8]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[9]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[10]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[11]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[12]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[13]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[14]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[15]), M2NFromValueOrAddress<uintptr_t>(localVarBase+argVarIndexs[16]), method);
}


const Managed2NativeMethodInfo hybridclr::interpreter::g_managed2nativeStub[] = 
{

	{"i", __M2N_i},
	{"i1", __M2N_i1},
	{"i1i", __M2N_i1i},
	{"i1i1", __M2N_i1i1},
	{"i1i1i1", __M2N_i1i1i1},
	{"i1i1i4", __M2N_i1i1i4},
	{"i1i1u1", __M2N_i1i1u1},
	{"i1i2", __M2N_i1i2},
	{"i1i2i4", __M2N_i1i2i4},
	{"i1i4", __M2N_i1i4},
	{"i1i8", __M2N_i1i8},
	{"i1ii", __M2N_i1ii},
	{"i1iis31", __M2N_i1iis31},
	{"i1iiu", __M2N_i1iiu},
	{"i1r4", __M2N_i1r4},
	{"i1r8", __M2N_i1r8},
	{"i1s319", __M2N_i1s319},
	{"i1s319i4", __M2N_i1s319i4},
	{"i1s320", __M2N_i1s320},
	{"i1s320i4", __M2N_i1s320i4},
	{"i1s83", __M2N_i1s83},
	{"i1u", __M2N_i1u},
	{"i1u1", __M2N_i1u1},
	{"i1u2", __M2N_i1u2},
	{"i1u4", __M2N_i1u4},
	{"i1u8", __M2N_i1u8},
	{"i1ui4u", __M2N_i1ui4u},
	{"i1uiu", __M2N_i1uiu},
	{"i1uu", __M2N_i1uu},
	{"i1uuu", __M2N_i1uuu},
	{"i2", __M2N_i2},
	{"i2i", __M2N_i2i},
	{"i2i1", __M2N_i2i1},
	{"i2i2", __M2N_i2i2},
	{"i2i2i2", __M2N_i2i2i2},
	{"i2i2i2i2", __M2N_i2i2i2i2},
	{"i2i2i2s319i4", __M2N_i2i2i2s319i4},
	{"i2i2i2s320i4", __M2N_i2i2i2s320i4},
	{"i2i2i4", __M2N_i2i2i4},
	{"i2i2s319i4", __M2N_i2i2s319i4},
	{"i2i2s320i4", __M2N_i2i2s320i4},
	{"i2i2u2", __M2N_i2i2u2},
	{"i2i4", __M2N_i2i4},
	{"i2i4i4", __M2N_i2i4i4},
	{"i2i8", __M2N_i2i8},
	{"i2ii", __M2N_i2ii},
	{"i2iis31", __M2N_i2iis31},
	{"i2iiu", __M2N_i2iiu},
	{"i2r4", __M2N_i2r4},
	{"i2r8", __M2N_i2r8},
	{"i2s319", __M2N_i2s319},
	{"i2s319i4", __M2N_i2s319i4},
	{"i2s320", __M2N_i2s320},
	{"i2s320i4", __M2N_i2s320i4},
	{"i2s83", __M2N_i2s83},
	{"i2u", __M2N_i2u},
	{"i2u1", __M2N_i2u1},
	{"i2u2", __M2N_i2u2},
	{"i2u4", __M2N_i2u4},
	{"i2u8", __M2N_i2u8},
	{"i2ui4", __M2N_i2ui4},
	{"i2ui4u", __M2N_i2ui4u},
	{"i2uiu", __M2N_i2uiu},
	{"i2uu", __M2N_i2uu},
	{"i2uuu", __M2N_i2uuu},
	{"i4", __M2N_i4},
	{"i4i", __M2N_i4i},
	{"i4i2", __M2N_i4i2},
	{"i4i2i2", __M2N_i4i2i2},
	{"i4i2s319i4", __M2N_i4i2s319i4},
	{"i4i2s320i4", __M2N_i4i2s320i4},
	{"i4i4", __M2N_i4i4},
	{"i4i4i2i2", __M2N_i4i4i2i2},
	{"i4i4i2s319i4", __M2N_i4i4i2s319i4},
	{"i4i4i2s320i4", __M2N_i4i4i2s320i4},
	{"i4i4i4", __M2N_i4i4i4},
	{"i4i4i4i4", __M2N_i4i4i4i4},
	{"i4i4i4i4i4", __M2N_i4i4i4i4i4},
	{"i4i4i4i4i4i4", __M2N_i4i4i4i4i4i4},
	{"i4i4i4i4i4i4i4", __M2N_i4i4i4i4i4i4i4},
	{"i4i4i4i4i4i4i4i4", __M2N_i4i4i4i4i4i4i4i4},
	{"i4i4i4i4i4i4i4i4i4", __M2N_i4i4i4i4i4i4i4i4i4},
	{"i4i4i4s152", __M2N_i4i4i4s152},
	{"i4i4i4s319i4", __M2N_i4i4i4s319i4},
	{"i4i4i4u", __M2N_i4i4i4u},
	{"i4i4i4u1", __M2N_i4i4i4u1},
	{"i4i4i4uuu", __M2N_i4i4i4uuu},
	{"i4i4s319i4", __M2N_i4i4s319i4},
	{"i4i4s320i4", __M2N_i4i4s320i4},
	{"i4i4u1", __M2N_i4i4u1},
	{"i4i4u4", __M2N_i4i4u4},
	{"i4i4ui4uu", __M2N_i4i4ui4uu},
	{"i4i4uu", __M2N_i4i4uu},
	{"i4i4uui4u", __M2N_i4i4uui4u},
	{"i4i4uuu", __M2N_i4i4uuu},
	{"i4i4uuui4u", __M2N_i4i4uuui4u},
	{"i4i8", __M2N_i4i8},
	{"i4i8i4", __M2N_i4i8i4},
	{"i4i8ui4i4", __M2N_i4i8ui4i4},
	{"i4ii", __M2N_i4ii},
	{"i4iiiiuiu4u4u1uu1", __M2N_i4iiiiuiu4u4u1uu1},
	{"i4iis31", __M2N_i4iis31},
	{"i4iiu", __M2N_i4iiu},
	{"i4iu", __M2N_i4iu},
	{"i4r4", __M2N_i4r4},
	{"i4r4i4", __M2N_i4r4i4},
	{"i4r8", __M2N_i4r8},
	{"i4s1", __M2N_i4s1},
	{"i4s116u", __M2N_i4s116u},
	{"i4s116ur4", __M2N_i4s116ur4},
	{"i4s116ur4i4", __M2N_i4s116ur4i4},
	{"i4s116ur4i4i4", __M2N_i4s116ur4i4i4},
	{"i4s128", __M2N_i4s128},
	{"i4s144s144s429u", __M2N_i4s144s144s429u},
	{"i4s144s144s429ur4", __M2N_i4s144s144s429ur4},
	{"i4s148s148u", __M2N_i4s148s148u},
	{"i4s148s148ur4", __M2N_i4s148s148ur4},
	{"i4s148s148ur4i4", __M2N_i4s148s148ur4i4},
	{"i4s148s148ur4i4i4", __M2N_i4s148s148ur4i4i4},
	{"i4s152i4ui4u", __M2N_i4s152i4ui4u},
	{"i4s157", __M2N_i4s157},
	{"i4s162", __M2N_i4s162},
	{"i4s167", __M2N_i4s167},
	{"i4s1s1", __M2N_i4s1s1},
	{"i4s1s1u1", __M2N_i4s1s1u1},
	{"i4s24", __M2N_i4s24},
	{"i4s24u", __M2N_i4s24u},
	{"i4s24us100", __M2N_i4s24us100},
	{"i4s24uu", __M2N_i4s24uu},
	{"i4s272u", __M2N_i4s272u},
	{"i4s272us100", __M2N_i4s272us100},
	{"i4s272uu", __M2N_i4s272uu},
	{"i4s273u", __M2N_i4s273u},
	{"i4s30s30", __M2N_i4s30s30},
	{"i4s319", __M2N_i4s319},
	{"i4s319i4", __M2N_i4s319i4},
	{"i4s31i4i4u", __M2N_i4s31i4i4u},
	{"i4s31s31", __M2N_i4s31s31},
	{"i4s31u", __M2N_i4s31u},
	{"i4s31u2", __M2N_i4s31u2},
	{"i4s31u8", __M2N_i4s31u8},
	{"i4s320", __M2N_i4s320},
	{"i4s320i4", __M2N_i4s320i4},
	{"i4s320i4s320i4i4", __M2N_i4s320i4s320i4i4},
	{"i4s320s320", __M2N_i4s320s320},
	{"i4s320s320i4", __M2N_i4s320s320i4},
	{"i4s38", __M2N_i4s38},
	{"i4s38s38", __M2N_i4s38s38},
	{"i4s38s38u1", __M2N_i4s38s38u1},
	{"i4s39", __M2N_i4s39},
	{"i4s39s39", __M2N_i4s39s39},
	{"i4s39s39u1", __M2N_i4s39s39u1},
	{"i4s421", __M2N_i4s421},
	{"i4s421i4", __M2N_i4s421i4},
	{"i4s421s421", __M2N_i4s421s421},
	{"i4s427u", __M2N_i4s427u},
	{"i4s427us100", __M2N_i4s427us100},
	{"i4s427uu", __M2N_i4s427uu},
	{"i4s510u", __M2N_i4s510u},
	{"i4s510us100", __M2N_i4s510us100},
	{"i4s510uu", __M2N_i4s510uu},
	{"i4s83", __M2N_i4s83},
	{"i4u", __M2N_i4u},
	{"i4u1", __M2N_i4u1},
	{"i4u2", __M2N_i4u2},
	{"i4u2i4", __M2N_i4u2i4},
	{"i4u2u2", __M2N_i4u2u2},
	{"i4u2u2u2u2", __M2N_i4u2u2u2u2},
	{"i4u4", __M2N_i4u4},
	{"i4u4i4", __M2N_i4u4i4},
	{"i4u8", __M2N_i4u8},
	{"i4ui", __M2N_i4ui},
	{"i4ui1", __M2N_i4ui1},
	{"i4ui1i1", __M2N_i4ui1i1},
	{"i4ui2", __M2N_i4ui2},
	{"i4ui2i2", __M2N_i4ui2i2},
	{"i4ui4", __M2N_i4ui4},
	{"i4ui4i4", __M2N_i4ui4i4},
	{"i4ui4i4i4", __M2N_i4ui4i4i4},
	{"i4ui4i4i4u", __M2N_i4ui4i4i4u},
	{"i4ui4i4i8u", __M2N_i4ui4i4i8u},
	{"i4ui4i4s0u", __M2N_i4ui4i4s0u},
	{"i4ui4i4s100", __M2N_i4ui4i4s100},
	{"i4ui4i4s1u", __M2N_i4ui4i4s1u},
	{"i4ui4i4s21u", __M2N_i4ui4i4s21u},
	{"i4ui4i4s28u", __M2N_i4ui4i4s28u},
	{"i4ui4i4s34u", __M2N_i4ui4i4s34u},
	{"i4ui4i4s40u", __M2N_i4ui4i4s40u},
	{"i4ui4i4s43u", __M2N_i4ui4i4s43u},
	{"i4ui4i4s51u", __M2N_i4ui4i4s51u},
	{"i4ui4i4s62u", __M2N_i4ui4i4s62u},
	{"i4ui4i4s63u", __M2N_i4ui4i4s63u},
	{"i4ui4i4s65u", __M2N_i4ui4i4s65u},
	{"i4ui4i4s68u", __M2N_i4ui4i4s68u},
	{"i4ui4i4s77u", __M2N_i4ui4i4s77u},
	{"i4ui4i4s78u", __M2N_i4ui4i4s78u},
	{"i4ui4i4u", __M2N_i4ui4i4u},
	{"i4ui4i4u8u", __M2N_i4ui4i4u8u},
	{"i4ui4i4uu", __M2N_i4ui4i4uu},
	{"i4ui4s152s128", __M2N_i4ui4s152s128},
	{"i4ui4s181s128", __M2N_i4ui4s181s128},
	{"i4ui4s39s128", __M2N_i4ui4s39s128},
	{"i4ui4u", __M2N_i4ui4u},
	{"i4ui4u1", __M2N_i4ui4u1},
	{"i4ui4u8", __M2N_i4ui4u8},
	{"i4ui4ui4", __M2N_i4ui4ui4},
	{"i4ui4ui4i4", __M2N_i4ui4ui4i4},
	{"i4ui4ui4i4i4", __M2N_i4ui4ui4i4i4},
	{"i4ui4ui4i4i4i4", __M2N_i4ui4ui4i4i4i4},
	{"i4ui4ui4i4i4i4i1", __M2N_i4ui4ui4i4i4i4i1},
	{"i4ui4ui4i4i4i4i2", __M2N_i4ui4ui4i4i4i4i2},
	{"i4ui4ui4i4i4i4u", __M2N_i4ui4ui4i4i4i4u},
	{"i4ui4ui4i4i4i4u1", __M2N_i4ui4ui4i4i4i4u1},
	{"i4ui4ui4i4i4i4u2", __M2N_i4ui4ui4i4i4i4u2},
	{"i4ui4us100", __M2N_i4ui4us100},
	{"i4ui4uu", __M2N_i4ui4uu},
	{"i4ui4uui4", __M2N_i4ui4uui4},
	{"i4ui8", __M2N_i4ui8},
	{"i4ui8i4i4", __M2N_i4ui8i4i4},
	{"i4ui8i8", __M2N_i4ui8i8},
	{"i4ui8ui4", __M2N_i4ui8ui4},
	{"i4uii", __M2N_i4uii},
	{"i4uiu", __M2N_i4uiu},
	{"i4ur4", __M2N_i4ur4},
	{"i4ur4u2", __M2N_i4ur4u2},
	{"i4ur8", __M2N_i4ur8},
	{"i4us0", __M2N_i4us0},
	{"i4us0i4i4", __M2N_i4us0i4i4},
	{"i4us0s0", __M2N_i4us0s0},
	{"i4us1", __M2N_i4us1},
	{"i4us100", __M2N_i4us100},
	{"i4us101", __M2N_i4us101},
	{"i4us102", __M2N_i4us102},
	{"i4us103", __M2N_i4us103},
	{"i4us104", __M2N_i4us104},
	{"i4us105", __M2N_i4us105},
	{"i4us106", __M2N_i4us106},
	{"i4us107", __M2N_i4us107},
	{"i4us108", __M2N_i4us108},
	{"i4us109", __M2N_i4us109},
	{"i4us110", __M2N_i4us110},
	{"i4us111", __M2N_i4us111},
	{"i4us114", __M2N_i4us114},
	{"i4us116r4ui4", __M2N_i4us116r4ui4},
	{"i4us144s144r4s429u", __M2N_i4us144s144r4s429u},
	{"i4us148s148ur4i4i4", __M2N_i4us148s148ur4i4i4},
	{"i4us173", __M2N_i4us173},
	{"i4us1i4i4", __M2N_i4us1i4i4},
	{"i4us1s1", __M2N_i4us1s1},
	{"i4us201", __M2N_i4us201},
	{"i4us21", __M2N_i4us21},
	{"i4us21i4i4", __M2N_i4us21i4i4},
	{"i4us21s21", __M2N_i4us21s21},
	{"i4us24", __M2N_i4us24},
	{"i4us249", __M2N_i4us249},
	{"i4us24s24", __M2N_i4us24s24},
	{"i4us250", __M2N_i4us250},
	{"i4us251", __M2N_i4us251},
	{"i4us252", __M2N_i4us252},
	{"i4us253", __M2N_i4us253},
	{"i4us254", __M2N_i4us254},
	{"i4us26", __M2N_i4us26},
	{"i4us27", __M2N_i4us27},
	{"i4us28", __M2N_i4us28},
	{"i4us28i4i4", __M2N_i4us28i4i4},
	{"i4us28s28", __M2N_i4us28s28},
	{"i4us3", __M2N_i4us3},
	{"i4us30", __M2N_i4us30},
	{"i4us31", __M2N_i4us31},
	{"i4us314uu", __M2N_i4us314uu},
	{"i4us31s31u1", __M2N_i4us31s31u1},
	{"i4us34", __M2N_i4us34},
	{"i4us34i4i4", __M2N_i4us34i4i4},
	{"i4us34s34", __M2N_i4us34s34},
	{"i4us35", __M2N_i4us35},
	{"i4us36", __M2N_i4us36},
	{"i4us38", __M2N_i4us38},
	{"i4us39", __M2N_i4us39},
	{"i4us3s3", __M2N_i4us3s3},
	{"i4us40", __M2N_i4us40},
	{"i4us40i4i4", __M2N_i4us40i4i4},
	{"i4us40s40", __M2N_i4us40s40},
	{"i4us41", __M2N_i4us41},
	{"i4us42", __M2N_i4us42},
	{"i4us42s42", __M2N_i4us42s42},
	{"i4us43", __M2N_i4us43},
	{"i4us43i4i4", __M2N_i4us43i4i4},
	{"i4us43s43", __M2N_i4us43s43},
	{"i4us51", __M2N_i4us51},
	{"i4us51i4i4", __M2N_i4us51i4i4},
	{"i4us51s51", __M2N_i4us51s51},
	{"i4us6", __M2N_i4us6},
	{"i4us62", __M2N_i4us62},
	{"i4us62i4i4", __M2N_i4us62i4i4},
	{"i4us62s62", __M2N_i4us62s62},
	{"i4us63", __M2N_i4us63},
	{"i4us63i4i4", __M2N_i4us63i4i4},
	{"i4us63s63", __M2N_i4us63s63},
	{"i4us64", __M2N_i4us64},
	{"i4us65", __M2N_i4us65},
	{"i4us65i4i4", __M2N_i4us65i4i4},
	{"i4us65s65", __M2N_i4us65s65},
	{"i4us66", __M2N_i4us66},
	{"i4us66i4i4", __M2N_i4us66i4i4},
	{"i4us66s66", __M2N_i4us66s66},
	{"i4us68", __M2N_i4us68},
	{"i4us68i4i4", __M2N_i4us68i4i4},
	{"i4us68s68", __M2N_i4us68s68},
	{"i4us69", __M2N_i4us69},
	{"i4us69s69", __M2N_i4us69s69},
	{"i4us70", __M2N_i4us70},
	{"i4us70i4i4", __M2N_i4us70i4i4},
	{"i4us77", __M2N_i4us77},
	{"i4us77i4i4", __M2N_i4us77i4i4},
	{"i4us77s77", __M2N_i4us77s77},
	{"i4us78", __M2N_i4us78},
	{"i4us78i4i4", __M2N_i4us78i4i4},
	{"i4us78s78", __M2N_i4us78s78},
	{"i4us79", __M2N_i4us79},
	{"i4us81s81", __M2N_i4us81s81},
	{"i4us83", __M2N_i4us83},
	{"i4us84", __M2N_i4us84},
	{"i4us85", __M2N_i4us85},
	{"i4us85i4", __M2N_i4us85i4},
	{"i4us90", __M2N_i4us90},
	{"i4us94", __M2N_i4us94},
	{"i4us94u1", __M2N_i4us94u1},
	{"i4us97", __M2N_i4us97},
	{"i4us98", __M2N_i4us98},
	{"i4us99", __M2N_i4us99},
	{"i4uu", __M2N_i4uu},
	{"i4uu1", __M2N_i4uu1},
	{"i4uu1i4", __M2N_i4uu1i4},
	{"i4uu1i4i4", __M2N_i4uu1i4i4},
	{"i4uu1u1", __M2N_i4uu1u1},
	{"i4uu2", __M2N_i4uu2},
	{"i4uu2i4", __M2N_i4uu2i4},
	{"i4uu2i4i4", __M2N_i4uu2i4i4},
	{"i4uu2u2", __M2N_i4uu2u2},
	{"i4uu2u2u2", __M2N_i4uu2u2u2},
	{"i4uu2u2u2u2u2u2u2u2", __M2N_i4uu2u2u2u2u2u2u2u2},
	{"i4uu4", __M2N_i4uu4},
	{"i4uu8", __M2N_i4uu8},
	{"i4uu8u8", __M2N_i4uu8u8},
	{"i4uui1i4i4", __M2N_i4uui1i4i4},
	{"i4uui2i4i4", __M2N_i4uui2i4i4},
	{"i4uui4", __M2N_i4uui4},
	{"i4uui4i4", __M2N_i4uui4i4},
	{"i4uui4i4i4", __M2N_i4uui4i4i4},
	{"i4uui4i4i4i1", __M2N_i4uui4i4i4i1},
	{"i4uui4i4i4i2", __M2N_i4uui4i4i4i2},
	{"i4uui4i4i4u", __M2N_i4uui4i4i4u},
	{"i4uui4i4i4u1", __M2N_i4uui4i4i4u1},
	{"i4uui4i4i4u2", __M2N_i4uui4i4i4u2},
	{"i4uui4i4i8u", __M2N_i4uui4i4i8u},
	{"i4uui4i4s0u", __M2N_i4uui4i4s0u},
	{"i4uui4i4s1u", __M2N_i4uui4i4s1u},
	{"i4uui4i4s21u", __M2N_i4uui4i4s21u},
	{"i4uui4i4s28u", __M2N_i4uui4i4s28u},
	{"i4uui4i4s34u", __M2N_i4uui4i4s34u},
	{"i4uui4i4s40u", __M2N_i4uui4i4s40u},
	{"i4uui4i4s43u", __M2N_i4uui4i4s43u},
	{"i4uui4i4s51u", __M2N_i4uui4i4s51u},
	{"i4uui4i4s62u", __M2N_i4uui4i4s62u},
	{"i4uui4i4s63u", __M2N_i4uui4i4s63u},
	{"i4uui4i4s65u", __M2N_i4uui4i4s65u},
	{"i4uui4i4s68u", __M2N_i4uui4i4s68u},
	{"i4uui4i4s77u", __M2N_i4uui4i4s77u},
	{"i4uui4i4s78u", __M2N_i4uui4i4s78u},
	{"i4uui4i4u", __M2N_i4uui4i4u},
	{"i4uui4i4u1", __M2N_i4uui4i4u1},
	{"i4uui4i4u2", __M2N_i4uui4i4u2},
	{"i4uui4i4u8u", __M2N_i4uui4i4u8u},
	{"i4uui4i4ui4", __M2N_i4uui4i4ui4},
	{"i4uui4i4ui4i4i4", __M2N_i4uui4i4ui4i4i4},
	{"i4uui4i4ui4u1", __M2N_i4uui4i4ui4u1},
	{"i4uui4i4uu", __M2N_i4uui4i4uu},
	{"i4uui4s85", __M2N_i4uui4s85},
	{"i4uui4u", __M2N_i4uui4u},
	{"i4uui4u1", __M2N_i4uui4u1},
	{"i4uui4ui4", __M2N_i4uui4ui4},
	{"i4uui4ui4i4", __M2N_i4uui4ui4i4},
	{"i4uui4ui4u1", __M2N_i4uui4ui4u1},
	{"i4uui8", __M2N_i4uui8},
	{"i4uui8i4i4", __M2N_i4uui8i4i4},
	{"i4uuii4i4", __M2N_i4uuii4i4},
	{"i4uus0i4i4", __M2N_i4uus0i4i4},
	{"i4uus1i4i4", __M2N_i4uus1i4i4},
	{"i4uus21i4i4", __M2N_i4uus21i4i4},
	{"i4uus24i4i4", __M2N_i4uus24i4i4},
	{"i4uus26i4i4", __M2N_i4uus26i4i4},
	{"i4uus27i4i4", __M2N_i4uus27i4i4},
	{"i4uus28i4i4", __M2N_i4uus28i4i4},
	{"i4uus34i4i4", __M2N_i4uus34i4i4},
	{"i4uus35i4i4", __M2N_i4uus35i4i4},
	{"i4uus36i4i4", __M2N_i4uus36i4i4},
	{"i4uus38i4i4", __M2N_i4uus38i4i4},
	{"i4uus39i4i4", __M2N_i4uus39i4i4},
	{"i4uus3i4i4", __M2N_i4uus3i4i4},
	{"i4uus40i4i4", __M2N_i4uus40i4i4},
	{"i4uus41i4i4", __M2N_i4uus41i4i4},
	{"i4uus42i4i4", __M2N_i4uus42i4i4},
	{"i4uus43i4i4", __M2N_i4uus43i4i4},
	{"i4uus51i4i4", __M2N_i4uus51i4i4},
	{"i4uus62i4i4", __M2N_i4uus62i4i4},
	{"i4uus63i4i4", __M2N_i4uus63i4i4},
	{"i4uus64i4i4", __M2N_i4uus64i4i4},
	{"i4uus65i4i4", __M2N_i4uus65i4i4},
	{"i4uus66i4i4", __M2N_i4uus66i4i4},
	{"i4uus68i4i4", __M2N_i4uus68i4i4},
	{"i4uus69i4i4", __M2N_i4uus69i4i4},
	{"i4uus6i4i4", __M2N_i4uus6i4i4},
	{"i4uus70i4i4", __M2N_i4uus70i4i4},
	{"i4uus77i4i4", __M2N_i4uus77i4i4},
	{"i4uus78i4i4", __M2N_i4uus78i4i4},
	{"i4uus85", __M2N_i4uus85},
	{"i4uuu", __M2N_i4uuu},
	{"i4uuu1", __M2N_i4uuu1},
	{"i4uuu1i4", __M2N_i4uuu1i4},
	{"i4uuu1i4i4", __M2N_i4uuu1i4i4},
	{"i4uuu1u", __M2N_i4uuu1u},
	{"i4uuu2i4i4", __M2N_i4uuu2i4i4},
	{"i4uuu2ui4", __M2N_i4uuu2ui4},
	{"i4uuu2uu2", __M2N_i4uuu2uu2},
	{"i4uuui4", __M2N_i4uuui4},
	{"i4uuui4i4", __M2N_i4uuui4i4},
	{"i4uuui4i4i4", __M2N_i4uuui4i4i4},
	{"i4uuui4u", __M2N_i4uuui4u},
	{"i4uuui4u1", __M2N_i4uuui4u1},
	{"i4uuui4u1u", __M2N_i4uuui4u1u},
	{"i4uuui4us148", __M2N_i4uuui4us148},
	{"i4uuui4us148u", __M2N_i4uuui4us148u},
	{"i4uuui4uu", __M2N_i4uuui4uu},
	{"i4uuui4uuu", __M2N_i4uuui4uuu},
	{"i4uuus148", __M2N_i4uuus148},
	{"i4uuuu", __M2N_i4uuuu},
	{"i4uuuu1", __M2N_i4uuuu1},
	{"i4uuuu1u", __M2N_i4uuuu1u},
	{"i4uuuu2", __M2N_i4uuuu2},
	{"i4uuuui4", __M2N_i4uuuui4},
	{"i4uuuui4u", __M2N_i4uuuui4u},
	{"i4uuuuu", __M2N_i4uuuuu},
	{"i8", __M2N_i8},
	{"i8i", __M2N_i8i},
	{"i8i1", __M2N_i8i1},
	{"i8i2", __M2N_i8i2},
	{"i8i4", __M2N_i8i4},
	{"i8i4i4", __M2N_i8i4i4},
	{"i8i4s319i4", __M2N_i8i4s319i4},
	{"i8i4s320i4", __M2N_i8i4s320i4},
	{"i8i8", __M2N_i8i8},
	{"i8i8i4", __M2N_i8i8i4},
	{"i8i8i4i4", __M2N_i8i8i4i4},
	{"i8i8i4s319i4", __M2N_i8i8i4s319i4},
	{"i8i8i4s320i4", __M2N_i8i8i4s320i4},
	{"i8i8i8", __M2N_i8i8i8},
	{"i8i8i8i4", __M2N_i8i8i8i4},
	{"i8i8i8i8", __M2N_i8i8i8i8},
	{"i8i8i8u1", __M2N_i8i8i8u1},
	{"i8i8u8", __M2N_i8i8u8},
	{"i8ii", __M2N_i8ii},
	{"i8iis31", __M2N_i8iis31},
	{"i8iiu", __M2N_i8iiu},
	{"i8r4", __M2N_i8r4},
	{"i8r8", __M2N_i8r8},
	{"i8r8i4", __M2N_i8r8i4},
	{"i8s319", __M2N_i8s319},
	{"i8s319i4", __M2N_i8s319i4},
	{"i8s31i4i4u", __M2N_i8s31i4i4u},
	{"i8s320", __M2N_i8s320},
	{"i8s320i4", __M2N_i8s320i4},
	{"i8s421", __M2N_i8s421},
	{"i8s421i4", __M2N_i8s421i4},
	{"i8s83", __M2N_i8s83},
	{"i8u", __M2N_i8u},
	{"i8u1", __M2N_i8u1},
	{"i8u2", __M2N_i8u2},
	{"i8u4", __M2N_i8u4},
	{"i8u8", __M2N_i8u8},
	{"i8ui4", __M2N_i8ui4},
	{"i8ui4i4", __M2N_i8ui4i4},
	{"i8ui4i8i4i4", __M2N_i8ui4i8i4i4},
	{"i8ui4u", __M2N_i8ui4u},
	{"i8ui8", __M2N_i8ui8},
	{"i8ui8i4", __M2N_i8ui8i4},
	{"i8ui8i4u", __M2N_i8ui8i4u},
	{"i8ui8i8", __M2N_i8ui8i8},
	{"i8uiu", __M2N_i8uiu},
	{"i8uu", __M2N_i8uu},
	{"i8uuu", __M2N_i8uuu},
	{"ii", __M2N_ii},
	{"ii4", __M2N_ii4},
	{"ii4ii", __M2N_ii4ii},
	{"ii8", __M2N_ii8},
	{"iii", __M2N_iii},
	{"iii4", __M2N_iii4},
	{"iiii", __M2N_iiii},
	{"iiis31", __M2N_iiis31},
	{"iiiu", __M2N_iiiu},
	{"iiu", __M2N_iiu},
	{"iiuu", __M2N_iiuu},
	{"iiuu1", __M2N_iiuu1},
	{"iiuuu1", __M2N_iiuuu1},
	{"is763", __M2N_is763},
	{"is763s763s763", __M2N_is763s763s763},
	{"iu", __M2N_iu},
	{"iu1", __M2N_iu1},
	{"iu1u1uu", __M2N_iu1u1uu},
	{"iui", __M2N_iui},
	{"iui4", __M2N_iui4},
	{"iui4i", __M2N_iui4i},
	{"iui4i4i4i4u", __M2N_iui4i4i4i4u},
	{"iuii", __M2N_iuii},
	{"ius31u", __M2N_ius31u},
	{"iuu", __M2N_iuu},
	{"iuu2u2i4", __M2N_iuu2u2i4},
	{"iuui", __M2N_iuui},
	{"iuuu1", __M2N_iuuu1},
	{"iuuuu", __M2N_iuuuu},
	{"r4", __M2N_r4},
	{"r4i", __M2N_r4i},
	{"r4i1", __M2N_r4i1},
	{"r4i2", __M2N_r4i2},
	{"r4i4", __M2N_r4i4},
	{"r4i4i4", __M2N_r4i4i4},
	{"r4i8", __M2N_r4i8},
	{"r4ii", __M2N_r4ii},
	{"r4iis31", __M2N_r4iis31},
	{"r4iiu", __M2N_r4iiu},
	{"r4r4", __M2N_r4r4},
	{"r4r4r4", __M2N_r4r4r4},
	{"r4r4r4r4", __M2N_r4r4r4r4},
	{"r4r4r4r4r4r4", __M2N_r4r4r4r4r4r4},
	{"r4r4r4r4u", __M2N_r4r4r4r4u},
	{"r4r4r4s319i4", __M2N_r4r4r4s319i4},
	{"r4r4r4s320i4", __M2N_r4r4r4s320i4},
	{"r4r4r4u1", __M2N_r4r4r4u1},
	{"r4r4s319i4", __M2N_r4r4s319i4},
	{"r4r4s320i4", __M2N_r4r4s320i4},
	{"r4r4u", __M2N_r4r4u},
	{"r4r8", __M2N_r4r8},
	{"r4s141", __M2N_r4s141},
	{"r4s144", __M2N_r4s144},
	{"r4s144r4", __M2N_r4s144r4},
	{"r4s144s144", __M2N_r4s144s144},
	{"r4s144s144r4", __M2N_r4s144s144r4},
	{"r4s144s144u1", __M2N_r4s144s144u1},
	{"r4s146", __M2N_r4s146},
	{"r4s148", __M2N_r4s148},
	{"r4s148s148", __M2N_r4s148s148},
	{"r4s148s148u1", __M2N_r4s148s148u1},
	{"r4s148u", __M2N_r4s148u},
	{"r4s151", __M2N_r4s151},
	{"r4s152", __M2N_r4s152},
	{"r4s152r4r4r4r4u", __M2N_r4s152r4r4r4r4u},
	{"r4s152r4r4r4r4uuu1i4u", __M2N_r4s152r4r4r4r4uuu1i4u},
	{"r4s152r4r4r4uu", __M2N_r4s152r4r4r4uu},
	{"r4s152s152", __M2N_r4s152s152},
	{"r4s152s152u1", __M2N_r4s152s152u1},
	{"r4s156", __M2N_r4s156},
	{"r4s169", __M2N_r4s169},
	{"r4s169s169", __M2N_r4s169s169},
	{"r4s319", __M2N_r4s319},
	{"r4s319i4", __M2N_r4s319i4},
	{"r4s320", __M2N_r4s320},
	{"r4s320i4", __M2N_r4s320i4},
	{"r4s421", __M2N_r4s421},
	{"r4s83", __M2N_r4s83},
	{"r4u", __M2N_r4u},
	{"r4u1", __M2N_r4u1},
	{"r4u2", __M2N_r4u2},
	{"r4u4", __M2N_r4u4},
	{"r4u4i4", __M2N_r4u4i4},
	{"r4u8", __M2N_r4u8},
	{"r4ui4", __M2N_r4ui4},
	{"r4ui4u", __M2N_r4ui4u},
	{"r4uiu", __M2N_r4uiu},
	{"r4ur4", __M2N_r4ur4},
	{"r4ur4r4", __M2N_r4ur4r4},
	{"r4us148", __M2N_r4us148},
	{"r4uu", __M2N_r4uu},
	{"r4uur4", __M2N_r4uur4},
	{"r4uur4r4", __M2N_r4uur4r4},
	{"r4uuu", __M2N_r4uuu},
	{"r8", __M2N_r8},
	{"r8i", __M2N_r8i},
	{"r8i1", __M2N_r8i1},
	{"r8i2", __M2N_r8i2},
	{"r8i4", __M2N_r8i4},
	{"r8i8", __M2N_r8i8},
	{"r8i8i4", __M2N_r8i8i4},
	{"r8ii", __M2N_r8ii},
	{"r8iis31", __M2N_r8iis31},
	{"r8iiu", __M2N_r8iiu},
	{"r8r4", __M2N_r8r4},
	{"r8r8", __M2N_r8r8},
	{"r8r8i4", __M2N_r8r8i4},
	{"r8r8i4i4", __M2N_r8r8i4i4},
	{"r8r8r8", __M2N_r8r8r8},
	{"r8r8r8r8", __M2N_r8r8r8r8},
	{"r8r8r8r8r8r8", __M2N_r8r8r8r8r8r8},
	{"r8r8r8s319i4", __M2N_r8r8r8s319i4},
	{"r8r8r8s320i4", __M2N_r8r8r8s320i4},
	{"r8r8r8u1", __M2N_r8r8r8u1},
	{"r8r8s319i4", __M2N_r8r8s319i4},
	{"r8r8s320i4", __M2N_r8r8s320i4},
	{"r8r8u", __M2N_r8r8u},
	{"r8s129", __M2N_r8s129},
	{"r8s132", __M2N_r8s132},
	{"r8s132s132", __M2N_r8s132s132},
	{"r8s132s132u1", __M2N_r8s132s132u1},
	{"r8s134", __M2N_r8s134},
	{"r8s136", __M2N_r8s136},
	{"r8s136s136", __M2N_r8s136s136},
	{"r8s136s136u1", __M2N_r8s136s136u1},
	{"r8s139", __M2N_r8s139},
	{"r8s140", __M2N_r8s140},
	{"r8s140s140", __M2N_r8s140s140},
	{"r8s140s140u1", __M2N_r8s140s140u1},
	{"r8s156", __M2N_r8s156},
	{"r8s319i4", __M2N_r8s319i4},
	{"r8s320", __M2N_r8s320},
	{"r8s320i4", __M2N_r8s320i4},
	{"r8s421", __M2N_r8s421},
	{"r8s83", __M2N_r8s83},
	{"r8u", __M2N_r8u},
	{"r8u1", __M2N_r8u1},
	{"r8u2", __M2N_r8u2},
	{"r8u4", __M2N_r8u4},
	{"r8u8", __M2N_r8u8},
	{"r8u8i4", __M2N_r8u8i4},
	{"r8ui4", __M2N_r8ui4},
	{"r8ui4u", __M2N_r8ui4u},
	{"r8uiu", __M2N_r8uiu},
	{"r8ur8", __M2N_r8ur8},
	{"r8ur8r8", __M2N_r8ur8r8},
	{"r8uu", __M2N_r8uu},
	{"r8uuu", __M2N_r8uuu},
	{"s0u", __M2N_s0u},
	{"s0ui4", __M2N_s0ui4},
	{"s0uu", __M2N_s0uu},
	{"s100u", __M2N_s100u},
	{"s100uu", __M2N_s100uu},
	{"s100uu1", __M2N_s100uu1},
	{"s100uuu", __M2N_s100uuu},
	{"s101u", __M2N_s101u},
	{"s102u", __M2N_s102u},
	{"s103u", __M2N_s103u},
	{"s104u", __M2N_s104u},
	{"s105u", __M2N_s105u},
	{"s106s106i4", __M2N_s106s106i4},
	{"s106s106i4i4", __M2N_s106s106i4i4},
	{"s106s106i4i4i4", __M2N_s106s106i4i4i4},
	{"s106s106i4i4r4", __M2N_s106s106i4i4r4},
	{"s106s106i4i4u", __M2N_s106s106i4i4u},
	{"s106s106i4r4", __M2N_s106s106i4r4},
	{"s106s106i4r4i4", __M2N_s106s106i4r4i4},
	{"s106s106i4r4r4", __M2N_s106s106i4r4r4},
	{"s106s106i4r4u", __M2N_s106s106i4r4u},
	{"s106s106i4u", __M2N_s106s106i4u},
	{"s106s106i4ui4", __M2N_s106s106i4ui4},
	{"s106s106i4ur4", __M2N_s106s106i4ur4},
	{"s106s106i4uu", __M2N_s106s106i4uu},
	{"s106s106r4", __M2N_s106s106r4},
	{"s106s106r4i4", __M2N_s106s106r4i4},
	{"s106s106r4i4i4", __M2N_s106s106r4i4i4},
	{"s106s106r4i4r4", __M2N_s106s106r4i4r4},
	{"s106s106r4i4u", __M2N_s106s106r4i4u},
	{"s106s106r4r4", __M2N_s106s106r4r4},
	{"s106s106r4r4i4", __M2N_s106s106r4r4i4},
	{"s106s106r4r4r4", __M2N_s106s106r4r4r4},
	{"s106s106r4r4u", __M2N_s106s106r4r4u},
	{"s106s106r4u", __M2N_s106s106r4u},
	{"s106s106r4ui4", __M2N_s106s106r4ui4},
	{"s106s106r4ur4", __M2N_s106s106r4ur4},
	{"s106s106r4uu", __M2N_s106s106r4uu},
	{"s106s106u", __M2N_s106s106u},
	{"s106s106ui4", __M2N_s106s106ui4},
	{"s106s106ui4i4", __M2N_s106s106ui4i4},
	{"s106s106ui4r4", __M2N_s106s106ui4r4},
	{"s106s106ui4u", __M2N_s106s106ui4u},
	{"s106s106ur4", __M2N_s106s106ur4},
	{"s106s106ur4i4", __M2N_s106s106ur4i4},
	{"s106s106ur4r4", __M2N_s106s106ur4r4},
	{"s106s106ur4u", __M2N_s106s106ur4u},
	{"s106s106uu", __M2N_s106s106uu},
	{"s106s106uui4", __M2N_s106s106uui4},
	{"s106s106uur4", __M2N_s106s106uur4},
	{"s106s106uuu", __M2N_s106s106uuu},
	{"s106u", __M2N_s106u},
	{"s107u", __M2N_s107u},
	{"s108u", __M2N_s108u},
	{"s109s109i4i4i4i4", __M2N_s109s109i4i4i4i4},
	{"s109s109i4i4i4r4", __M2N_s109s109i4i4i4r4},
	{"s109s109i4i4i4u", __M2N_s109s109i4i4i4u},
	{"s109s109i4i4r4i4", __M2N_s109s109i4i4r4i4},
	{"s109s109i4i4r4r4", __M2N_s109s109i4i4r4r4},
	{"s109s109i4i4r4u", __M2N_s109s109i4i4r4u},
	{"s109s109i4i4ui4", __M2N_s109s109i4i4ui4},
	{"s109s109i4i4ur4", __M2N_s109s109i4i4ur4},
	{"s109s109i4i4uu", __M2N_s109s109i4i4uu},
	{"s109s109i4r4i4i4", __M2N_s109s109i4r4i4i4},
	{"s109s109i4r4i4r4", __M2N_s109s109i4r4i4r4},
	{"s109s109i4r4i4u", __M2N_s109s109i4r4i4u},
	{"s109s109i4r4r4i4", __M2N_s109s109i4r4r4i4},
	{"s109s109i4r4r4r4", __M2N_s109s109i4r4r4r4},
	{"s109s109i4r4r4u", __M2N_s109s109i4r4r4u},
	{"s109s109i4r4ui4", __M2N_s109s109i4r4ui4},
	{"s109s109i4r4ur4", __M2N_s109s109i4r4ur4},
	{"s109s109i4r4uu", __M2N_s109s109i4r4uu},
	{"s109s109i4ui4i4", __M2N_s109s109i4ui4i4},
	{"s109s109i4ui4r4", __M2N_s109s109i4ui4r4},
	{"s109s109i4ui4u", __M2N_s109s109i4ui4u},
	{"s109s109i4ur4i4", __M2N_s109s109i4ur4i4},
	{"s109s109i4ur4r4", __M2N_s109s109i4ur4r4},
	{"s109s109i4ur4u", __M2N_s109s109i4ur4u},
	{"s109s109i4uui4", __M2N_s109s109i4uui4},
	{"s109s109i4uur4", __M2N_s109s109i4uur4},
	{"s109s109i4uuu", __M2N_s109s109i4uuu},
	{"s109s109r4i4i4i4", __M2N_s109s109r4i4i4i4},
	{"s109s109r4i4i4r4", __M2N_s109s109r4i4i4r4},
	{"s109s109r4i4i4u", __M2N_s109s109r4i4i4u},
	{"s109s109r4i4r4i4", __M2N_s109s109r4i4r4i4},
	{"s109s109r4i4r4r4", __M2N_s109s109r4i4r4r4},
	{"s109s109r4i4r4u", __M2N_s109s109r4i4r4u},
	{"s109s109r4i4ui4", __M2N_s109s109r4i4ui4},
	{"s109s109r4i4ur4", __M2N_s109s109r4i4ur4},
	{"s109s109r4i4uu", __M2N_s109s109r4i4uu},
	{"s109s109r4r4i4i4", __M2N_s109s109r4r4i4i4},
	{"s109s109r4r4i4r4", __M2N_s109s109r4r4i4r4},
	{"s109s109r4r4i4u", __M2N_s109s109r4r4i4u},
	{"s109s109r4r4r4i4", __M2N_s109s109r4r4r4i4},
	{"s109s109r4r4r4r4", __M2N_s109s109r4r4r4r4},
	{"s109s109r4r4r4u", __M2N_s109s109r4r4r4u},
	{"s109s109r4r4ui4", __M2N_s109s109r4r4ui4},
	{"s109s109r4r4ur4", __M2N_s109s109r4r4ur4},
	{"s109s109r4r4uu", __M2N_s109s109r4r4uu},
	{"s109s109r4ui4i4", __M2N_s109s109r4ui4i4},
	{"s109s109r4ui4r4", __M2N_s109s109r4ui4r4},
	{"s109s109r4ui4u", __M2N_s109s109r4ui4u},
	{"s109s109r4ur4i4", __M2N_s109s109r4ur4i4},
	{"s109s109r4ur4r4", __M2N_s109s109r4ur4r4},
	{"s109s109r4ur4u", __M2N_s109s109r4ur4u},
	{"s109s109r4uui4", __M2N_s109s109r4uui4},
	{"s109s109r4uur4", __M2N_s109s109r4uur4},
	{"s109s109r4uuu", __M2N_s109s109r4uuu},
	{"s109s109ui4i4i4", __M2N_s109s109ui4i4i4},
	{"s109s109ui4i4r4", __M2N_s109s109ui4i4r4},
	{"s109s109ui4i4u", __M2N_s109s109ui4i4u},
	{"s109s109ui4r4i4", __M2N_s109s109ui4r4i4},
	{"s109s109ui4r4r4", __M2N_s109s109ui4r4r4},
	{"s109s109ui4r4u", __M2N_s109s109ui4r4u},
	{"s109s109ui4ui4", __M2N_s109s109ui4ui4},
	{"s109s109ui4ur4", __M2N_s109s109ui4ur4},
	{"s109s109ui4uu", __M2N_s109s109ui4uu},
	{"s109s109ur4i4i4", __M2N_s109s109ur4i4i4},
	{"s109s109ur4i4r4", __M2N_s109s109ur4i4r4},
	{"s109s109ur4i4u", __M2N_s109s109ur4i4u},
	{"s109s109ur4r4i4", __M2N_s109s109ur4r4i4},
	{"s109s109ur4r4r4", __M2N_s109s109ur4r4r4},
	{"s109s109ur4r4u", __M2N_s109s109ur4r4u},
	{"s109s109ur4ui4", __M2N_s109s109ur4ui4},
	{"s109s109ur4ur4", __M2N_s109s109ur4ur4},
	{"s109s109ur4uu", __M2N_s109s109ur4uu},
	{"s109s109uui4i4", __M2N_s109s109uui4i4},
	{"s109s109uui4r4", __M2N_s109s109uui4r4},
	{"s109s109uui4u", __M2N_s109s109uui4u},
	{"s109s109uur4i4", __M2N_s109s109uur4i4},
	{"s109s109uur4r4", __M2N_s109s109uur4r4},
	{"s109s109uur4u", __M2N_s109s109uur4u},
	{"s109s109uuui4", __M2N_s109s109uuui4},
	{"s109s109uuur4", __M2N_s109s109uuur4},
	{"s109s109uuuu", __M2N_s109s109uuuu},
	{"s109u", __M2N_s109u},
	{"s10u", __M2N_s10u},
	{"s110u", __M2N_s110u},
	{"s111i4u", __M2N_s111i4u},
	{"s111u", __M2N_s111u},
	{"s114u", __M2N_s114u},
	{"s114u4", __M2N_s114u4},
	{"s114u4i8", __M2N_s114u4i8},
	{"s114u4i8i8", __M2N_s114u4i8i8},
	{"s114uu4", __M2N_s114uu4},
	{"s114uuu4", __M2N_s114uuu4},
	{"s115s111s115", __M2N_s115s111s115},
	{"s115s115s115", __M2N_s115s115s115},
	{"s115s115s115s115", __M2N_s115s115s115s115},
	{"s115s24s100s115", __M2N_s115s24s100s115},
	{"s115s24s115", __M2N_s115s24s115},
	{"s115s24us115", __M2N_s115s24us115},
	{"s115s272s100s115", __M2N_s115s272s100s115},
	{"s115s272s115", __M2N_s115s272s115},
	{"s115s272us115", __M2N_s115s272us115},
	{"s115s427s100s115", __M2N_s115s427s100s115},
	{"s115s427s115", __M2N_s115s427s115},
	{"s115s427us115", __M2N_s115s427us115},
	{"s115s510s100s115", __M2N_s115s510s100s115},
	{"s115s510s115", __M2N_s115s510s115},
	{"s115s510us115", __M2N_s115s510us115},
	{"s115s571s115", __M2N_s115s571s115},
	{"s115s711s115", __M2N_s115s711s115},
	{"s115s712s115", __M2N_s115s712s115},
	{"s115s715s115", __M2N_s115s715s115},
	{"s115s716s115", __M2N_s115s716s115},
	{"s115s718i4i4s115", __M2N_s115s718i4i4s115},
	{"s115s718s115", __M2N_s115s718s115},
	{"s115s719i4i4s115", __M2N_s115s719i4i4s115},
	{"s115s719s115", __M2N_s115s719s115},
	{"s115s720s115", __M2N_s115s720s115},
	{"s115s721s115", __M2N_s115s721s115},
	{"s115s724s115", __M2N_s115s724s115},
	{"s115s729i4i4s115", __M2N_s115s729i4i4s115},
	{"s115s730i4i4s115", __M2N_s115s730i4i4s115},
	{"s115s731i4i4s115", __M2N_s115s731i4i4s115},
	{"s115s732i4i4s115", __M2N_s115s732i4i4s115},
	{"s115s734s763s115", __M2N_s115s734s763s115},
	{"s115u", __M2N_s115u},
	{"s115ui", __M2N_s115ui},
	{"s115ui4i4", __M2N_s115ui4i4},
	{"s115ui4i4s115", __M2N_s115ui4i4s115},
	{"s115ui4s100s115", __M2N_s115ui4s100s115},
	{"s115ui4s115", __M2N_s115ui4s115},
	{"s115ui4us115", __M2N_s115ui4us115},
	{"s115us115", __M2N_s115us115},
	{"s115us24s115s68", __M2N_s115us24s115s68},
	{"s115us510s115s68", __M2N_s115us510s115s68},
	{"s115us763s115", __M2N_s115us763s115},
	{"s115uus736s734i", __M2N_s115uus736s734i},
	{"s116i4", __M2N_s116i4},
	{"s116r4", __M2N_s116r4},
	{"s116r4r4r4r4r4r4", __M2N_s116r4r4r4r4r4r4},
	{"s116r4s116", __M2N_s116r4s116},
	{"s116r8", __M2N_s116r8},
	{"s116s116", __M2N_s116s116},
	{"s116s116r4", __M2N_s116s116r4},
	{"s116s116s116", __M2N_s116s116s116},
	{"s116s116s141", __M2N_s116s116s141},
	{"s116s121", __M2N_s116s121},
	{"s116s133", __M2N_s116s133},
	{"s116s142", __M2N_s116s142},
	{"s116s146s116", __M2N_s116s146s116},
	{"s116s147s149", __M2N_s116s147s149},
	{"s116s148s148", __M2N_s116s148s148},
	{"s116s151s116", __M2N_s116s151s116},
	{"s116s161", __M2N_s116s161},
	{"s116s174", __M2N_s116s174},
	{"s116s313s116", __M2N_s116s313s116},
	{"s116u", __M2N_s116u},
	{"s116u1", __M2N_s116u1},
	{"s116u4", __M2N_s116u4},
	{"s116ui4", __M2N_s116ui4},
	{"s116us148", __M2N_s116us148},
	{"s116us148i4", __M2N_s116us148i4},
	{"s117i4s157", __M2N_s117i4s157},
	{"s117r4s141", __M2N_s117r4s141},
	{"s117r8s129", __M2N_s117r8s129},
	{"s117s117", __M2N_s117s117},
	{"s117s117s117", __M2N_s117s117s117},
	{"s117s117u1", __M2N_s117s117u1},
	{"s117s120s120", __M2N_s117s120s120},
	{"s117s129r8", __M2N_s117s129r8},
	{"s117s129s129", __M2N_s117s129s129},
	{"s117s141r4", __M2N_s117s141r4},
	{"s117s141s141", __M2N_s117s141s141},
	{"s117s157i4", __M2N_s117s157i4},
	{"s117s157s157", __M2N_s117s157s157},
	{"s117s170s170", __M2N_s117s170s170},
	{"s117s170u4", __M2N_s117s170u4},
	{"s117u1", __M2N_s117u1},
	{"s117u1s117", __M2N_s117u1s117},
	{"s117u1u1u1u1", __M2N_s117u1u1u1u1},
	{"s117u4s170", __M2N_s117u4s170},
	{"s118i4s158", __M2N_s118i4s158},
	{"s118r4s142", __M2N_s118r4s142},
	{"s118r8s130", __M2N_s118r8s130},
	{"s118s118", __M2N_s118s118},
	{"s118s118s118", __M2N_s118s118s118},
	{"s118s118u1", __M2N_s118s118u1},
	{"s118s120s120s120", __M2N_s118s120s120s120},
	{"s118s121", __M2N_s118s121},
	{"s118s130r8", __M2N_s118s130r8},
	{"s118s130s130", __M2N_s118s130s130},
	{"s118s142r4", __M2N_s118s142r4},
	{"s118s142s142", __M2N_s118s142s142},
	{"s118s158i4", __M2N_s118s158i4},
	{"s118s158s158", __M2N_s118s158s158},
	{"s118s171s171", __M2N_s118s171s171},
	{"s118s171u4", __M2N_s118s171u4},
	{"s118u1", __M2N_s118u1},
	{"s118u1s118", __M2N_s118u1s118},
	{"s118u1u1u1u1u1u1", __M2N_s118u1u1u1u1u1u1},
	{"s118u4s171", __M2N_s118u4s171},
	{"s119i4s159", __M2N_s119i4s159},
	{"s119r4s143", __M2N_s119r4s143},
	{"s119r8s131", __M2N_s119r8s131},
	{"s119s119", __M2N_s119s119},
	{"s119s119s119", __M2N_s119s119s119},
	{"s119s119u1", __M2N_s119s119u1},
	{"s119s120s120s120s120", __M2N_s119s120s120s120s120},
	{"s119s125", __M2N_s119s125},
	{"s119s131r8", __M2N_s119s131r8},
	{"s119s131s131", __M2N_s119s131s131},
	{"s119s143r4", __M2N_s119s143r4},
	{"s119s143s143", __M2N_s119s143s143},
	{"s119s159i4", __M2N_s119s159i4},
	{"s119s159s159", __M2N_s119s159s159},
	{"s119s172s172", __M2N_s119s172s172},
	{"s119s172u4", __M2N_s119s172u4},
	{"s119u1", __M2N_s119u1},
	{"s119u1s119", __M2N_s119u1s119},
	{"s119u1u1u1u1u1u1u1u1", __M2N_s119u1u1u1u1u1u1u1u1},
	{"s119u4s172", __M2N_s119u4s172},
	{"s11u", __M2N_s11u},
	{"s120i4s38", __M2N_s120i4s38},
	{"s120r4s144", __M2N_s120r4s144},
	{"s120r8s132", __M2N_s120r8s132},
	{"s120s120", __M2N_s120s120},
	{"s120s120s120", __M2N_s120s120s120},
	{"s120s120s120u1u1", __M2N_s120s120s120u1u1},
	{"s120s120u1", __M2N_s120s120u1},
	{"s120s124s124u1u1", __M2N_s120s124s124u1u1},
	{"s120s128s128u1u1", __M2N_s120s128s128u1u1},
	{"s120s132", __M2N_s120s132},
	{"s120s132r8", __M2N_s120s132r8},
	{"s120s132s132", __M2N_s120s132s132},
	{"s120s144", __M2N_s120s144},
	{"s120s144r4", __M2N_s120s144r4},
	{"s120s144s144", __M2N_s120s144s144},
	{"s120s153s153", __M2N_s120s153s153},
	{"s120s153s156", __M2N_s120s153s156},
	{"s120s156s153", __M2N_s120s156s153},
	{"s120s173", __M2N_s120s173},
	{"s120s173s173", __M2N_s120s173s173},
	{"s120s173u4", __M2N_s120s173u4},
	{"s120s38", __M2N_s120s38},
	{"s120s38i4", __M2N_s120s38i4},
	{"s120s38s38", __M2N_s120s38s38},
	{"s120u", __M2N_s120u},
	{"s120u1", __M2N_s120u1},
	{"s120u1s120", __M2N_s120u1s120},
	{"s120u1u1", __M2N_s120u1u1},
	{"s120u4s173", __M2N_s120u4s173},
	{"s121i4s161", __M2N_s121i4s161},
	{"s121r4s116", __M2N_s121r4s116},
	{"s121r8s133", __M2N_s121r8s133},
	{"s121s116r4", __M2N_s121s116r4},
	{"s121s116s116", __M2N_s121s116s116},
	{"s121s118", __M2N_s121s118},
	{"s121s121", __M2N_s121s121},
	{"s121s121s121", __M2N_s121s121s121},
	{"s121s121u1", __M2N_s121s121u1},
	{"s121s124s124", __M2N_s121s124s124},
	{"s121s133r8", __M2N_s121s133r8},
	{"s121s133s133", __M2N_s121s133s133},
	{"s121s161i4", __M2N_s121s161i4},
	{"s121s161s161", __M2N_s121s161s161},
	{"s121s174s174", __M2N_s121s174s174},
	{"s121s174u4", __M2N_s121s174u4},
	{"s121u1", __M2N_s121u1},
	{"s121u1s121", __M2N_s121u1s121},
	{"s121u1u1u1u1u1u1", __M2N_s121u1u1u1u1u1u1},
	{"s121u4s174", __M2N_s121u4s174},
	{"s122i4s162", __M2N_s122i4s162},
	{"s122r4s146", __M2N_s122r4s146},
	{"s122r8s134", __M2N_s122r8s134},
	{"s122s122", __M2N_s122s122},
	{"s122s122s122", __M2N_s122s122s122},
	{"s122s122u1", __M2N_s122s122u1},
	{"s122s124s124s124", __M2N_s122s124s124s124},
	{"s122s134r8", __M2N_s122s134r8},
	{"s122s134s134", __M2N_s122s134s134},
	{"s122s146r4", __M2N_s122s146r4},
	{"s122s146s146", __M2N_s122s146s146},
	{"s122s162i4", __M2N_s122s162i4},
	{"s122s162s162", __M2N_s122s162s162},
	{"s122s175s175", __M2N_s122s175s175},
	{"s122s175u4", __M2N_s122s175u4},
	{"s122u1", __M2N_s122u1},
	{"s122u1s122", __M2N_s122u1s122},
	{"s122u1u1u1u1u1u1u1u1u1", __M2N_s122u1u1u1u1u1u1u1u1u1},
	{"s122u4s175", __M2N_s122u4s175},
	{"s123i4s163", __M2N_s123i4s163},
	{"s123r4s147", __M2N_s123r4s147},
	{"s123r8s135", __M2N_s123r8s135},
	{"s123s123", __M2N_s123s123},
	{"s123s123s123", __M2N_s123s123s123},
	{"s123s123u1", __M2N_s123s123u1},
	{"s123s124s124s124s124", __M2N_s123s124s124s124s124},
	{"s123s126", __M2N_s123s126},
	{"s123s135r8", __M2N_s123s135r8},
	{"s123s135s135", __M2N_s123s135s135},
	{"s123s147r4", __M2N_s123s147r4},
	{"s123s147s147", __M2N_s123s147s147},
	{"s123s163i4", __M2N_s123s163i4},
	{"s123s163s163", __M2N_s123s163s163},
	{"s123s176s176", __M2N_s123s176s176},
	{"s123s176u4", __M2N_s123s176u4},
	{"s123u1", __M2N_s123u1},
	{"s123u1s123", __M2N_s123u1s123},
	{"s123u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_s123u1u1u1u1u1u1u1u1u1u1u1u1},
	{"s123u4s176", __M2N_s123u4s176},
	{"s124i4s1", __M2N_s124i4s1},
	{"s124r4s148", __M2N_s124r4s148},
	{"s124r8s136", __M2N_s124r8s136},
	{"s124s1", __M2N_s124s1},
	{"s124s120s120u1u1u1", __M2N_s124s120s120u1u1u1},
	{"s124s120u1", __M2N_s124s120u1},
	{"s124s124", __M2N_s124s124},
	{"s124s124s124", __M2N_s124s124s124},
	{"s124s124s124u1u1u1", __M2N_s124s124s124u1u1u1},
	{"s124s124u1", __M2N_s124s124u1},
	{"s124s128s128u1u1u1", __M2N_s124s128s128u1u1u1},
	{"s124s136", __M2N_s124s136},
	{"s124s136r8", __M2N_s124s136r8},
	{"s124s136s136", __M2N_s124s136s136},
	{"s124s148", __M2N_s124s148},
	{"s124s148r4", __M2N_s124s148r4},
	{"s124s148s148", __M2N_s124s148s148},
	{"s124s154s154", __M2N_s124s154s154},
	{"s124s154s156", __M2N_s124s154s156},
	{"s124s156s154", __M2N_s124s156s154},
	{"s124s177", __M2N_s124s177},
	{"s124s177s177", __M2N_s124s177s177},
	{"s124s177u4", __M2N_s124s177u4},
	{"s124s1i4", __M2N_s124s1i4},
	{"s124s1s1", __M2N_s124s1s1},
	{"s124u", __M2N_s124u},
	{"s124u1", __M2N_s124u1},
	{"s124u1s120", __M2N_s124u1s120},
	{"s124u1s124", __M2N_s124u1s124},
	{"s124u1u1u1", __M2N_s124u1u1u1},
	{"s124u4s177", __M2N_s124u4s177},
	{"s125i4s165", __M2N_s125i4s165},
	{"s125r4s149", __M2N_s125r4s149},
	{"s125r8s137", __M2N_s125r8s137},
	{"s125s119", __M2N_s125s119},
	{"s125s125", __M2N_s125s125},
	{"s125s125s125", __M2N_s125s125s125},
	{"s125s125u1", __M2N_s125s125u1},
	{"s125s128s128", __M2N_s125s128s128},
	{"s125s137r8", __M2N_s125s137r8},
	{"s125s137s137", __M2N_s125s137s137},
	{"s125s149r4", __M2N_s125s149r4},
	{"s125s149s149", __M2N_s125s149s149},
	{"s125s165i4", __M2N_s125s165i4},
	{"s125s165s165", __M2N_s125s165s165},
	{"s125s178s178", __M2N_s125s178s178},
	{"s125s178u4", __M2N_s125s178u4},
	{"s125u1", __M2N_s125u1},
	{"s125u1s125", __M2N_s125u1s125},
	{"s125u1u1u1u1u1u1u1u1", __M2N_s125u1u1u1u1u1u1u1u1},
	{"s125u4s178", __M2N_s125u4s178},
	{"s126i4s166", __M2N_s126i4s166},
	{"s126r4s150", __M2N_s126r4s150},
	{"s126r8s138", __M2N_s126r8s138},
	{"s126s123", __M2N_s126s123},
	{"s126s126", __M2N_s126s126},
	{"s126s126s126", __M2N_s126s126s126},
	{"s126s126u1", __M2N_s126s126u1},
	{"s126s128s128s128", __M2N_s126s128s128s128},
	{"s126s138r8", __M2N_s126s138r8},
	{"s126s138s138", __M2N_s126s138s138},
	{"s126s150r4", __M2N_s126s150r4},
	{"s126s150s150", __M2N_s126s150s150},
	{"s126s166i4", __M2N_s126s166i4},
	{"s126s166s166", __M2N_s126s166s166},
	{"s126s179s179", __M2N_s126s179s179},
	{"s126s179u4", __M2N_s126s179u4},
	{"s126u1", __M2N_s126u1},
	{"s126u1s126", __M2N_s126u1s126},
	{"s126u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_s126u1u1u1u1u1u1u1u1u1u1u1u1},
	{"s126u4s179", __M2N_s126u4s179},
	{"s127i4s167", __M2N_s127i4s167},
	{"s127r4s151", __M2N_s127r4s151},
	{"s127r8s139", __M2N_s127r8s139},
	{"s127s127", __M2N_s127s127},
	{"s127s127s127", __M2N_s127s127s127},
	{"s127s127u1", __M2N_s127s127u1},
	{"s127s128s128s128s128", __M2N_s127s128s128s128s128},
	{"s127s139r8", __M2N_s127s139r8},
	{"s127s139s139", __M2N_s127s139s139},
	{"s127s151r4", __M2N_s127s151r4},
	{"s127s151s151", __M2N_s127s151s151},
	{"s127s167i4", __M2N_s127s167i4},
	{"s127s167s167", __M2N_s127s167s167},
	{"s127s180s180", __M2N_s127s180s180},
	{"s127s180u4", __M2N_s127s180u4},
	{"s127u1", __M2N_s127u1},
	{"s127u1s127", __M2N_s127u1s127},
	{"s127u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_s127u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1},
	{"s127u4s180", __M2N_s127u4s180},
	{"s128i4s39", __M2N_s128i4s39},
	{"s128r4s152", __M2N_s128r4s152},
	{"s128r8s140", __M2N_s128r8s140},
	{"s128s120s120", __M2N_s128s120s120},
	{"s128s120s120u1u1u1u1", __M2N_s128s120s120u1u1u1u1},
	{"s128s120u1u1", __M2N_s128s120u1u1},
	{"s128s124s124u1u1u1u1", __M2N_s128s124s124u1u1u1u1},
	{"s128s124u1", __M2N_s128s124u1},
	{"s128s128", __M2N_s128s128},
	{"s128s128s128", __M2N_s128s128s128},
	{"s128s128s128u1u1u1u1", __M2N_s128s128s128u1u1u1u1},
	{"s128s128u1", __M2N_s128s128u1},
	{"s128s140", __M2N_s128s140},
	{"s128s140r8", __M2N_s128s140r8},
	{"s128s140s140", __M2N_s128s140s140},
	{"s128s152", __M2N_s128s152},
	{"s128s152r4", __M2N_s128s152r4},
	{"s128s152s152", __M2N_s128s152s152},
	{"s128s155s155", __M2N_s128s155s155},
	{"s128s155s156", __M2N_s128s155s156},
	{"s128s156s155", __M2N_s128s156s155},
	{"s128s181", __M2N_s128s181},
	{"s128s181s181", __M2N_s128s181s181},
	{"s128s181u4", __M2N_s128s181u4},
	{"s128s39", __M2N_s128s39},
	{"s128s39i4", __M2N_s128s39i4},
	{"s128s39s39", __M2N_s128s39s39},
	{"s128u", __M2N_s128u},
	{"s128u1", __M2N_s128u1},
	{"s128u1s120u1", __M2N_s128u1s120u1},
	{"s128u1s124", __M2N_s128u1s124},
	{"s128u1s128", __M2N_s128u1s128},
	{"s128u1u1s120", __M2N_s128u1u1s120},
	{"s128u1u1u1u1", __M2N_s128u1u1u1u1},
	{"s128u4s181", __M2N_s128u4s181},
	{"s129i4", __M2N_s129i4},
	{"s129r4", __M2N_s129r4},
	{"s129r8", __M2N_s129r8},
	{"s129r8r8r8r8", __M2N_s129r8r8r8r8},
	{"s129r8s129", __M2N_s129r8s129},
	{"s129s117", __M2N_s129s117},
	{"s129s129", __M2N_s129s129},
	{"s129s129r8", __M2N_s129s129r8},
	{"s129s129s129", __M2N_s129s129s129},
	{"s129s130s133", __M2N_s129s130s133},
	{"s129s131s137", __M2N_s129s131s137},
	{"s129s132s132", __M2N_s129s132s132},
	{"s129s141", __M2N_s129s141},
	{"s129s157", __M2N_s129s157},
	{"s129s170", __M2N_s129s170},
	{"s129u1", __M2N_s129u1},
	{"s129u4", __M2N_s129u4},
	{"s12u", __M2N_s12u},
	{"s130i4", __M2N_s130i4},
	{"s130r4", __M2N_s130r4},
	{"s130r8", __M2N_s130r8},
	{"s130r8r8r8r8r8r8", __M2N_s130r8r8r8r8r8r8},
	{"s130r8s130", __M2N_s130r8s130},
	{"s130s118", __M2N_s130s118},
	{"s130s129s130", __M2N_s130s129s130},
	{"s130s130", __M2N_s130s130},
	{"s130s130r8", __M2N_s130s130r8},
	{"s130s130s130", __M2N_s130s130s130},
	{"s130s130s134", __M2N_s130s130s134},
	{"s130s131s138", __M2N_s130s131s138},
	{"s130s132s132s132", __M2N_s130s132s132s132},
	{"s130s133", __M2N_s130s133},
	{"s130s142", __M2N_s130s142},
	{"s130s158", __M2N_s130s158},
	{"s130s171", __M2N_s130s171},
	{"s130u1", __M2N_s130u1},
	{"s130u4", __M2N_s130u4},
	{"s131i4", __M2N_s131i4},
	{"s131r4", __M2N_s131r4},
	{"s131r8", __M2N_s131r8},
	{"s131r8r8r8r8r8r8r8r8", __M2N_s131r8r8r8r8r8r8r8r8},
	{"s131r8s131", __M2N_s131r8s131},
	{"s131s119", __M2N_s131s119},
	{"s131s129s131", __M2N_s131s129s131},
	{"s131s130s135", __M2N_s131s130s135},
	{"s131s131", __M2N_s131s131},
	{"s131s131r8", __M2N_s131s131r8},
	{"s131s131s131", __M2N_s131s131s131},
	{"s131s131s139", __M2N_s131s131s139},
	{"s131s132s132s132s132", __M2N_s131s132s132s132s132},
	{"s131s137", __M2N_s131s137},
	{"s131s143", __M2N_s131s143},
	{"s131s159", __M2N_s131s159},
	{"s131s172", __M2N_s131s172},
	{"s131u1", __M2N_s131u1},
	{"s131u4", __M2N_s131u4},
	{"s132i4", __M2N_s132i4},
	{"s132r4", __M2N_s132r4},
	{"s132r8", __M2N_s132r8},
	{"s132r8r8", __M2N_s132r8r8},
	{"s132r8s132", __M2N_s132r8s132},
	{"s132s120", __M2N_s132s120},
	{"s132s129s132", __M2N_s132s129s132},
	{"s132s130s136", __M2N_s132s130s136},
	{"s132s131s140", __M2N_s132s131s140},
	{"s132s132", __M2N_s132s132},
	{"s132s132r8", __M2N_s132s132r8},
	{"s132s132s129", __M2N_s132s132s129},
	{"s132s132s132", __M2N_s132s132s132},
	{"s132s132s132r8", __M2N_s132s132s132r8},
	{"s132s132s132s120", __M2N_s132s132s132s120},
	{"s132s132s132s132", __M2N_s132s132s132s132},
	{"s132s132s132s132s132s132", __M2N_s132s132s132s132s132s132},
	{"s132s132s132u1", __M2N_s132s132s132u1},
	{"s132s132s132u1u1", __M2N_s132s132s132u1u1},
	{"s132s132u", __M2N_s132s132u},
	{"s132s136s133", __M2N_s132s136s133},
	{"s132s136s136u1u1", __M2N_s132s136s136u1u1},
	{"s132s140s137", __M2N_s132s140s137},
	{"s132s140s140u1u1", __M2N_s132s140s140u1u1},
	{"s132s144", __M2N_s132s144},
	{"s132s153", __M2N_s132s153},
	{"s132s156", __M2N_s132s156},
	{"s132s173", __M2N_s132s173},
	{"s132s38", __M2N_s132s38},
	{"s132u", __M2N_s132u},
	{"s132u1", __M2N_s132u1},
	{"s132u4", __M2N_s132u4},
	{"s132us132", __M2N_s132us132},
	{"s132us132s132", __M2N_s132us132s132},
	{"s133i4", __M2N_s133i4},
	{"s133r4", __M2N_s133r4},
	{"s133r8", __M2N_s133r8},
	{"s133r8r8r8r8r8r8", __M2N_s133r8r8r8r8r8r8},
	{"s133r8s133", __M2N_s133r8s133},
	{"s133s116", __M2N_s133s116},
	{"s133s121", __M2N_s133s121},
	{"s133s130", __M2N_s133s130},
	{"s133s133", __M2N_s133s133},
	{"s133s133r8", __M2N_s133s133r8},
	{"s133s133s129", __M2N_s133s133s129},
	{"s133s133s133", __M2N_s133s133s133},
	{"s133s134s133", __M2N_s133s134s133},
	{"s133s135s137", __M2N_s133s135s137},
	{"s133s136s136", __M2N_s133s136s136},
	{"s133s161", __M2N_s133s161},
	{"s133s174", __M2N_s133s174},
	{"s133u1", __M2N_s133u1},
	{"s133u4", __M2N_s133u4},
	{"s134i4", __M2N_s134i4},
	{"s134r4", __M2N_s134r4},
	{"s134r8", __M2N_s134r8},
	{"s134r8r8r8r8r8r8r8r8r8", __M2N_s134r8r8r8r8r8r8r8r8r8},
	{"s134r8s134", __M2N_s134r8s134},
	{"s134s122", __M2N_s134s122},
	{"s134s133s130", __M2N_s134s133s130},
	{"s134s134", __M2N_s134s134},
	{"s134s134r8", __M2N_s134s134r8},
	{"s134s134s134", __M2N_s134s134s134},
	{"s134s135s138", __M2N_s134s135s138},
	{"s134s136s136s136", __M2N_s134s136s136s136},
	{"s134s146", __M2N_s134s146},
	{"s134s162", __M2N_s134s162},
	{"s134s175", __M2N_s134s175},
	{"s134u1", __M2N_s134u1},
	{"s134u4", __M2N_s134u4},
	{"s135i4", __M2N_s135i4},
	{"s135r4", __M2N_s135r4},
	{"s135r8", __M2N_s135r8},
	{"s135r8r8r8r8r8r8r8r8r8r8r8r8", __M2N_s135r8r8r8r8r8r8r8r8r8r8r8r8},
	{"s135r8s135", __M2N_s135r8s135},
	{"s135s123", __M2N_s135s123},
	{"s135s133s131", __M2N_s135s133s131},
	{"s135s134s135", __M2N_s135s134s135},
	{"s135s135", __M2N_s135s135},
	{"s135s135r8", __M2N_s135s135r8},
	{"s135s135s135", __M2N_s135s135s135},
	{"s135s135s139", __M2N_s135s135s139},
	{"s135s136s136s136s136", __M2N_s135s136s136s136s136},
	{"s135s138", __M2N_s135s138},
	{"s135s147", __M2N_s135s147},
	{"s135s163", __M2N_s135s163},
	{"s135s176", __M2N_s135s176},
	{"s135u1", __M2N_s135u1},
	{"s135u4", __M2N_s135u4},
	{"s136i4", __M2N_s136i4},
	{"s136r4", __M2N_s136r4},
	{"s136r8", __M2N_s136r8},
	{"s136r8r8r8", __M2N_s136r8r8r8},
	{"s136r8s132", __M2N_s136r8s132},
	{"s136r8s136", __M2N_s136r8s136},
	{"s136s1", __M2N_s136s1},
	{"s136s124", __M2N_s136s124},
	{"s136s132r8", __M2N_s136s132r8},
	{"s136s132s130", __M2N_s136s132s130},
	{"s136s132s132u1u1u1", __M2N_s136s132s132u1u1u1},
	{"s136s133s132", __M2N_s136s133s132},
	{"s136s134s136", __M2N_s136s134s136},
	{"s136s135s140", __M2N_s136s135s140},
	{"s136s136", __M2N_s136s136},
	{"s136s136r8", __M2N_s136s136r8},
	{"s136s136s134", __M2N_s136s136s134},
	{"s136s136s136", __M2N_s136s136s136},
	{"s136s136s136r8", __M2N_s136s136s136r8},
	{"s136s136s136s124", __M2N_s136s136s136s124},
	{"s136s136s136s136", __M2N_s136s136s136s136},
	{"s136s136s136s136s136s136", __M2N_s136s136s136s136s136s136},
	{"s136s136s136u1", __M2N_s136s136s136u1},
	{"s136s136s136u1u1u1", __M2N_s136s136s136u1u1u1},
	{"s136s136u", __M2N_s136s136u},
	{"s136s139s136", __M2N_s136s139s136},
	{"s136s140s138", __M2N_s136s140s138},
	{"s136s140s140u1u1u1", __M2N_s136s140s140u1u1u1},
	{"s136s148", __M2N_s136s148},
	{"s136s154", __M2N_s136s154},
	{"s136s156", __M2N_s136s156},
	{"s136s177", __M2N_s136s177},
	{"s136u", __M2N_s136u},
	{"s136u1", __M2N_s136u1},
	{"s136u4", __M2N_s136u4},
	{"s136us136", __M2N_s136us136},
	{"s136us136s136", __M2N_s136us136s136},
	{"s137i4", __M2N_s137i4},
	{"s137r4", __M2N_s137r4},
	{"s137r8", __M2N_s137r8},
	{"s137r8r8r8r8r8r8r8r8", __M2N_s137r8r8r8r8r8r8r8r8},
	{"s137r8s137", __M2N_s137r8s137},
	{"s137s125", __M2N_s137s125},
	{"s137s131", __M2N_s137s131},
	{"s137s137", __M2N_s137s137},
	{"s137s137r8", __M2N_s137s137r8},
	{"s137s137s129", __M2N_s137s137s129},
	{"s137s137s137", __M2N_s137s137s137},
	{"s137s138s133", __M2N_s137s138s133},
	{"s137s139s137", __M2N_s137s139s137},
	{"s137s140s140", __M2N_s137s140s140},
	{"s137s149", __M2N_s137s149},
	{"s137s165", __M2N_s137s165},
	{"s137s178", __M2N_s137s178},
	{"s137u1", __M2N_s137u1},
	{"s137u4", __M2N_s137u4},
	{"s138i4", __M2N_s138i4},
	{"s138r4", __M2N_s138r4},
	{"s138r8", __M2N_s138r8},
	{"s138r8r8r8r8r8r8r8r8r8r8r8r8", __M2N_s138r8r8r8r8r8r8r8r8r8r8r8r8},
	{"s138r8s138", __M2N_s138r8s138},
	{"s138s126", __M2N_s138s126},
	{"s138s135", __M2N_s138s135},
	{"s138s137s130", __M2N_s138s137s130},
	{"s138s138", __M2N_s138s138},
	{"s138s138r8", __M2N_s138s138r8},
	{"s138s138s134", __M2N_s138s138s134},
	{"s138s138s138", __M2N_s138s138s138},
	{"s138s139s138", __M2N_s138s139s138},
	{"s138s140s140s140", __M2N_s138s140s140s140},
	{"s138s150", __M2N_s138s150},
	{"s138s166", __M2N_s138s166},
	{"s138s179", __M2N_s138s179},
	{"s138u1", __M2N_s138u1},
	{"s138u4", __M2N_s138u4},
	{"s139i4", __M2N_s139i4},
	{"s139r4", __M2N_s139r4},
	{"s139r8", __M2N_s139r8},
	{"s139r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8", __M2N_s139r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8},
	{"s139r8s139", __M2N_s139r8s139},
	{"s139s127", __M2N_s139s127},
	{"s139s137s131", __M2N_s139s137s131},
	{"s139s138s135", __M2N_s139s138s135},
	{"s139s139", __M2N_s139s139},
	{"s139s139r8", __M2N_s139s139r8},
	{"s139s139s139", __M2N_s139s139s139},
	{"s139s140s140s140s140", __M2N_s139s140s140s140s140},
	{"s139s151", __M2N_s139s151},
	{"s139s167", __M2N_s139s167},
	{"s139s180", __M2N_s139s180},
	{"s139u1", __M2N_s139u1},
	{"s139u4", __M2N_s139u4},
	{"s13u", __M2N_s13u},
	{"s140i4", __M2N_s140i4},
	{"s140r4", __M2N_s140r4},
	{"s140r8", __M2N_s140r8},
	{"s140r8r8r8r8", __M2N_s140r8r8r8r8},
	{"s140r8r8s132", __M2N_s140r8r8s132},
	{"s140r8s132r8", __M2N_s140r8s132r8},
	{"s140r8s136", __M2N_s140r8s136},
	{"s140r8s140", __M2N_s140r8s140},
	{"s140s128", __M2N_s140s128},
	{"s140s132r8r8", __M2N_s140s132r8r8},
	{"s140s132s131", __M2N_s140s132s131},
	{"s140s132s132", __M2N_s140s132s132},
	{"s140s132s132u1u1u1u1", __M2N_s140s132s132u1u1u1u1},
	{"s140s136r8", __M2N_s140s136r8},
	{"s140s136s135", __M2N_s140s136s135},
	{"s140s136s136u1u1u1u1", __M2N_s140s136s136u1u1u1u1},
	{"s140s137s132", __M2N_s140s137s132},
	{"s140s138s136", __M2N_s140s138s136},
	{"s140s139s140", __M2N_s140s139s140},
	{"s140s140", __M2N_s140s140},
	{"s140s140r8", __M2N_s140s140r8},
	{"s140s140s139", __M2N_s140s140s139},
	{"s140s140s140", __M2N_s140s140s140},
	{"s140s140s140r8", __M2N_s140s140s140r8},
	{"s140s140s140s128", __M2N_s140s140s140s128},
	{"s140s140s140s140", __M2N_s140s140s140s140},
	{"s140s140s140s140s140s140", __M2N_s140s140s140s140s140s140},
	{"s140s140s140u1", __M2N_s140s140s140u1},
	{"s140s140s140u1u1u1u1", __M2N_s140s140s140u1u1u1u1},
	{"s140s140u", __M2N_s140s140u},
	{"s140s152", __M2N_s140s152},
	{"s140s155", __M2N_s140s155},
	{"s140s156", __M2N_s140s156},
	{"s140s181", __M2N_s140s181},
	{"s140s39", __M2N_s140s39},
	{"s140u", __M2N_s140u},
	{"s140u1", __M2N_s140u1},
	{"s140u4", __M2N_s140u4},
	{"s140us140", __M2N_s140us140},
	{"s140us140s140", __M2N_s140us140s140},
	{"s141i4", __M2N_s141i4},
	{"s141r4", __M2N_s141r4},
	{"s141r4r4", __M2N_s141r4r4},
	{"s141r4r4r4r4", __M2N_s141r4r4r4r4},
	{"s141r4s141", __M2N_s141r4s141},
	{"s141r8", __M2N_s141r8},
	{"s141s117", __M2N_s141s117},
	{"s141s129", __M2N_s141s129},
	{"s141s141", __M2N_s141s141},
	{"s141s141r4", __M2N_s141s141r4},
	{"s141s141s141", __M2N_s141s141s141},
	{"s141s142s116", __M2N_s141s142s116},
	{"s141s143s149", __M2N_s141s143s149},
	{"s141s144", __M2N_s141s144},
	{"s141s144s144", __M2N_s141s144s144},
	{"s141s157", __M2N_s141s157},
	{"s141s170", __M2N_s141s170},
	{"s141u1", __M2N_s141u1},
	{"s141u4", __M2N_s141u4},
	{"s142i4", __M2N_s142i4},
	{"s142r4", __M2N_s142r4},
	{"s142r4r4r4r4r4r4", __M2N_s142r4r4r4r4r4r4},
	{"s142r4s142", __M2N_s142r4s142},
	{"s142r8", __M2N_s142r8},
	{"s142s116", __M2N_s142s116},
	{"s142s118", __M2N_s142s118},
	{"s142s130", __M2N_s142s130},
	{"s142s141s142", __M2N_s142s141s142},
	{"s142s142", __M2N_s142s142},
	{"s142s142r4", __M2N_s142s142r4},
	{"s142s142s142", __M2N_s142s142s142},
	{"s142s142s146", __M2N_s142s142s146},
	{"s142s143s150", __M2N_s142s143s150},
	{"s142s144s144s144", __M2N_s142s144s144s144},
	{"s142s158", __M2N_s142s158},
	{"s142s171", __M2N_s142s171},
	{"s142u1", __M2N_s142u1},
	{"s142u4", __M2N_s142u4},
	{"s143i4", __M2N_s143i4},
	{"s143r4", __M2N_s143r4},
	{"s143r4r4r4r4r4r4r4r4", __M2N_s143r4r4r4r4r4r4r4r4},
	{"s143r4s143", __M2N_s143r4s143},
	{"s143r8", __M2N_s143r8},
	{"s143s119", __M2N_s143s119},
	{"s143s131", __M2N_s143s131},
	{"s143s141s143", __M2N_s143s141s143},
	{"s143s142s147", __M2N_s143s142s147},
	{"s143s143", __M2N_s143s143},
	{"s143s143r4", __M2N_s143s143r4},
	{"s143s143s143", __M2N_s143s143s143},
	{"s143s143s151", __M2N_s143s143s151},
	{"s143s144s144s144s144", __M2N_s143s144s144s144s144},
	{"s143s149", __M2N_s143s149},
	{"s143s159", __M2N_s143s159},
	{"s143s172", __M2N_s143s172},
	{"s143u1", __M2N_s143u1},
	{"s143u4", __M2N_s143u4},
	{"s144", __M2N_s144},
	{"s144i4", __M2N_s144i4},
	{"s144r4", __M2N_s144r4},
	{"s144r4r4", __M2N_s144r4r4},
	{"s144r4s144", __M2N_s144r4s144},
	{"s144r8", __M2N_s144r8},
	{"s144s120", __M2N_s144s120},
	{"s144s132", __M2N_s144s132},
	{"s144s141s144", __M2N_s144s141s144},
	{"s144s142s148", __M2N_s144s142s148},
	{"s144s143s152", __M2N_s144s143s152},
	{"s144s144", __M2N_s144s144},
	{"s144s144r4", __M2N_s144s144r4},
	{"s144s144s141", __M2N_s144s144s141},
	{"s144s144s144", __M2N_s144s144s144},
	{"s144s144s144r4", __M2N_s144s144s144r4},
	{"s144s144s144s120", __M2N_s144s144s144s120},
	{"s144s144s144s144", __M2N_s144s144s144s144},
	{"s144s144s144s144s144s144", __M2N_s144s144s144s144s144s144},
	{"s144s144s144u1", __M2N_s144s144s144u1},
	{"s144s144s144u1u1", __M2N_s144s144s144u1u1},
	{"s144s144u", __M2N_s144s144u},
	{"s144s144u1u1uuuu", __M2N_s144s144u1u1uuuu},
	{"s144s148", __M2N_s144s148},
	{"s144s148s116", __M2N_s144s148s116},
	{"s144s148s148u1u1", __M2N_s144s148s148u1u1},
	{"s144s152s149", __M2N_s144s152s149},
	{"s144s152s152u1u1", __M2N_s144s152s152u1u1},
	{"s144s153", __M2N_s144s153},
	{"s144s156", __M2N_s144s156},
	{"s144s173", __M2N_s144s173},
	{"s144s38", __M2N_s144s38},
	{"s144u", __M2N_s144u},
	{"s144u1", __M2N_s144u1},
	{"s144u4", __M2N_s144u4},
	{"s144ui4", __M2N_s144ui4},
	{"s144ui4i4", __M2N_s144ui4i4},
	{"s144ur4i4r4i4", __M2N_s144ur4i4r4i4},
	{"s144us144", __M2N_s144us144},
	{"s144us144s144", __M2N_s144us144s144},
	{"s144uu", __M2N_s144uu},
	{"s144uur4i4r4i4", __M2N_s144uur4i4r4i4},
	{"s146i4", __M2N_s146i4},
	{"s146r4", __M2N_s146r4},
	{"s146r4r4r4", __M2N_s146r4r4r4},
	{"s146r4r4r4r4r4r4r4r4r4", __M2N_s146r4r4r4r4r4r4r4r4r4},
	{"s146r4r4r4u1", __M2N_s146r4r4r4u1},
	{"s146r4s146", __M2N_s146r4s146},
	{"s146r8", __M2N_s146r8},
	{"s146s116s142", __M2N_s146s116s142},
	{"s146s122", __M2N_s146s122},
	{"s146s134", __M2N_s146s134},
	{"s146s146", __M2N_s146s146},
	{"s146s146r4", __M2N_s146s146r4},
	{"s146s146s146", __M2N_s146s146s146},
	{"s146s147s150", __M2N_s146s147s150},
	{"s146s148", __M2N_s146s148},
	{"s146s148r4", __M2N_s146s148r4},
	{"s146s148s148", __M2N_s146s148s148},
	{"s146s148s148s148", __M2N_s146s148s148s148},
	{"s146s148u1", __M2N_s146s148u1},
	{"s146s151", __M2N_s146s151},
	{"s146s162", __M2N_s146s162},
	{"s146s169", __M2N_s146s169},
	{"s146s175", __M2N_s146s175},
	{"s146u1", __M2N_s146u1},
	{"s146u4", __M2N_s146u4},
	{"s147i4", __M2N_s147i4},
	{"s147r4", __M2N_s147r4},
	{"s147r4r4r4r4r4r4r4r4r4r4r4r4", __M2N_s147r4r4r4r4r4r4r4r4r4r4r4r4},
	{"s147r4s147", __M2N_s147r4s147},
	{"s147r8", __M2N_s147r8},
	{"s147s116s143", __M2N_s147s116s143},
	{"s147s123", __M2N_s147s123},
	{"s147s135", __M2N_s147s135},
	{"s147s146s147", __M2N_s147s146s147},
	{"s147s147", __M2N_s147s147},
	{"s147s147r4", __M2N_s147s147r4},
	{"s147s147s147", __M2N_s147s147s147},
	{"s147s147s151", __M2N_s147s147s151},
	{"s147s148s148s148s148", __M2N_s147s148s148s148s148},
	{"s147s150", __M2N_s147s150},
	{"s147s163", __M2N_s147s163},
	{"s147s176", __M2N_s147s176},
	{"s147u1", __M2N_s147u1},
	{"s147u4", __M2N_s147u4},
	{"s148", __M2N_s148},
	{"s148i4", __M2N_s148i4},
	{"s148r4", __M2N_s148r4},
	{"s148r4r4r4", __M2N_s148r4r4r4},
	{"s148r4s144", __M2N_s148r4s144},
	{"s148r4s148", __M2N_s148r4s148},
	{"s148r8", __M2N_s148r8},
	{"s148s1", __M2N_s148s1},
	{"s148s116s144", __M2N_s148s116s144},
	{"s148s124", __M2N_s148s124},
	{"s148s136", __M2N_s148s136},
	{"s148s144", __M2N_s148s144},
	{"s148s144r4", __M2N_s148s144r4},
	{"s148s144s142", __M2N_s148s144s142},
	{"s148s144s144", __M2N_s148s144s144},
	{"s148s144s144r4", __M2N_s148s144s144r4},
	{"s148s144s144u1u1u1", __M2N_s148s144s144u1u1u1},
	{"s148s146s148", __M2N_s148s146s148},
	{"s148s147s152", __M2N_s148s147s152},
	{"s148s148", __M2N_s148s148},
	{"s148s148r4", __M2N_s148s148r4},
	{"s148s148s146", __M2N_s148s148s146},
	{"s148s148s148", __M2N_s148s148s148},
	{"s148s148s148r4", __M2N_s148s148s148r4},
	{"s148s148s148s124", __M2N_s148s148s148s124},
	{"s148s148s148s148", __M2N_s148s148s148s148},
	{"s148s148s148s148s148s148", __M2N_s148s148s148s148s148s148},
	{"s148s148s148u1", __M2N_s148s148s148u1},
	{"s148s148s148u1u1u1", __M2N_s148s148s148u1u1u1},
	{"s148s148u", __M2N_s148s148u},
	{"s148s151s148", __M2N_s148s151s148},
	{"s148s152s150", __M2N_s148s152s150},
	{"s148s152s152u1u1u1", __M2N_s148s152s152u1u1u1},
	{"s148s154", __M2N_s148s154},
	{"s148s156", __M2N_s148s156},
	{"s148s169", __M2N_s148s169},
	{"s148s169s148", __M2N_s148s169s148},
	{"s148s177", __M2N_s148s177},
	{"s148s313s148", __M2N_s148s313s148},
	{"s148u", __M2N_s148u},
	{"s148u1", __M2N_s148u1},
	{"s148u4", __M2N_s148u4},
	{"s148ui4", __M2N_s148ui4},
	{"s148ui4i4", __M2N_s148ui4i4},
	{"s148us148", __M2N_s148us148},
	{"s148us148s148", __M2N_s148us148s148},
	{"s149i4", __M2N_s149i4},
	{"s149r4", __M2N_s149r4},
	{"s149r4r4r4r4r4r4r4r4", __M2N_s149r4r4r4r4r4r4r4r4},
	{"s149r4s149", __M2N_s149r4s149},
	{"s149r8", __M2N_s149r8},
	{"s149s125", __M2N_s149s125},
	{"s149s137", __M2N_s149s137},
	{"s149s143", __M2N_s149s143},
	{"s149s149", __M2N_s149s149},
	{"s149s149r4", __M2N_s149s149r4},
	{"s149s149s141", __M2N_s149s149s141},
	{"s149s149s149", __M2N_s149s149s149},
	{"s149s150s116", __M2N_s149s150s116},
	{"s149s151s149", __M2N_s149s151s149},
	{"s149s152s152", __M2N_s149s152s152},
	{"s149s165", __M2N_s149s165},
	{"s149s178", __M2N_s149s178},
	{"s149u1", __M2N_s149u1},
	{"s149u4", __M2N_s149u4},
	{"s150i4", __M2N_s150i4},
	{"s150r4", __M2N_s150r4},
	{"s150r4r4r4r4r4r4r4r4r4r4r4r4", __M2N_s150r4r4r4r4r4r4r4r4r4r4r4r4},
	{"s150r4s150", __M2N_s150r4s150},
	{"s150r8", __M2N_s150r8},
	{"s150s126", __M2N_s150s126},
	{"s150s138", __M2N_s150s138},
	{"s150s147", __M2N_s150s147},
	{"s150s149s142", __M2N_s150s149s142},
	{"s150s150", __M2N_s150s150},
	{"s150s150r4", __M2N_s150s150r4},
	{"s150s150s146", __M2N_s150s150s146},
	{"s150s150s150", __M2N_s150s150s150},
	{"s150s151s150", __M2N_s150s151s150},
	{"s150s152s152s152", __M2N_s150s152s152s152},
	{"s150s166", __M2N_s150s166},
	{"s150s179", __M2N_s150s179},
	{"s150u1", __M2N_s150u1},
	{"s150u4", __M2N_s150u4},
	{"s151i4", __M2N_s151i4},
	{"s151r4", __M2N_s151r4},
	{"s151r4r4r4", __M2N_s151r4r4r4},
	{"s151r4r4r4r4", __M2N_s151r4r4r4r4},
	{"s151r4r4r4r4r4r4", __M2N_s151r4r4r4r4r4r4},
	{"s151r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4", __M2N_s151r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4},
	{"s151r4r4r4u1", __M2N_s151r4r4r4u1},
	{"s151r4s151", __M2N_s151r4s151},
	{"s151r8", __M2N_s151r8},
	{"s151s127", __M2N_s151s127},
	{"s151s139", __M2N_s151s139},
	{"s151s146s148", __M2N_s151s146s148},
	{"s151s148", __M2N_s151s148},
	{"s151s148r4", __M2N_s151s148r4},
	{"s151s148s148s148", __M2N_s151s148s148s148},
	{"s151s148s169s148", __M2N_s151s148s169s148},
	{"s151s148u1", __M2N_s151s148u1},
	{"s151s149s143", __M2N_s151s149s143},
	{"s151s150s147", __M2N_s151s150s147},
	{"s151s151", __M2N_s151s151},
	{"s151s151r4", __M2N_s151s151r4},
	{"s151s151s151", __M2N_s151s151s151},
	{"s151s152s152s152s152", __M2N_s151s152s152s152s152},
	{"s151s167", __M2N_s151s167},
	{"s151s169s148", __M2N_s151s169s148},
	{"s151s180", __M2N_s151s180},
	{"s151s202", __M2N_s151s202},
	{"s151s313", __M2N_s151s313},
	{"s151u", __M2N_s151u},
	{"s151u1", __M2N_s151u1},
	{"s151u4", __M2N_s151u4},
	{"s151ui4", __M2N_s151ui4},
	{"s151ui4i4", __M2N_s151ui4i4},
	{"s152", __M2N_s152},
	{"s152i4", __M2N_s152i4},
	{"s152i4s152uuu", __M2N_s152i4s152uuu},
	{"s152r4", __M2N_s152r4},
	{"s152r4r4r4r4", __M2N_s152r4r4r4r4},
	{"s152r4r4s144", __M2N_s152r4r4s144},
	{"s152r4r4uu", __M2N_s152r4r4uu},
	{"s152r4s144r4", __M2N_s152r4s144r4},
	{"s152r4s148", __M2N_s152r4s148},
	{"s152r4s152", __M2N_s152r4s152},
	{"s152r8", __M2N_s152r8},
	{"s152s128", __M2N_s152s128},
	{"s152s140", __M2N_s152s140},
	{"s152s144r4r4", __M2N_s152s144r4r4},
	{"s152s144s143", __M2N_s152s144s143},
	{"s152s144s144", __M2N_s152s144s144},
	{"s152s144s144u1u1u1u1", __M2N_s152s144s144u1u1u1u1},
	{"s152s148r4", __M2N_s152s148r4},
	{"s152s148s147", __M2N_s152s148s147},
	{"s152s148s148", __M2N_s152s148s148},
	{"s152s148s148u1u1u1u1", __M2N_s152s148s148u1u1u1u1},
	{"s152s149s144", __M2N_s152s149s144},
	{"s152s150s148", __M2N_s152s150s148},
	{"s152s151s152", __M2N_s152s151s152},
	{"s152s152", __M2N_s152s152},
	{"s152s152r4", __M2N_s152s152r4},
	{"s152s152s151", __M2N_s152s152s151},
	{"s152s152s152", __M2N_s152s152s152},
	{"s152s152s152r4", __M2N_s152s152s152r4},
	{"s152s152s152s128", __M2N_s152s152s152s128},
	{"s152s152s152s152", __M2N_s152s152s152s152},
	{"s152s152s152s152s152s152", __M2N_s152s152s152s152s152s152},
	{"s152s152s152u1", __M2N_s152s152s152u1},
	{"s152s152s152u1u1u1u1", __M2N_s152s152s152u1u1u1u1},
	{"s152s152u", __M2N_s152s152u},
	{"s152s152uu", __M2N_s152s152uu},
	{"s152s155", __M2N_s152s155},
	{"s152s156", __M2N_s152s156},
	{"s152s169", __M2N_s152s169},
	{"s152s181", __M2N_s152s181},
	{"s152s313s152", __M2N_s152s313s152},
	{"s152s39", __M2N_s152s39},
	{"s152u", __M2N_s152u},
	{"s152u1", __M2N_s152u1},
	{"s152u4", __M2N_s152u4},
	{"s152ui4", __M2N_s152ui4},
	{"s152ui4i4", __M2N_s152ui4i4},
	{"s152ui4uu", __M2N_s152ui4uu},
	{"s152us152", __M2N_s152us152},
	{"s152us152s152", __M2N_s152us152s152},
	{"s152uuu", __M2N_s152uuu},
	{"s153r4", __M2N_s153r4},
	{"s153r8", __M2N_s153r8},
	{"s153s132", __M2N_s153s132},
	{"s153s144", __M2N_s153s144},
	{"s153s153", __M2N_s153s153},
	{"s153s156", __M2N_s153s156},
	{"s153s156s156", __M2N_s153s156s156},
	{"s153u", __M2N_s153u},
	{"s154r4", __M2N_s154r4},
	{"s154r8", __M2N_s154r8},
	{"s154s136", __M2N_s154s136},
	{"s154s148", __M2N_s154s148},
	{"s154s153s156", __M2N_s154s153s156},
	{"s154s154", __M2N_s154s154},
	{"s154s156", __M2N_s154s156},
	{"s154s156s153", __M2N_s154s156s153},
	{"s154s156s156s156", __M2N_s154s156s156s156},
	{"s154u", __M2N_s154u},
	{"s155r4", __M2N_s155r4},
	{"s155r8", __M2N_s155r8},
	{"s155s140", __M2N_s155s140},
	{"s155s152", __M2N_s155s152},
	{"s155s153s153", __M2N_s155s153s153},
	{"s155s153s156s156", __M2N_s155s153s156s156},
	{"s155s154s156", __M2N_s155s154s156},
	{"s155s155", __M2N_s155s155},
	{"s155s156", __M2N_s155s156},
	{"s155s156s153s156", __M2N_s155s156s153s156},
	{"s155s156s154", __M2N_s155s156s154},
	{"s155s156s156s153", __M2N_s155s156s156s153},
	{"s155s156s156s156s156", __M2N_s155s156s156s156s156},
	{"s155u", __M2N_s155u},
	{"s156", __M2N_s156},
	{"s156r4", __M2N_s156r4},
	{"s156r8", __M2N_s156r8},
	{"s156s156", __M2N_s156s156},
	{"s156ui4", __M2N_s156ui4},
	{"s157i4", __M2N_s157i4},
	{"s157i4i4i4i4", __M2N_s157i4i4i4i4},
	{"s157i4s157", __M2N_s157i4s157},
	{"s157r4", __M2N_s157r4},
	{"s157r8", __M2N_s157r8},
	{"s157s117", __M2N_s157s117},
	{"s157s129", __M2N_s157s129},
	{"s157s141", __M2N_s157s141},
	{"s157s157", __M2N_s157s157},
	{"s157s157i4", __M2N_s157s157i4},
	{"s157s157s157", __M2N_s157s157s157},
	{"s157s158s161", __M2N_s157s158s161},
	{"s157s159s165", __M2N_s157s159s165},
	{"s157s170", __M2N_s157s170},
	{"s157s38s38", __M2N_s157s38s38},
	{"s157u1", __M2N_s157u1},
	{"s157u4", __M2N_s157u4},
	{"s158i4", __M2N_s158i4},
	{"s158i4i4i4i4i4i4", __M2N_s158i4i4i4i4i4i4},
	{"s158i4s158", __M2N_s158i4s158},
	{"s158r4", __M2N_s158r4},
	{"s158r8", __M2N_s158r8},
	{"s158s118", __M2N_s158s118},
	{"s158s130", __M2N_s158s130},
	{"s158s142", __M2N_s158s142},
	{"s158s157s158", __M2N_s158s157s158},
	{"s158s158", __M2N_s158s158},
	{"s158s158i4", __M2N_s158s158i4},
	{"s158s158s158", __M2N_s158s158s158},
	{"s158s158s162", __M2N_s158s158s162},
	{"s158s159s166", __M2N_s158s159s166},
	{"s158s161", __M2N_s158s161},
	{"s158s171", __M2N_s158s171},
	{"s158s38s38s38", __M2N_s158s38s38s38},
	{"s158u1", __M2N_s158u1},
	{"s158u4", __M2N_s158u4},
	{"s159i4", __M2N_s159i4},
	{"s159i4i4i4i4i4i4i4i4", __M2N_s159i4i4i4i4i4i4i4i4},
	{"s159i4s159", __M2N_s159i4s159},
	{"s159r4", __M2N_s159r4},
	{"s159r8", __M2N_s159r8},
	{"s159s119", __M2N_s159s119},
	{"s159s131", __M2N_s159s131},
	{"s159s143", __M2N_s159s143},
	{"s159s157s159", __M2N_s159s157s159},
	{"s159s158s163", __M2N_s159s158s163},
	{"s159s159", __M2N_s159s159},
	{"s159s159i4", __M2N_s159s159i4},
	{"s159s159s159", __M2N_s159s159s159},
	{"s159s159s167", __M2N_s159s159s167},
	{"s159s165", __M2N_s159s165},
	{"s159s172", __M2N_s159s172},
	{"s159s38s38s38s38", __M2N_s159s38s38s38s38},
	{"s159u1", __M2N_s159u1},
	{"s159u4", __M2N_s159u4},
	{"s15u", __M2N_s15u},
	{"s161i4", __M2N_s161i4},
	{"s161i4i4i4i4i4i4", __M2N_s161i4i4i4i4i4i4},
	{"s161i4s161", __M2N_s161i4s161},
	{"s161r4", __M2N_s161r4},
	{"s161r8", __M2N_s161r8},
	{"s161s116", __M2N_s161s116},
	{"s161s121", __M2N_s161s121},
	{"s161s133", __M2N_s161s133},
	{"s161s158", __M2N_s161s158},
	{"s161s161", __M2N_s161s161},
	{"s161s161i4", __M2N_s161s161i4},
	{"s161s161s157", __M2N_s161s161s157},
	{"s161s161s161", __M2N_s161s161s161},
	{"s161s162s161", __M2N_s161s162s161},
	{"s161s163s165", __M2N_s161s163s165},
	{"s161s174", __M2N_s161s174},
	{"s161s1s1", __M2N_s161s1s1},
	{"s161u", __M2N_s161u},
	{"s161u1", __M2N_s161u1},
	{"s161u4", __M2N_s161u4},
	{"s162i4", __M2N_s162i4},
	{"s162i4i4i4i4i4i4i4i4i4", __M2N_s162i4i4i4i4i4i4i4i4i4},
	{"s162i4s162", __M2N_s162i4s162},
	{"s162r4", __M2N_s162r4},
	{"s162r8", __M2N_s162r8},
	{"s162s122", __M2N_s162s122},
	{"s162s134", __M2N_s162s134},
	{"s162s146", __M2N_s162s146},
	{"s162s161s158", __M2N_s162s161s158},
	{"s162s162", __M2N_s162s162},
	{"s162s162i4", __M2N_s162s162i4},
	{"s162s162s162", __M2N_s162s162s162},
	{"s162s163s166", __M2N_s162s163s166},
	{"s162s175", __M2N_s162s175},
	{"s162s1s1s1", __M2N_s162s1s1s1},
	{"s162u1", __M2N_s162u1},
	{"s162u4", __M2N_s162u4},
	{"s163i4", __M2N_s163i4},
	{"s163i4i4i4i4i4i4i4i4i4i4i4i4", __M2N_s163i4i4i4i4i4i4i4i4i4i4i4i4},
	{"s163i4s163", __M2N_s163i4s163},
	{"s163r4", __M2N_s163r4},
	{"s163r8", __M2N_s163r8},
	{"s163s123", __M2N_s163s123},
	{"s163s135", __M2N_s163s135},
	{"s163s147", __M2N_s163s147},
	{"s163s161s159", __M2N_s163s161s159},
	{"s163s162s163", __M2N_s163s162s163},
	{"s163s163", __M2N_s163s163},
	{"s163s163i4", __M2N_s163s163i4},
	{"s163s163s163", __M2N_s163s163s163},
	{"s163s163s167", __M2N_s163s163s167},
	{"s163s166", __M2N_s163s166},
	{"s163s176", __M2N_s163s176},
	{"s163s1s1s1s1", __M2N_s163s1s1s1s1},
	{"s163u1", __M2N_s163u1},
	{"s163u4", __M2N_s163u4},
	{"s165i4", __M2N_s165i4},
	{"s165i4i4i4i4i4i4i4i4", __M2N_s165i4i4i4i4i4i4i4i4},
	{"s165i4s165", __M2N_s165i4s165},
	{"s165r4", __M2N_s165r4},
	{"s165r8", __M2N_s165r8},
	{"s165s125", __M2N_s165s125},
	{"s165s137", __M2N_s165s137},
	{"s165s149", __M2N_s165s149},
	{"s165s159", __M2N_s165s159},
	{"s165s165", __M2N_s165s165},
	{"s165s165i4", __M2N_s165s165i4},
	{"s165s165s157", __M2N_s165s165s157},
	{"s165s165s165", __M2N_s165s165s165},
	{"s165s166s161", __M2N_s165s166s161},
	{"s165s167s165", __M2N_s165s167s165},
	{"s165s178", __M2N_s165s178},
	{"s165s39s39", __M2N_s165s39s39},
	{"s165u1", __M2N_s165u1},
	{"s165u4", __M2N_s165u4},
	{"s166i4", __M2N_s166i4},
	{"s166i4i4i4i4i4i4i4i4i4i4i4i4", __M2N_s166i4i4i4i4i4i4i4i4i4i4i4i4},
	{"s166i4s166", __M2N_s166i4s166},
	{"s166r4", __M2N_s166r4},
	{"s166r8", __M2N_s166r8},
	{"s166s126", __M2N_s166s126},
	{"s166s138", __M2N_s166s138},
	{"s166s150", __M2N_s166s150},
	{"s166s163", __M2N_s166s163},
	{"s166s165s158", __M2N_s166s165s158},
	{"s166s166", __M2N_s166s166},
	{"s166s166i4", __M2N_s166s166i4},
	{"s166s166s162", __M2N_s166s166s162},
	{"s166s166s166", __M2N_s166s166s166},
	{"s166s167s166", __M2N_s166s167s166},
	{"s166s179", __M2N_s166s179},
	{"s166s39s39s39", __M2N_s166s39s39s39},
	{"s166u1", __M2N_s166u1},
	{"s166u4", __M2N_s166u4},
	{"s167i4", __M2N_s167i4},
	{"s167i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", __M2N_s167i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4},
	{"s167i4s167", __M2N_s167i4s167},
	{"s167r4", __M2N_s167r4},
	{"s167r8", __M2N_s167r8},
	{"s167s127", __M2N_s167s127},
	{"s167s139", __M2N_s167s139},
	{"s167s151", __M2N_s167s151},
	{"s167s165s159", __M2N_s167s165s159},
	{"s167s166s163", __M2N_s167s166s163},
	{"s167s167", __M2N_s167s167},
	{"s167s167i4", __M2N_s167s167i4},
	{"s167s167s167", __M2N_s167s167s167},
	{"s167s180", __M2N_s167s180},
	{"s167s39s39s39s39", __M2N_s167s39s39s39s39},
	{"s167u1", __M2N_s167u1},
	{"s167u4", __M2N_s167u4},
	{"s169r4", __M2N_s169r4},
	{"s169r4r4r4", __M2N_s169r4r4r4},
	{"s169r4r4r4r4", __M2N_s169r4r4r4r4},
	{"s169r4r4r4u1", __M2N_s169r4r4r4u1},
	{"s169s146", __M2N_s169s146},
	{"s169s148", __M2N_s169s148},
	{"s169s148r4", __M2N_s169s148r4},
	{"s169s148s148", __M2N_s169s148s148},
	{"s169s148u1", __M2N_s169s148u1},
	{"s169s151", __M2N_s169s151},
	{"s169s152", __M2N_s169s152},
	{"s169s169", __M2N_s169s169},
	{"s169s169s169", __M2N_s169s169s169},
	{"s169s169s169r4", __M2N_s169s169s169r4},
	{"s169u", __M2N_s169u},
	{"s16u", __M2N_s16u},
	{"s16uu", __M2N_s16uu},
	{"s170i4", __M2N_s170i4},
	{"s170r4", __M2N_s170r4},
	{"s170r8", __M2N_s170r8},
	{"s170s117", __M2N_s170s117},
	{"s170s129", __M2N_s170s129},
	{"s170s141", __M2N_s170s141},
	{"s170s157", __M2N_s170s157},
	{"s170s170", __M2N_s170s170},
	{"s170s170i4", __M2N_s170s170i4},
	{"s170s170s170", __M2N_s170s170s170},
	{"s170s170u4", __M2N_s170s170u4},
	{"s170s171s174", __M2N_s170s171s174},
	{"s170s172s178", __M2N_s170s172s178},
	{"s170s173s173", __M2N_s170s173s173},
	{"s170u1", __M2N_s170u1},
	{"s170u4", __M2N_s170u4},
	{"s170u4s170", __M2N_s170u4s170},
	{"s170u4u4u4u4", __M2N_s170u4u4u4u4},
	{"s171i4", __M2N_s171i4},
	{"s171r4", __M2N_s171r4},
	{"s171r8", __M2N_s171r8},
	{"s171s118", __M2N_s171s118},
	{"s171s130", __M2N_s171s130},
	{"s171s142", __M2N_s171s142},
	{"s171s158", __M2N_s171s158},
	{"s171s170s171", __M2N_s171s170s171},
	{"s171s171", __M2N_s171s171},
	{"s171s171i4", __M2N_s171s171i4},
	{"s171s171s171", __M2N_s171s171s171},
	{"s171s171s175", __M2N_s171s171s175},
	{"s171s171u4", __M2N_s171s171u4},
	{"s171s172s179", __M2N_s171s172s179},
	{"s171s173s173s173", __M2N_s171s173s173s173},
	{"s171s174", __M2N_s171s174},
	{"s171u1", __M2N_s171u1},
	{"s171u4", __M2N_s171u4},
	{"s171u4s171", __M2N_s171u4s171},
	{"s171u4u4u4u4u4u4", __M2N_s171u4u4u4u4u4u4},
	{"s172i4", __M2N_s172i4},
	{"s172r4", __M2N_s172r4},
	{"s172r8", __M2N_s172r8},
	{"s172s119", __M2N_s172s119},
	{"s172s131", __M2N_s172s131},
	{"s172s143", __M2N_s172s143},
	{"s172s159", __M2N_s172s159},
	{"s172s170s172", __M2N_s172s170s172},
	{"s172s171s176", __M2N_s172s171s176},
	{"s172s172", __M2N_s172s172},
	{"s172s172i4", __M2N_s172s172i4},
	{"s172s172s172", __M2N_s172s172s172},
	{"s172s172s180", __M2N_s172s172s180},
	{"s172s172u4", __M2N_s172s172u4},
	{"s172s173s173s173s173", __M2N_s172s173s173s173s173},
	{"s172s178", __M2N_s172s178},
	{"s172u1", __M2N_s172u1},
	{"s172u4", __M2N_s172u4},
	{"s172u4s172", __M2N_s172u4s172},
	{"s172u4u4u4u4u4u4u4u4", __M2N_s172u4u4u4u4u4u4u4u4},
	{"s173i4", __M2N_s173i4},
	{"s173r4", __M2N_s173r4},
	{"s173r8", __M2N_s173r8},
	{"s173s117", __M2N_s173s117},
	{"s173s118", __M2N_s173s118},
	{"s173s119", __M2N_s173s119},
	{"s173s120", __M2N_s173s120},
	{"s173s129", __M2N_s173s129},
	{"s173s130", __M2N_s173s130},
	{"s173s131", __M2N_s173s131},
	{"s173s132", __M2N_s173s132},
	{"s173s141", __M2N_s173s141},
	{"s173s142", __M2N_s173s142},
	{"s173s143", __M2N_s173s143},
	{"s173s144", __M2N_s173s144},
	{"s173s153", __M2N_s173s153},
	{"s173s157", __M2N_s173s157},
	{"s173s158", __M2N_s173s158},
	{"s173s159", __M2N_s173s159},
	{"s173s170", __M2N_s173s170},
	{"s173s170s173", __M2N_s173s170s173},
	{"s173s171", __M2N_s173s171},
	{"s173s171s177", __M2N_s173s171s177},
	{"s173s172", __M2N_s173s172},
	{"s173s172s181", __M2N_s173s172s181},
	{"s173s173", __M2N_s173s173},
	{"s173s173i4", __M2N_s173s173i4},
	{"s173s173s170", __M2N_s173s173s170},
	{"s173s173s173", __M2N_s173s173s173},
	{"s173s173s173s120", __M2N_s173s173s173s120},
	{"s173s173s173s173", __M2N_s173s173s173s173},
	{"s173s173s173u1", __M2N_s173s173s173u1},
	{"s173s173s173u1u1", __M2N_s173s173s173u1u1},
	{"s173s173u4", __M2N_s173s173u4},
	{"s173s177s174", __M2N_s173s177s174},
	{"s173s177s177u1u1", __M2N_s173s177s177u1u1},
	{"s173s181s178", __M2N_s173s181s178},
	{"s173s181s181u1u1", __M2N_s173s181s181u1u1},
	{"s173s38", __M2N_s173s38},
	{"s173u", __M2N_s173u},
	{"s173u1", __M2N_s173u1},
	{"s173u4", __M2N_s173u4},
	{"s173u4s173", __M2N_s173u4s173},
	{"s173u4u4", __M2N_s173u4u4},
	{"s173ui8", __M2N_s173ui8},
	{"s173ui8u8", __M2N_s173ui8u8},
	{"s173us173", __M2N_s173us173},
	{"s173us173s173", __M2N_s173us173s173},
	{"s174i4", __M2N_s174i4},
	{"s174r4", __M2N_s174r4},
	{"s174r8", __M2N_s174r8},
	{"s174s116", __M2N_s174s116},
	{"s174s121", __M2N_s174s121},
	{"s174s133", __M2N_s174s133},
	{"s174s161", __M2N_s174s161},
	{"s174s171", __M2N_s174s171},
	{"s174s174", __M2N_s174s174},
	{"s174s174i4", __M2N_s174s174i4},
	{"s174s174s170", __M2N_s174s174s170},
	{"s174s174s174", __M2N_s174s174s174},
	{"s174s174u4", __M2N_s174s174u4},
	{"s174s175s174", __M2N_s174s175s174},
	{"s174s176s178", __M2N_s174s176s178},
	{"s174s177s177", __M2N_s174s177s177},
	{"s174u1", __M2N_s174u1},
	{"s174u4", __M2N_s174u4},
	{"s174u4s174", __M2N_s174u4s174},
	{"s174u4u4u4u4u4u4", __M2N_s174u4u4u4u4u4u4},
	{"s175i4", __M2N_s175i4},
	{"s175r4", __M2N_s175r4},
	{"s175r8", __M2N_s175r8},
	{"s175s122", __M2N_s175s122},
	{"s175s134", __M2N_s175s134},
	{"s175s146", __M2N_s175s146},
	{"s175s162", __M2N_s175s162},
	{"s175s174s171", __M2N_s175s174s171},
	{"s175s175", __M2N_s175s175},
	{"s175s175i4", __M2N_s175s175i4},
	{"s175s175s175", __M2N_s175s175s175},
	{"s175s175u4", __M2N_s175s175u4},
	{"s175s176s179", __M2N_s175s176s179},
	{"s175s177s177s177", __M2N_s175s177s177s177},
	{"s175u1", __M2N_s175u1},
	{"s175u4", __M2N_s175u4},
	{"s175u4s175", __M2N_s175u4s175},
	{"s175u4u4u4u4u4u4u4u4u4", __M2N_s175u4u4u4u4u4u4u4u4u4},
	{"s176i4", __M2N_s176i4},
	{"s176r4", __M2N_s176r4},
	{"s176r8", __M2N_s176r8},
	{"s176s123", __M2N_s176s123},
	{"s176s135", __M2N_s176s135},
	{"s176s147", __M2N_s176s147},
	{"s176s163", __M2N_s176s163},
	{"s176s174s172", __M2N_s176s174s172},
	{"s176s175s176", __M2N_s176s175s176},
	{"s176s176", __M2N_s176s176},
	{"s176s176i4", __M2N_s176s176i4},
	{"s176s176s176", __M2N_s176s176s176},
	{"s176s176s180", __M2N_s176s176s180},
	{"s176s176u4", __M2N_s176s176u4},
	{"s176s177s177s177s177", __M2N_s176s177s177s177s177},
	{"s176s179", __M2N_s176s179},
	{"s176u1", __M2N_s176u1},
	{"s176u4", __M2N_s176u4},
	{"s176u4s176", __M2N_s176u4s176},
	{"s176u4u4u4u4u4u4u4u4u4u4u4u4", __M2N_s176u4u4u4u4u4u4u4u4u4u4u4u4},
	{"s177i4", __M2N_s177i4},
	{"s177r4", __M2N_s177r4},
	{"s177r8", __M2N_s177r8},
	{"s177s1", __M2N_s177s1},
	{"s177s116", __M2N_s177s116},
	{"s177s121", __M2N_s177s121},
	{"s177s122", __M2N_s177s122},
	{"s177s123", __M2N_s177s123},
	{"s177s124", __M2N_s177s124},
	{"s177s133", __M2N_s177s133},
	{"s177s134", __M2N_s177s134},
	{"s177s135", __M2N_s177s135},
	{"s177s136", __M2N_s177s136},
	{"s177s146", __M2N_s177s146},
	{"s177s147", __M2N_s177s147},
	{"s177s148", __M2N_s177s148},
	{"s177s154", __M2N_s177s154},
	{"s177s161", __M2N_s177s161},
	{"s177s162", __M2N_s177s162},
	{"s177s163", __M2N_s177s163},
	{"s177s173s171", __M2N_s177s173s171},
	{"s177s173s173u1u1u1", __M2N_s177s173s173u1u1u1},
	{"s177s173u4", __M2N_s177s173u4},
	{"s177s174", __M2N_s177s174},
	{"s177s174s173", __M2N_s177s174s173},
	{"s177s175", __M2N_s177s175},
	{"s177s175s177", __M2N_s177s175s177},
	{"s177s176", __M2N_s177s176},
	{"s177s176s181", __M2N_s177s176s181},
	{"s177s177", __M2N_s177s177},
	{"s177s177i4", __M2N_s177s177i4},
	{"s177s177s175", __M2N_s177s177s175},
	{"s177s177s177", __M2N_s177s177s177},
	{"s177s177s177s124", __M2N_s177s177s177s124},
	{"s177s177s177s177", __M2N_s177s177s177s177},
	{"s177s177s177u1", __M2N_s177s177s177u1},
	{"s177s177s177u1u1u1", __M2N_s177s177s177u1u1u1},
	{"s177s177u4", __M2N_s177s177u4},
	{"s177s181s179", __M2N_s177s181s179},
	{"s177s181s181u1u1u1", __M2N_s177s181s181u1u1u1},
	{"s177u", __M2N_s177u},
	{"s177u1", __M2N_s177u1},
	{"s177u4", __M2N_s177u4},
	{"s177u4s173", __M2N_s177u4s173},
	{"s177u4s177", __M2N_s177u4s177},
	{"s177u4u4u4", __M2N_s177u4u4u4},
	{"s177us177", __M2N_s177us177},
	{"s177us177s177", __M2N_s177us177s177},
	{"s178i4", __M2N_s178i4},
	{"s178r4", __M2N_s178r4},
	{"s178r8", __M2N_s178r8},
	{"s178s125", __M2N_s178s125},
	{"s178s137", __M2N_s178s137},
	{"s178s149", __M2N_s178s149},
	{"s178s165", __M2N_s178s165},
	{"s178s172", __M2N_s178s172},
	{"s178s178", __M2N_s178s178},
	{"s178s178i4", __M2N_s178s178i4},
	{"s178s178s170", __M2N_s178s178s170},
	{"s178s178s178", __M2N_s178s178s178},
	{"s178s178u4", __M2N_s178s178u4},
	{"s178s179s174", __M2N_s178s179s174},
	{"s178s180s178", __M2N_s178s180s178},
	{"s178s181s181", __M2N_s178s181s181},
	{"s178u1", __M2N_s178u1},
	{"s178u4", __M2N_s178u4},
	{"s178u4s178", __M2N_s178u4s178},
	{"s178u4u4u4u4u4u4u4u4", __M2N_s178u4u4u4u4u4u4u4u4},
	{"s179i4", __M2N_s179i4},
	{"s179r4", __M2N_s179r4},
	{"s179r8", __M2N_s179r8},
	{"s179s126", __M2N_s179s126},
	{"s179s138", __M2N_s179s138},
	{"s179s150", __M2N_s179s150},
	{"s179s166", __M2N_s179s166},
	{"s179s176", __M2N_s179s176},
	{"s179s178s171", __M2N_s179s178s171},
	{"s179s179", __M2N_s179s179},
	{"s179s179i4", __M2N_s179s179i4},
	{"s179s179s175", __M2N_s179s179s175},
	{"s179s179s179", __M2N_s179s179s179},
	{"s179s179u4", __M2N_s179s179u4},
	{"s179s180s179", __M2N_s179s180s179},
	{"s179s181s181s181", __M2N_s179s181s181s181},
	{"s179u1", __M2N_s179u1},
	{"s179u4", __M2N_s179u4},
	{"s179u4s179", __M2N_s179u4s179},
	{"s179u4u4u4u4u4u4u4u4u4u4u4u4", __M2N_s179u4u4u4u4u4u4u4u4u4u4u4u4},
	{"s17u", __M2N_s17u},
	{"s17uu", __M2N_s17uu},
	{"s180i4", __M2N_s180i4},
	{"s180r4", __M2N_s180r4},
	{"s180r8", __M2N_s180r8},
	{"s180s127", __M2N_s180s127},
	{"s180s139", __M2N_s180s139},
	{"s180s151", __M2N_s180s151},
	{"s180s167", __M2N_s180s167},
	{"s180s178s172", __M2N_s180s178s172},
	{"s180s179s176", __M2N_s180s179s176},
	{"s180s180", __M2N_s180s180},
	{"s180s180i4", __M2N_s180s180i4},
	{"s180s180s180", __M2N_s180s180s180},
	{"s180s180u4", __M2N_s180s180u4},
	{"s180s181s181s181s181", __M2N_s180s181s181s181s181},
	{"s180u1", __M2N_s180u1},
	{"s180u4", __M2N_s180u4},
	{"s180u4s180", __M2N_s180u4s180},
	{"s180u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4", __M2N_s180u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4},
	{"s181i4", __M2N_s181i4},
	{"s181r4", __M2N_s181r4},
	{"s181r8", __M2N_s181r8},
	{"s181s125", __M2N_s181s125},
	{"s181s126", __M2N_s181s126},
	{"s181s127", __M2N_s181s127},
	{"s181s128", __M2N_s181s128},
	{"s181s137", __M2N_s181s137},
	{"s181s138", __M2N_s181s138},
	{"s181s139", __M2N_s181s139},
	{"s181s140", __M2N_s181s140},
	{"s181s149", __M2N_s181s149},
	{"s181s150", __M2N_s181s150},
	{"s181s151", __M2N_s181s151},
	{"s181s152", __M2N_s181s152},
	{"s181s155", __M2N_s181s155},
	{"s181s165", __M2N_s181s165},
	{"s181s166", __M2N_s181s166},
	{"s181s167", __M2N_s181s167},
	{"s181s169", __M2N_s181s169},
	{"s181s173s172", __M2N_s181s173s172},
	{"s181s173s173", __M2N_s181s173s173},
	{"s181s173s173u1u1u1u1", __M2N_s181s173s173u1u1u1u1},
	{"s181s173u4u4", __M2N_s181s173u4u4},
	{"s181s177s176", __M2N_s181s177s176},
	{"s181s177s177u1u1u1u1", __M2N_s181s177s177u1u1u1u1},
	{"s181s177u4", __M2N_s181s177u4},
	{"s181s178", __M2N_s181s178},
	{"s181s178s173", __M2N_s181s178s173},
	{"s181s179", __M2N_s181s179},
	{"s181s179s177", __M2N_s181s179s177},
	{"s181s180", __M2N_s181s180},
	{"s181s180s181", __M2N_s181s180s181},
	{"s181s181", __M2N_s181s181},
	{"s181s181i4", __M2N_s181s181i4},
	{"s181s181s180", __M2N_s181s181s180},
	{"s181s181s181", __M2N_s181s181s181},
	{"s181s181s181s128", __M2N_s181s181s181s128},
	{"s181s181s181s181", __M2N_s181s181s181s181},
	{"s181s181s181u1", __M2N_s181s181s181u1},
	{"s181s181s181u1u1u1u1", __M2N_s181s181s181u1u1u1u1},
	{"s181s181u4", __M2N_s181s181u4},
	{"s181s313", __M2N_s181s313},
	{"s181s39", __M2N_s181s39},
	{"s181u", __M2N_s181u},
	{"s181u1", __M2N_s181u1},
	{"s181u4", __M2N_s181u4},
	{"s181u4s173u4", __M2N_s181u4s173u4},
	{"s181u4s177", __M2N_s181u4s177},
	{"s181u4s181", __M2N_s181u4s181},
	{"s181u4u4s173", __M2N_s181u4u4s173},
	{"s181u4u4u4u4", __M2N_s181u4u4u4u4},
	{"s181ui8", __M2N_s181ui8},
	{"s181ui8u8", __M2N_s181ui8u8},
	{"s181us181", __M2N_s181us181},
	{"s181us181s181", __M2N_s181us181s181},
	{"s181uui8", __M2N_s181uui8},
	{"s181uui8u8", __M2N_s181uui8u8},
	{"s182", __M2N_s182},
	{"s182us205u", __M2N_s182us205u},
	{"s193u", __M2N_s193u},
	{"s193ui4", __M2N_s193ui4},
	{"s193ui4i4", __M2N_s193ui4i4},
	{"s19u", __M2N_s19u},
	{"s19uu", __M2N_s19uu},
	{"s1i4", __M2N_s1i4},
	{"s1i4i4i4", __M2N_s1i4i4i4},
	{"s1i4s1", __M2N_s1i4s1},
	{"s1i4s38", __M2N_s1i4s38},
	{"s1i4u", __M2N_s1i4u},
	{"s1i4ui4", __M2N_s1i4ui4},
	{"s1r4", __M2N_s1r4},
	{"s1r8", __M2N_s1r8},
	{"s1s1", __M2N_s1s1},
	{"s1s124", __M2N_s1s124},
	{"s1s136", __M2N_s1s136},
	{"s1s148", __M2N_s1s148},
	{"s1s161s38", __M2N_s1s161s38},
	{"s1s162s1", __M2N_s1s162s1},
	{"s1s163s39", __M2N_s1s163s39},
	{"s1s177", __M2N_s1s177},
	{"s1s1i4", __M2N_s1s1i4},
	{"s1s1s1", __M2N_s1s1s1},
	{"s1s1s162", __M2N_s1s1s162},
	{"s1s1s1s1", __M2N_s1s1s1s1},
	{"s1s1s1s124", __M2N_s1s1s1s124},
	{"s1s1s1u1", __M2N_s1s1s1u1},
	{"s1s1s1u1u1u1", __M2N_s1s1s1u1u1u1},
	{"s1s38i4", __M2N_s1s38i4},
	{"s1s38s158", __M2N_s1s38s158},
	{"s1s38s38u1u1u1", __M2N_s1s38s38u1u1u1},
	{"s1s39s166", __M2N_s1s39s166},
	{"s1s39s39u1u1u1", __M2N_s1s39s39u1u1u1},
	{"s1u", __M2N_s1u},
	{"s1u1", __M2N_s1u1},
	{"s1u4", __M2N_s1u4},
	{"s1ui4", __M2N_s1ui4},
	{"s1us1", __M2N_s1us1},
	{"s1us1s1", __M2N_s1us1s1},
	{"s201u", __M2N_s201u},
	{"s202", __M2N_s202},
	{"s202s148", __M2N_s202s148},
	{"s202s151", __M2N_s202s151},
	{"s202u", __M2N_s202u},
	{"s202ui4", __M2N_s202ui4},
	{"s202ui4i4", __M2N_s202ui4i4},
	{"s205", __M2N_s205},
	{"s205u", __M2N_s205u},
	{"s213u4", __M2N_s213u4},
	{"s21u", __M2N_s21u},
	{"s21ui4", __M2N_s21ui4},
	{"s22u", __M2N_s22u},
	{"s24", __M2N_s24},
	{"s248u", __M2N_s248u},
	{"s248us86s90", __M2N_s248us86s90},
	{"s249ui4", __M2N_s249ui4},
	{"s24i4s68i4", __M2N_s24i4s68i4},
	{"s24i4ui4", __M2N_s24i4ui4},
	{"s24s24", __M2N_s24s24},
	{"s24s24i4", __M2N_s24s24i4},
	{"s24s24s68", __M2N_s24s24s68},
	{"s24s510", __M2N_s24s510},
	{"s24u", __M2N_s24u},
	{"s24ui4", __M2N_s24ui4},
	{"s24ui4i4", __M2N_s24ui4i4},
	{"s24us68", __M2N_s24us68},
	{"s24uu", __M2N_s24uu},
	{"s251s111s68", __M2N_s251s111s68},
	{"s251s510s68", __M2N_s251s510s68},
	{"s251us68", __M2N_s251us68},
	{"s26u", __M2N_s26u},
	{"s272i4ui4", __M2N_s272i4ui4},
	{"s273u", __M2N_s273u},
	{"s27u", __M2N_s27u},
	{"s28u", __M2N_s28u},
	{"s28ui4", __M2N_s28ui4},
	{"s2i4u", __M2N_s2i4u},
	{"s2i4ui4", __M2N_s2i4ui4},
	{"s2ui4", __M2N_s2ui4},
	{"s30", __M2N_s30},
	{"s30i8", __M2N_s30i8},
	{"s30s30i4", __M2N_s30s30i4},
	{"s30s30s94", __M2N_s30s30s94},
	{"s30u", __M2N_s30u},
	{"s30ui4", __M2N_s30ui4},
	{"s30ui4i4i4i4i4i4i4i4", __M2N_s30ui4i4i4i4i4i4i4i4},
	{"s30ui8", __M2N_s30ui8},
	{"s30ur8", __M2N_s30ur8},
	{"s30uu", __M2N_s30uu},
	{"s313r4", __M2N_s313r4},
	{"s313r4r4r4", __M2N_s313r4r4r4},
	{"s313r4r4r4u1", __M2N_s313r4r4r4u1},
	{"s313s146s148", __M2N_s313s146s148},
	{"s313s148", __M2N_s313s148},
	{"s313s148r4", __M2N_s313s148r4},
	{"s313s148u1", __M2N_s313s148u1},
	{"s313s151", __M2N_s313s151},
	{"s313s169s148", __M2N_s313s169s148},
	{"s313s313", __M2N_s313s313},
	{"s313s313s313", __M2N_s313s313s313},
	{"s318u", __M2N_s318u},
	{"s318ui4", __M2N_s318ui4},
	{"s319i1", __M2N_s319i1},
	{"s319i1s319i4", __M2N_s319i1s319i4},
	{"s319i2", __M2N_s319i2},
	{"s319i2s319i4", __M2N_s319i2s319i4},
	{"s319i4", __M2N_s319i4},
	{"s319i4s319i4", __M2N_s319i4s319i4},
	{"s319i8", __M2N_s319i8},
	{"s319i8s319i4", __M2N_s319i8s319i4},
	{"s319r4", __M2N_s319r4},
	{"s319r4s319i4", __M2N_s319r4s319i4},
	{"s319r8", __M2N_s319r8},
	{"s319r8s319i4", __M2N_s319r8s319i4},
	{"s319s319", __M2N_s319s319},
	{"s319s319i2", __M2N_s319s319i2},
	{"s319s319i4", __M2N_s319s319i4},
	{"s319s319i4s319i4", __M2N_s319s319i4s319i4},
	{"s319s319i4s320i4", __M2N_s319s319i4s320i4},
	{"s319s319r4", __M2N_s319s319r4},
	{"s319s319r8", __M2N_s319s319r8},
	{"s319s319s319", __M2N_s319s319s319},
	{"s319s319s319i2", __M2N_s319s319s319i2},
	{"s319s319s319i4", __M2N_s319s319s319i4},
	{"s319s319s319r4", __M2N_s319s319s319r4},
	{"s319s319s319r8", __M2N_s319s319s319r8},
	{"s319s319s319s319", __M2N_s319s319s319s319},
	{"s319s319s319s319i4", __M2N_s319s319s319s319i4},
	{"s319s319s319s320i4", __M2N_s319s319s319s320i4},
	{"s319s319s319u2", __M2N_s319s319s319u2},
	{"s319s319s319u4", __M2N_s319s319s319u4},
	{"s319s319s320i4", __M2N_s319s319s320i4},
	{"s319s319s320s319", __M2N_s319s319s320s319},
	{"s319s319u2", __M2N_s319s319u2},
	{"s319s319u4", __M2N_s319s319u4},
	{"s319s320", __M2N_s319s320},
	{"s319s320i4", __M2N_s319s320i4},
	{"s319s320s319", __M2N_s319s320s319},
	{"s319s320s320", __M2N_s319s320s320},
	{"s319u", __M2N_s319u},
	{"s319u1", __M2N_s319u1},
	{"s319u1s319i4", __M2N_s319u1s319i4},
	{"s319u2", __M2N_s319u2},
	{"s319u2s319i4", __M2N_s319u2s319i4},
	{"s319u4", __M2N_s319u4},
	{"s319u4s319i4", __M2N_s319u4s319i4},
	{"s319u8", __M2N_s319u8},
	{"s319u8s319i4", __M2N_s319u8s319i4},
	{"s31s31", __M2N_s31s31},
	{"s31u", __M2N_s31u},
	{"s31ui4", __M2N_s31ui4},
	{"s31ui4i4", __M2N_s31ui4i4},
	{"s31us88", __M2N_s31us88},
	{"s320", __M2N_s320},
	{"s320i1", __M2N_s320i1},
	{"s320i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1", __M2N_s320i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1},
	{"s320i1s320i4", __M2N_s320i1s320i4},
	{"s320i2", __M2N_s320i2},
	{"s320i2i2i2i2i2i2i2i2", __M2N_s320i2i2i2i2i2i2i2i2},
	{"s320i2s320i4", __M2N_s320i2s320i4},
	{"s320i4", __M2N_s320i4},
	{"s320i4i4i1i4", __M2N_s320i4i4i1i4},
	{"s320i4i4i2i4", __M2N_s320i4i4i2i4},
	{"s320i4i4i4i4", __M2N_s320i4i4i4i4},
	{"s320i4i4u1i4", __M2N_s320i4i4u1i4},
	{"s320i4i4u2i4", __M2N_s320i4i4u2i4},
	{"s320i4i4ui4", __M2N_s320i4i4ui4},
	{"s320i4s320i4", __M2N_s320i4s320i4},
	{"s320i8", __M2N_s320i8},
	{"s320i8i8", __M2N_s320i8i8},
	{"s320i8s320i4", __M2N_s320i8s320i4},
	{"s320r4", __M2N_s320r4},
	{"s320r4r4r4r4", __M2N_s320r4r4r4r4},
	{"s320r4s320i4", __M2N_s320r4s320i4},
	{"s320r8", __M2N_s320r8},
	{"s320r8r8", __M2N_s320r8r8},
	{"s320r8s320i4", __M2N_s320r8s320i4},
	{"s320s319", __M2N_s320s319},
	{"s320s319i2", __M2N_s320s319i2},
	{"s320s319i4", __M2N_s320s319i4},
	{"s320s319s319", __M2N_s320s319s319},
	{"s320s319s319i4", __M2N_s320s319s319i4},
	{"s320s319s320", __M2N_s320s319s320},
	{"s320s319s320i4", __M2N_s320s319s320i4},
	{"s320s319s320s320", __M2N_s320s319s320s320},
	{"s320s319u2", __M2N_s320s319u2},
	{"s320s319u4", __M2N_s320s319u4},
	{"s320s320", __M2N_s320s320},
	{"s320s320i2", __M2N_s320s320i2},
	{"s320s320i4", __M2N_s320s320i4},
	{"s320s320i4i4", __M2N_s320s320i4i4},
	{"s320s320i4s319i4", __M2N_s320s320i4s319i4},
	{"s320s320i4s320i4", __M2N_s320s320i4s320i4},
	{"s320s320i4s320i4i4", __M2N_s320s320i4s320i4i4},
	{"s320s320i8", __M2N_s320s320i8},
	{"s320s320i8i4", __M2N_s320s320i8i4},
	{"s320s320r4", __M2N_s320s320r4},
	{"s320s320r8", __M2N_s320s320r8},
	{"s320s320s319", __M2N_s320s320s319},
	{"s320s320s319i2", __M2N_s320s320s319i2},
	{"s320s320s319i4", __M2N_s320s320s319i4},
	{"s320s320s319s319", __M2N_s320s320s319s319},
	{"s320s320s319s319i4", __M2N_s320s320s319s319i4},
	{"s320s320s319s320i4", __M2N_s320s320s319s320i4},
	{"s320s320s319u2", __M2N_s320s320s319u2},
	{"s320s320s319u4", __M2N_s320s320s319u4},
	{"s320s320s320", __M2N_s320s320s320},
	{"s320s320s320i2", __M2N_s320s320s320i2},
	{"s320s320s320i4", __M2N_s320s320s320i4},
	{"s320s320s320r4", __M2N_s320s320s320r4},
	{"s320s320s320r8", __M2N_s320s320s320r8},
	{"s320s320s320s319i4", __M2N_s320s320s320s319i4},
	{"s320s320s320s320", __M2N_s320s320s320s320},
	{"s320s320s320s320i4", __M2N_s320s320s320s320i4},
	{"s320s320s320u2", __M2N_s320s320s320u2},
	{"s320s320s320u4", __M2N_s320s320s320u4},
	{"s320s320u1i4", __M2N_s320s320u1i4},
	{"s320s320u2", __M2N_s320s320u2},
	{"s320s320u4", __M2N_s320s320u4},
	{"s320s320u4s320", __M2N_s320s320u4s320},
	{"s320s320us320s320i4", __M2N_s320s320us320s320i4},
	{"s320s320us421s320i4", __M2N_s320s320us421s320i4},
	{"s320s421", __M2N_s320s421},
	{"s320s421i4", __M2N_s320s421i4},
	{"s320u", __M2N_s320u},
	{"s320u1", __M2N_s320u1},
	{"s320u1s320i4", __M2N_s320u1s320i4},
	{"s320u2", __M2N_s320u2},
	{"s320u2s320i4", __M2N_s320u2s320i4},
	{"s320u4", __M2N_s320u4},
	{"s320u4s320i4", __M2N_s320u4s320i4},
	{"s320u8", __M2N_s320u8},
	{"s320u8s320i4", __M2N_s320u8s320i4},
	{"s320ui4ui4i4i4i4i1", __M2N_s320ui4ui4i4i4i4i1},
	{"s320ui4ui4i4i4i4i2", __M2N_s320ui4ui4i4i4i4i2},
	{"s320ui4ui4i4i4i4u", __M2N_s320ui4ui4i4i4i4u},
	{"s320ui4ui4i4i4i4u1", __M2N_s320ui4ui4i4i4i4u1},
	{"s320ui4ui4i4i4i4u2", __M2N_s320ui4ui4i4i4i4u2},
	{"s320us320", __M2N_s320us320},
	{"s320us320i4", __M2N_s320us320i4},
	{"s320us421i4", __M2N_s320us421i4},
	{"s320uui4i4i4i1", __M2N_s320uui4i4i4i1},
	{"s320uui4i4i4i2", __M2N_s320uui4i4i4i2},
	{"s320uui4i4i4u", __M2N_s320uui4i4i4u},
	{"s320uui4i4i4u1", __M2N_s320uui4i4i4u1},
	{"s320uui4i4i4u2", __M2N_s320uui4i4i4u2},
	{"s323u", __M2N_s323u},
	{"s324u", __M2N_s324u},
	{"s325u", __M2N_s325u},
	{"s326u", __M2N_s326u},
	{"s327u", __M2N_s327u},
	{"s329u", __M2N_s329u},
	{"s330u", __M2N_s330u},
	{"s331u", __M2N_s331u},
	{"s332u", __M2N_s332u},
	{"s333u", __M2N_s333u},
	{"s334u", __M2N_s334u},
	{"s335u", __M2N_s335u},
	{"s336u", __M2N_s336u},
	{"s337u", __M2N_s337u},
	{"s338u", __M2N_s338u},
	{"s339u", __M2N_s339u},
	{"s341u", __M2N_s341u},
	{"s342u", __M2N_s342u},
	{"s343u", __M2N_s343u},
	{"s344u", __M2N_s344u},
	{"s345u", __M2N_s345u},
	{"s346u", __M2N_s346u},
	{"s34u", __M2N_s34u},
	{"s34ui4", __M2N_s34ui4},
	{"s35", __M2N_s35},
	{"s352u", __M2N_s352u},
	{"s358u", __M2N_s358u},
	{"s35s31", __M2N_s35s31},
	{"s35u", __M2N_s35u},
	{"s360u", __M2N_s360u},
	{"s369u", __M2N_s369u},
	{"s36u", __M2N_s36u},
	{"s370u", __M2N_s370u},
	{"s371u", __M2N_s371u},
	{"s375u", __M2N_s375u},
	{"s376u", __M2N_s376u},
	{"s384u", __M2N_s384u},
	{"s385u", __M2N_s385u},
	{"s386u", __M2N_s386u},
	{"s387u", __M2N_s387u},
	{"s388u", __M2N_s388u},
	{"s389u", __M2N_s389u},
	{"s38i4", __M2N_s38i4},
	{"s38i4i4", __M2N_s38i4i4},
	{"s38i4s38", __M2N_s38i4s38},
	{"s38r4", __M2N_s38r4},
	{"s38r8", __M2N_s38r8},
	{"s38s120", __M2N_s38s120},
	{"s38s132", __M2N_s38s132},
	{"s38s144", __M2N_s38s144},
	{"s38s157s38", __M2N_s38s157s38},
	{"s38s158s1", __M2N_s38s158s1},
	{"s38s159s39", __M2N_s38s159s39},
	{"s38s173", __M2N_s38s173},
	{"s38s1s161", __M2N_s38s1s161},
	{"s38s1s1u1u1", __M2N_s38s1s1u1u1},
	{"s38s38", __M2N_s38s38},
	{"s38s38i4", __M2N_s38s38i4},
	{"s38s38s157", __M2N_s38s38s157},
	{"s38s38s38", __M2N_s38s38s38},
	{"s38s38s38s120", __M2N_s38s38s38s120},
	{"s38s38s38s38", __M2N_s38s38s38s38},
	{"s38s38s38u1", __M2N_s38s38s38u1},
	{"s38s38s38u1u1", __M2N_s38s38s38u1u1},
	{"s38s39s165", __M2N_s38s39s165},
	{"s38s39s39u1u1", __M2N_s38s39s39u1u1},
	{"s38u", __M2N_s38u},
	{"s38u1", __M2N_s38u1},
	{"s38u4", __M2N_s38u4},
	{"s38ui4", __M2N_s38ui4},
	{"s38us38", __M2N_s38us38},
	{"s38us38s38", __M2N_s38us38s38},
	{"s390u", __M2N_s390u},
	{"s391u", __M2N_s391u},
	{"s392u", __M2N_s392u},
	{"s394u", __M2N_s394u},
	{"s395u", __M2N_s395u},
	{"s396u", __M2N_s396u},
	{"s398u", __M2N_s398u},
	{"s39i4", __M2N_s39i4},
	{"s39i4i4i4i4", __M2N_s39i4i4i4i4},
	{"s39i4i4s38", __M2N_s39i4i4s38},
	{"s39i4s1", __M2N_s39i4s1},
	{"s39i4s38i4", __M2N_s39i4s38i4},
	{"s39i4s39", __M2N_s39i4s39},
	{"s39r4", __M2N_s39r4},
	{"s39r8", __M2N_s39r8},
	{"s39s128", __M2N_s39s128},
	{"s39s140", __M2N_s39s140},
	{"s39s152", __M2N_s39s152},
	{"s39s165s38", __M2N_s39s165s38},
	{"s39s166s1", __M2N_s39s166s1},
	{"s39s167s39", __M2N_s39s167s39},
	{"s39s181", __M2N_s39s181},
	{"s39s1i4", __M2N_s39s1i4},
	{"s39s1s163", __M2N_s39s1s163},
	{"s39s1s1u1u1u1u1", __M2N_s39s1s1u1u1u1u1},
	{"s39s38i4i4", __M2N_s39s38i4i4},
	{"s39s38s159", __M2N_s39s38s159},
	{"s39s38s38", __M2N_s39s38s38},
	{"s39s38s38u1u1u1u1", __M2N_s39s38s38u1u1u1u1},
	{"s39s39", __M2N_s39s39},
	{"s39s39i4", __M2N_s39s39i4},
	{"s39s39s167", __M2N_s39s39s167},
	{"s39s39s39", __M2N_s39s39s39},
	{"s39s39s39s128", __M2N_s39s39s39s128},
	{"s39s39s39s39", __M2N_s39s39s39s39},
	{"s39s39s39u1", __M2N_s39s39s39u1},
	{"s39s39s39u1u1u1u1", __M2N_s39s39s39u1u1u1u1},
	{"s39u", __M2N_s39u},
	{"s39u1", __M2N_s39u1},
	{"s39u4", __M2N_s39u4},
	{"s39ui4", __M2N_s39ui4},
	{"s39us39", __M2N_s39us39},
	{"s39us39s39", __M2N_s39us39s39},
	{"s3i4u", __M2N_s3i4u},
	{"s3i4ui4", __M2N_s3i4ui4},
	{"s3u", __M2N_s3u},
	{"s3ui4", __M2N_s3ui4},
	{"s3us34", __M2N_s3us34},
	{"s3uuu", __M2N_s3uuu},
	{"s400u", __M2N_s400u},
	{"s403u", __M2N_s403u},
	{"s407u", __M2N_s407u},
	{"s408u", __M2N_s408u},
	{"s409u", __M2N_s409u},
	{"s40u", __M2N_s40u},
	{"s40ui4", __M2N_s40ui4},
	{"s40us321", __M2N_s40us321},
	{"s40uu", __M2N_s40uu},
	{"s411u", __M2N_s411u},
	{"s412u", __M2N_s412u},
	{"s416u", __M2N_s416u},
	{"s41u", __M2N_s41u},
	{"s41uu", __M2N_s41uu},
	{"s421", __M2N_s421},
	{"s421i2", __M2N_s421i2},
	{"s421i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2", __M2N_s421i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2},
	{"s421i4", __M2N_s421i4},
	{"s421i4i4i4i4i4i4i4i4", __M2N_s421i4i4i4i4i4i4i4i4},
	{"s421i8", __M2N_s421i8},
	{"s421i8i8i8i8", __M2N_s421i8i8i8i8},
	{"s421r4", __M2N_s421r4},
	{"s421r4r4r4r4r4r4r4r4", __M2N_s421r4r4r4r4r4r4r4r4},
	{"s421r8", __M2N_s421r8},
	{"s421r8r8r8r8", __M2N_s421r8r8r8r8},
	{"s421s320", __M2N_s421s320},
	{"s421s320s320", __M2N_s421s320s320},
	{"s421s421", __M2N_s421s421},
	{"s421s421i4", __M2N_s421s421i4},
	{"s421s421i4i4", __M2N_s421s421i4i4},
	{"s421s421i8i4", __M2N_s421s421i8i4},
	{"s421s421s320", __M2N_s421s421s320},
	{"s421s421s320i4", __M2N_s421s421s320i4},
	{"s421s421s421", __M2N_s421s421s421},
	{"s421s421s421i4", __M2N_s421s421s421i4},
	{"s421s421s421s421", __M2N_s421s421s421s421},
	{"s421s421us320s421i4", __M2N_s421s421us320s421i4},
	{"s421s421us421s421i4", __M2N_s421s421us421s421i4},
	{"s421u", __M2N_s421u},
	{"s421u1", __M2N_s421u1},
	{"s421u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_s421u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1},
	{"s421us320i4", __M2N_s421us320i4},
	{"s421us421", __M2N_s421us421},
	{"s421us421i4", __M2N_s421us421i4},
	{"s421uu", __M2N_s421uu},
	{"s425u", __M2N_s425u},
	{"s426", __M2N_s426},
	{"s427i4i4i4ui4", __M2N_s427i4i4i4ui4},
	{"s42u", __M2N_s42u},
	{"s42uu", __M2N_s42uu},
	{"s432u", __M2N_s432u},
	{"s433u", __M2N_s433u},
	{"s434u", __M2N_s434u},
	{"s436u", __M2N_s436u},
	{"s437u", __M2N_s437u},
	{"s438u", __M2N_s438u},
	{"s43u", __M2N_s43u},
	{"s43ui4", __M2N_s43ui4},
	{"s43uu", __M2N_s43uu},
	{"s444", __M2N_s444},
	{"s448", __M2N_s448},
	{"s448uu", __M2N_s448uu},
	{"s449", __M2N_s449},
	{"s44u", __M2N_s44u},
	{"s450", __M2N_s450},
	{"s451uu1", __M2N_s451uu1},
	{"s45u", __M2N_s45u},
	{"s466u", __M2N_s466u},
	{"s467u", __M2N_s467u},
	{"s468u", __M2N_s468u},
	{"s478s152", __M2N_s478s152},
	{"s478u", __M2N_s478u},
	{"s47u", __M2N_s47u},
	{"s485ui4", __M2N_s485ui4},
	{"s485ui4i4i4", __M2N_s485ui4i4i4},
	{"s485uui4", __M2N_s485uui4},
	{"s48u", __M2N_s48u},
	{"s491us68", __M2N_s491us68},
	{"s4u", __M2N_s4u},
	{"s503u", __M2N_s503u},
	{"s503ui4", __M2N_s503ui4},
	{"s504u", __M2N_s504u},
	{"s504ui4", __M2N_s504ui4},
	{"s505u", __M2N_s505u},
	{"s505ui4", __M2N_s505ui4},
	{"s506u", __M2N_s506u},
	{"s506ui4", __M2N_s506ui4},
	{"s507u", __M2N_s507u},
	{"s507ui4", __M2N_s507ui4},
	{"s510i4u", __M2N_s510i4u},
	{"s510i4ui4", __M2N_s510i4ui4},
	{"s510ui4", __M2N_s510ui4},
	{"s510us68", __M2N_s510us68},
	{"s519u", __M2N_s519u},
	{"s51i4", __M2N_s51i4},
	{"s51u", __M2N_s51u},
	{"s51ui4", __M2N_s51ui4},
	{"s526u", __M2N_s526u},
	{"s527u", __M2N_s527u},
	{"s52u", __M2N_s52u},
	{"s534u", __M2N_s534u},
	{"s538u", __M2N_s538u},
	{"s53u", __M2N_s53u},
	{"s542u", __M2N_s542u},
	{"s546u", __M2N_s546u},
	{"s54u", __M2N_s54u},
	{"s550u", __M2N_s550u},
	{"s554u", __M2N_s554u},
	{"s555u", __M2N_s555u},
	{"s556u", __M2N_s556u},
	{"s557u", __M2N_s557u},
	{"s558u", __M2N_s558u},
	{"s559u", __M2N_s559u},
	{"s55u", __M2N_s55u},
	{"s563s111", __M2N_s563s111},
	{"s564u", __M2N_s564u},
	{"s571u", __M2N_s571u},
	{"s573u", __M2N_s573u},
	{"s57u", __M2N_s57u},
	{"s57uuuu1u1", __M2N_s57uuuu1u1},
	{"s585u", __M2N_s585u},
	{"s585uu", __M2N_s585uu},
	{"s586ui4", __M2N_s586ui4},
	{"s58u", __M2N_s58u},
	{"s595u", __M2N_s595u},
	{"s596u", __M2N_s596u},
	{"s597u", __M2N_s597u},
	{"s598u", __M2N_s598u},
	{"s599u", __M2N_s599u},
	{"s59u", __M2N_s59u},
	{"s5u", __M2N_s5u},
	{"s600u", __M2N_s600u},
	{"s601u", __M2N_s601u},
	{"s602u", __M2N_s602u},
	{"s603u", __M2N_s603u},
	{"s604u", __M2N_s604u},
	{"s605u", __M2N_s605u},
	{"s607u", __M2N_s607u},
	{"s608u", __M2N_s608u},
	{"s609u", __M2N_s609u},
	{"s610u", __M2N_s610u},
	{"s611u", __M2N_s611u},
	{"s613u", __M2N_s613u},
	{"s614u", __M2N_s614u},
	{"s615u", __M2N_s615u},
	{"s617u", __M2N_s617u},
	{"s618u", __M2N_s618u},
	{"s61u", __M2N_s61u},
	{"s621u", __M2N_s621u},
	{"s622u", __M2N_s622u},
	{"s623u", __M2N_s623u},
	{"s624u", __M2N_s624u},
	{"s625u", __M2N_s625u},
	{"s626u", __M2N_s626u},
	{"s627u", __M2N_s627u},
	{"s628u", __M2N_s628u},
	{"s629u", __M2N_s629u},
	{"s62u", __M2N_s62u},
	{"s62ui4", __M2N_s62ui4},
	{"s631u", __M2N_s631u},
	{"s632u", __M2N_s632u},
	{"s633u", __M2N_s633u},
	{"s634u", __M2N_s634u},
	{"s635u", __M2N_s635u},
	{"s637u", __M2N_s637u},
	{"s638u", __M2N_s638u},
	{"s639u", __M2N_s639u},
	{"s63u", __M2N_s63u},
	{"s63ui4", __M2N_s63ui4},
	{"s641u", __M2N_s641u},
	{"s642u", __M2N_s642u},
	{"s64u", __M2N_s64u},
	{"s64us28", __M2N_s64us28},
	{"s65u", __M2N_s65u},
	{"s65ui4", __M2N_s65ui4},
	{"s66u", __M2N_s66u},
	{"s670ui4s68", __M2N_s670ui4s68},
	{"s679u", __M2N_s679u},
	{"s682u", __M2N_s682u},
	{"s682uu", __M2N_s682uu},
	{"s683ui4", __M2N_s683ui4},
	{"s688u", __M2N_s688u},
	{"s68i4", __M2N_s68i4},
	{"s68u", __M2N_s68u},
	{"s68ui4", __M2N_s68ui4},
	{"s690u", __M2N_s690u},
	{"s6u", __M2N_s6u},
	{"s6ui4", __M2N_s6ui4},
	{"s6uu", __M2N_s6uu},
	{"s703u", __M2N_s703u},
	{"s704u", __M2N_s704u},
	{"s705u", __M2N_s705u},
	{"s706s24u", __M2N_s706s24u},
	{"s706s272u", __M2N_s706s272u},
	{"s706s427u", __M2N_s706s427u},
	{"s706s510u", __M2N_s706s510u},
	{"s706ui4u", __M2N_s706ui4u},
	{"s707s24", __M2N_s707s24},
	{"s707s272", __M2N_s707s272},
	{"s707s427", __M2N_s707s427},
	{"s707s510", __M2N_s707s510},
	{"s707ui4", __M2N_s707ui4},
	{"s707ui4s100", __M2N_s707ui4s100},
	{"s70u", __M2N_s70u},
	{"s743u", __M2N_s743u},
	{"s744u", __M2N_s744u},
	{"s746s144s144", __M2N_s746s144s144},
	{"s746s144s144r4", __M2N_s746s144s144r4},
	{"s746s144s144r4i4", __M2N_s746s144s144r4i4},
	{"s746s144s144r4i4r4", __M2N_s746s144s144r4i4r4},
	{"s746s144s144r4i4r4r4", __M2N_s746s144s144r4i4r4r4},
	{"s746us144s144r4i4", __M2N_s746us144s144r4i4},
	{"s746us144s144r4s429", __M2N_s746us144s144r4s429},
	{"s747", __M2N_s747},
	{"s748i4", __M2N_s748i4},
	{"s754", __M2N_s754},
	{"s758", __M2N_s758},
	{"s758u", __M2N_s758u},
	{"s763i", __M2N_s763i},
	{"s763u", __M2N_s763u},
	{"s763ui4", __M2N_s763ui4},
	{"s77u", __M2N_s77u},
	{"s77ui4", __M2N_s77ui4},
	{"s78u", __M2N_s78u},
	{"s78ui4", __M2N_s78ui4},
	{"s79ui4", __M2N_s79ui4},
	{"s81u", __M2N_s81u},
	{"s82", __M2N_s82},
	{"s82u1", __M2N_s82u1},
	{"s82uu1", __M2N_s82uu1},
	{"s83i1", __M2N_s83i1},
	{"s83i2", __M2N_s83i2},
	{"s83i4", __M2N_s83i4},
	{"s83i8", __M2N_s83i8},
	{"s83r4", __M2N_s83r4},
	{"s83r8", __M2N_s83r8},
	{"s83s83i4", __M2N_s83s83i4},
	{"s83u", __M2N_s83u},
	{"s83u1", __M2N_s83u1},
	{"s83u2", __M2N_s83u2},
	{"s83u4", __M2N_s83u4},
	{"s83u8", __M2N_s83u8},
	{"s83ui4u", __M2N_s83ui4u},
	{"s83uu", __M2N_s83uu},
	{"s84i8", __M2N_s84i8},
	{"s84s30", __M2N_s84s30},
	{"s84u", __M2N_s84u},
	{"s85", __M2N_s85},
	{"s85i4", __M2N_s85i4},
	{"s85i4s38", __M2N_s85i4s38},
	{"s85u", __M2N_s85u},
	{"s85u2", __M2N_s85u2},
	{"s85ui4", __M2N_s85ui4},
	{"s85us38", __M2N_s85us38},
	{"s85uu", __M2N_s85uu},
	{"s86s86", __M2N_s86s86},
	{"s86u", __M2N_s86u},
	{"s86ui4i4", __M2N_s86ui4i4},
	{"s87", __M2N_s87},
	{"s87s87", __M2N_s87s87},
	{"s87s87s87", __M2N_s87s87s87},
	{"s87u", __M2N_s87u},
	{"s8u", __M2N_s8u},
	{"s90", __M2N_s90},
	{"s90u", __M2N_s90u},
	{"s90us761", __M2N_s90us761},
	{"s92u", __M2N_s92u},
	{"s93us86s90", __M2N_s93us86s90},
	{"s94", __M2N_s94},
	{"s94i8", __M2N_s94i8},
	{"s94r8", __M2N_s94r8},
	{"s94s30s30", __M2N_s94s30s30},
	{"s94s94", __M2N_s94s94},
	{"s94s94s94", __M2N_s94s94s94},
	{"s94u", __M2N_s94u},
	{"s94us30", __M2N_s94us30},
	{"s94us94", __M2N_s94us94},
	{"s94uu", __M2N_s94uu},
	{"s95s30i4i4", __M2N_s95s30i4i4},
	{"s95s30i4i4i4", __M2N_s95s30i4i4i4},
	{"s95u", __M2N_s95u},
	{"s9u", __M2N_s9u},
	{"typedbyrefuu", __M2N_typedbyrefuu},
	{"u", __M2N_u},
	{"u1", __M2N_u1},
	{"u1i", __M2N_u1i},
	{"u1i1", __M2N_u1i1},
	{"u1i1i4", __M2N_u1i1i4},
	{"u1i2", __M2N_u1i2},
	{"u1i2i4", __M2N_u1i2i4},
	{"u1i4", __M2N_u1i4},
	{"u1i4i4", __M2N_u1i4i4},
	{"u1i4s31us31u", __M2N_u1i4s31us31u},
	{"u1i4u", __M2N_u1i4u},
	{"u1i4u1", __M2N_u1i4u1},
	{"u1i8", __M2N_u1i8},
	{"u1i8s31us31u", __M2N_u1i8s31us31u},
	{"u1ii", __M2N_u1ii},
	{"u1iis31", __M2N_u1iis31},
	{"u1iiu", __M2N_u1iiu},
	{"u1iu", __M2N_u1iu},
	{"u1iu4iu4", __M2N_u1iu4iu4},
	{"u1r4", __M2N_u1r4},
	{"u1r4r4", __M2N_u1r4r4},
	{"u1r4s31us31u", __M2N_u1r4s31us31u},
	{"u1r8", __M2N_u1r8},
	{"u1r8s31us31u", __M2N_u1r8s31us31u},
	{"u1s1", __M2N_u1s1},
	{"u1s116", __M2N_u1s116},
	{"u1s116r4", __M2N_u1s116r4},
	{"u1s116r4i4", __M2N_u1s116r4i4},
	{"u1s116r4i4i4", __M2N_u1s116r4i4i4},
	{"u1s116u", __M2N_u1s116u},
	{"u1s116ur4", __M2N_u1s116ur4},
	{"u1s116ur4i4", __M2N_u1s116ur4i4},
	{"u1s116ur4i4i4", __M2N_u1s116ur4i4i4},
	{"u1s120", __M2N_u1s120},
	{"u1s120s120u1", __M2N_u1s120s120u1},
	{"u1s124", __M2N_u1s124},
	{"u1s124s124u1", __M2N_u1s124s124u1},
	{"u1s128", __M2N_u1s128},
	{"u1s128s128u1", __M2N_u1s128s128u1},
	{"u1s132", __M2N_u1s132},
	{"u1s136", __M2N_u1s136},
	{"u1s140", __M2N_u1s140},
	{"u1s144", __M2N_u1s144},
	{"u1s144s144", __M2N_u1s144s144},
	{"u1s148", __M2N_u1s148},
	{"u1s148s148", __M2N_u1s148s148},
	{"u1s148s148r4", __M2N_u1s148s148r4},
	{"u1s148s148r4i4", __M2N_u1s148s148r4i4},
	{"u1s148s148r4i4i4", __M2N_u1s148s148r4i4i4},
	{"u1s148s148u", __M2N_u1s148s148u},
	{"u1s148s148ur4", __M2N_u1s148s148ur4},
	{"u1s148s148ur4i4", __M2N_u1s148s148ur4i4},
	{"u1s148s148ur4i4i4", __M2N_u1s148s148ur4i4i4},
	{"u1s152", __M2N_u1s152},
	{"u1s152u1uu", __M2N_u1s152u1uu},
	{"u1s152uu", __M2N_u1s152uu},
	{"u1s156s156", __M2N_u1s156s156},
	{"u1s173", __M2N_u1s173},
	{"u1s177", __M2N_u1s177},
	{"u1s181", __M2N_u1s181},
	{"u1s1s1", __M2N_u1s1s1},
	{"u1s201s201", __M2N_u1s201s201},
	{"u1s205s205", __M2N_u1s205s205},
	{"u1s24s24", __M2N_u1s24s24},
	{"u1s24u", __M2N_u1s24u},
	{"u1s272s272", __M2N_u1s272s272},
	{"u1s272u", __M2N_u1s272u},
	{"u1s273u", __M2N_u1s273u},
	{"u1s28s28", __M2N_u1s28s28},
	{"u1s30", __M2N_u1s30},
	{"u1s30s30", __M2N_u1s30s30},
	{"u1s31", __M2N_u1s31},
	{"u1s314s314", __M2N_u1s314s314},
	{"u1s319", __M2N_u1s319},
	{"u1s319i4", __M2N_u1s319i4},
	{"u1s31i4u", __M2N_u1s31i4u},
	{"u1s31i4uu", __M2N_u1s31i4uu},
	{"u1s31s31", __M2N_u1s31s31},
	{"u1s31s31i4", __M2N_u1s31s31i4},
	{"u1s31s31u", __M2N_u1s31s31u},
	{"u1s31s31u1", __M2N_u1s31s31u1},
	{"u1s31u", __M2N_u1s31u},
	{"u1s31u4", __M2N_u1s31u4},
	{"u1s320", __M2N_u1s320},
	{"u1s320i4", __M2N_u1s320i4},
	{"u1s34", __M2N_u1s34},
	{"u1s34s34", __M2N_u1s34s34},
	{"u1s35s35", __M2N_u1s35s35},
	{"u1s36s36", __M2N_u1s36s36},
	{"u1s38", __M2N_u1s38},
	{"u1s39", __M2N_u1s39},
	{"u1s510s24", __M2N_u1s510s24},
	{"u1s510s510", __M2N_u1s510s510},
	{"u1s510u", __M2N_u1s510u},
	{"u1s6s6", __M2N_u1s6s6},
	{"u1s763s763", __M2N_u1s763s763},
	{"u1s79s79", __M2N_u1s79s79},
	{"u1s83", __M2N_u1s83},
	{"u1s83s31us31u", __M2N_u1s83s31us31u},
	{"u1s83s83", __M2N_u1s83s83},
	{"u1s85", __M2N_u1s85},
	{"u1s85s85", __M2N_u1s85s85},
	{"u1s86u", __M2N_u1s86u},
	{"u1s87s87", __M2N_u1s87s87},
	{"u1s90s90", __M2N_u1s90s90},
	{"u1s94s94", __M2N_u1s94s94},
	{"u1s95s95", __M2N_u1s95s95},
	{"u1u", __M2N_u1u},
	{"u1u1", __M2N_u1u1},
	{"u1u1i1", __M2N_u1u1i1},
	{"u1u1i4", __M2N_u1u1i4},
	{"u1u1u1", __M2N_u1u1u1},
	{"u1u1uu", __M2N_u1u1uu},
	{"u1u2", __M2N_u1u2},
	{"u1u2i4", __M2N_u1u2i4},
	{"u1u2u", __M2N_u1u2u},
	{"u1u2u2", __M2N_u1u2u2},
	{"u1u4", __M2N_u1u4},
	{"u1u4s31us31u", __M2N_u1u4s31us31u},
	{"u1u8", __M2N_u1u8},
	{"u1u8i4", __M2N_u1u8i4},
	{"u1u8s31us31u", __M2N_u1u8s31us31u},
	{"u1u8u8", __M2N_u1u8u8},
	{"u1ui", __M2N_u1ui},
	{"u1ui1", __M2N_u1ui1},
	{"u1ui1i1", __M2N_u1ui1i1},
	{"u1ui2", __M2N_u1ui2},
	{"u1ui2i2", __M2N_u1ui2i2},
	{"u1ui4", __M2N_u1ui4},
	{"u1ui4i", __M2N_u1ui4i},
	{"u1ui4i4", __M2N_u1ui4i4},
	{"u1ui4i4i4", __M2N_u1ui4i4i4},
	{"u1ui4i4u", __M2N_u1ui4i4u},
	{"u1ui4i4u1", __M2N_u1ui4i4u1},
	{"u1ui4i4u1s68", __M2N_u1ui4i4u1s68},
	{"u1ui4i8", __M2N_u1ui4i8},
	{"u1ui4r4", __M2N_u1ui4r4},
	{"u1ui4s1", __M2N_u1ui4s1},
	{"u1ui4s38", __M2N_u1ui4s38},
	{"u1ui4s38i4", __M2N_u1ui4s38i4},
	{"u1ui4s38u1s68", __M2N_u1ui4s38u1s68},
	{"u1ui4s39", __M2N_u1ui4s39},
	{"u1ui4s39u1", __M2N_u1ui4s39u1},
	{"u1ui4s40", __M2N_u1ui4s40},
	{"u1ui4s40u1", __M2N_u1ui4s40u1},
	{"u1ui4s6", __M2N_u1ui4s6},
	{"u1ui4s6u1", __M2N_u1ui4s6u1},
	{"u1ui4s90", __M2N_u1ui4s90},
	{"u1ui4u", __M2N_u1ui4u},
	{"u1ui4u1", __M2N_u1ui4u1},
	{"u1ui4ui4", __M2N_u1ui4ui4},
	{"u1ui4uu", __M2N_u1ui4uu},
	{"u1ui4uu1", __M2N_u1ui4uu1},
	{"u1ui4uu1s68", __M2N_u1ui4uu1s68},
	{"u1ui8", __M2N_u1ui8},
	{"u1ui8i8", __M2N_u1ui8i8},
	{"u1ui8u", __M2N_u1ui8u},
	{"u1uii", __M2N_u1uii},
	{"u1uiu", __M2N_u1uiu},
	{"u1ur4", __M2N_u1ur4},
	{"u1ur8", __M2N_u1ur8},
	{"u1us0", __M2N_u1us0},
	{"u1us0s0", __M2N_u1us0s0},
	{"u1us1", __M2N_u1us1},
	{"u1us100", __M2N_u1us100},
	{"u1us101", __M2N_u1us101},
	{"u1us102", __M2N_u1us102},
	{"u1us103", __M2N_u1us103},
	{"u1us104", __M2N_u1us104},
	{"u1us105", __M2N_u1us105},
	{"u1us106", __M2N_u1us106},
	{"u1us107", __M2N_u1us107},
	{"u1us108", __M2N_u1us108},
	{"u1us109", __M2N_u1us109},
	{"u1us110", __M2N_u1us110},
	{"u1us111", __M2N_u1us111},
	{"u1us114", __M2N_u1us114},
	{"u1us115", __M2N_u1us115},
	{"u1us116", __M2N_u1us116},
	{"u1us117", __M2N_u1us117},
	{"u1us118", __M2N_u1us118},
	{"u1us119", __M2N_u1us119},
	{"u1us120", __M2N_u1us120},
	{"u1us121", __M2N_u1us121},
	{"u1us122", __M2N_u1us122},
	{"u1us123", __M2N_u1us123},
	{"u1us124", __M2N_u1us124},
	{"u1us125", __M2N_u1us125},
	{"u1us126", __M2N_u1us126},
	{"u1us127", __M2N_u1us127},
	{"u1us128", __M2N_u1us128},
	{"u1us129", __M2N_u1us129},
	{"u1us130", __M2N_u1us130},
	{"u1us131", __M2N_u1us131},
	{"u1us132", __M2N_u1us132},
	{"u1us133", __M2N_u1us133},
	{"u1us134", __M2N_u1us134},
	{"u1us135", __M2N_u1us135},
	{"u1us136", __M2N_u1us136},
	{"u1us137", __M2N_u1us137},
	{"u1us138", __M2N_u1us138},
	{"u1us139", __M2N_u1us139},
	{"u1us140", __M2N_u1us140},
	{"u1us141", __M2N_u1us141},
	{"u1us142", __M2N_u1us142},
	{"u1us143", __M2N_u1us143},
	{"u1us144", __M2N_u1us144},
	{"u1us146", __M2N_u1us146},
	{"u1us147", __M2N_u1us147},
	{"u1us148", __M2N_u1us148},
	{"u1us148s148r4i4i4", __M2N_u1us148s148r4i4i4},
	{"u1us148s148ur4i4i4", __M2N_u1us148s148ur4i4i4},
	{"u1us149", __M2N_u1us149},
	{"u1us150", __M2N_u1us150},
	{"u1us151", __M2N_u1us151},
	{"u1us152", __M2N_u1us152},
	{"u1us153", __M2N_u1us153},
	{"u1us154", __M2N_u1us154},
	{"u1us155", __M2N_u1us155},
	{"u1us156", __M2N_u1us156},
	{"u1us157", __M2N_u1us157},
	{"u1us158", __M2N_u1us158},
	{"u1us159", __M2N_u1us159},
	{"u1us16", __M2N_u1us16},
	{"u1us161", __M2N_u1us161},
	{"u1us162", __M2N_u1us162},
	{"u1us163", __M2N_u1us163},
	{"u1us165", __M2N_u1us165},
	{"u1us166", __M2N_u1us166},
	{"u1us167", __M2N_u1us167},
	{"u1us169", __M2N_u1us169},
	{"u1us170", __M2N_u1us170},
	{"u1us171", __M2N_u1us171},
	{"u1us172", __M2N_u1us172},
	{"u1us173", __M2N_u1us173},
	{"u1us174", __M2N_u1us174},
	{"u1us175", __M2N_u1us175},
	{"u1us176", __M2N_u1us176},
	{"u1us177", __M2N_u1us177},
	{"u1us178", __M2N_u1us178},
	{"u1us179", __M2N_u1us179},
	{"u1us180", __M2N_u1us180},
	{"u1us181", __M2N_u1us181},
	{"u1us182", __M2N_u1us182},
	{"u1us193", __M2N_u1us193},
	{"u1us1s1", __M2N_u1us1s1},
	{"u1us1uu", __M2N_u1us1uu},
	{"u1us201", __M2N_u1us201},
	{"u1us202", __M2N_u1us202},
	{"u1us205", __M2N_u1us205},
	{"u1us21", __M2N_u1us21},
	{"u1us213", __M2N_u1us213},
	{"u1us216", __M2N_u1us216},
	{"u1us217", __M2N_u1us217},
	{"u1us218", __M2N_u1us218},
	{"u1us21s21", __M2N_u1us21s21},
	{"u1us226", __M2N_u1us226},
	{"u1us229", __M2N_u1us229},
	{"u1us230", __M2N_u1us230},
	{"u1us231", __M2N_u1us231},
	{"u1us24", __M2N_u1us24},
	{"u1us248", __M2N_u1us248},
	{"u1us249", __M2N_u1us249},
	{"u1us24s24", __M2N_u1us24s24},
	{"u1us250", __M2N_u1us250},
	{"u1us251", __M2N_u1us251},
	{"u1us252", __M2N_u1us252},
	{"u1us253", __M2N_u1us253},
	{"u1us254", __M2N_u1us254},
	{"u1us26", __M2N_u1us26},
	{"u1us26s26", __M2N_u1us26s26},
	{"u1us27", __M2N_u1us27},
	{"u1us27s27", __M2N_u1us27s27},
	{"u1us28", __M2N_u1us28},
	{"u1us28s28", __M2N_u1us28s28},
	{"u1us28u", __M2N_u1us28u},
	{"u1us28uu1", __M2N_u1us28uu1},
	{"u1us3", __M2N_u1us3},
	{"u1us30", __M2N_u1us30},
	{"u1us31", __M2N_u1us31},
	{"u1us313", __M2N_u1us313},
	{"u1us31i4u", __M2N_u1us31i4u},
	{"u1us31s31u", __M2N_u1us31s31u},
	{"u1us31u", __M2N_u1us31u},
	{"u1us31us31", __M2N_u1us31us31},
	{"u1us31us31u", __M2N_u1us31us31u},
	{"u1us34", __M2N_u1us34},
	{"u1us34s34", __M2N_u1us34s34},
	{"u1us35", __M2N_u1us35},
	{"u1us35i4", __M2N_u1us35i4},
	{"u1us35s35", __M2N_u1us35s35},
	{"u1us35u", __M2N_u1us35u},
	{"u1us35ui4", __M2N_u1us35ui4},
	{"u1us35uu1", __M2N_u1us35uu1},
	{"u1us36", __M2N_u1us36},
	{"u1us36s36", __M2N_u1us36s36},
	{"u1us36u", __M2N_u1us36u},
	{"u1us36uu1", __M2N_u1us36uu1},
	{"u1us38", __M2N_u1us38},
	{"u1us38s38", __M2N_u1us38s38},
	{"u1us38u", __M2N_u1us38u},
	{"u1us38uu1", __M2N_u1us38uu1},
	{"u1us39", __M2N_u1us39},
	{"u1us39s39", __M2N_u1us39s39},
	{"u1us3s3", __M2N_u1us3s3},
	{"u1us40", __M2N_u1us40},
	{"u1us40s40", __M2N_u1us40s40},
	{"u1us41", __M2N_u1us41},
	{"u1us41s41", __M2N_u1us41s41},
	{"u1us42", __M2N_u1us42},
	{"u1us42s42", __M2N_u1us42s42},
	{"u1us43", __M2N_u1us43},
	{"u1us43s43", __M2N_u1us43s43},
	{"u1us44", __M2N_u1us44},
	{"u1us45", __M2N_u1us45},
	{"u1us47", __M2N_u1us47},
	{"u1us48", __M2N_u1us48},
	{"u1us51", __M2N_u1us51},
	{"u1us510", __M2N_u1us510},
	{"u1us51s51", __M2N_u1us51s51},
	{"u1us52", __M2N_u1us52},
	{"u1us53", __M2N_u1us53},
	{"u1us54", __M2N_u1us54},
	{"u1us55", __M2N_u1us55},
	{"u1us57", __M2N_u1us57},
	{"u1us58", __M2N_u1us58},
	{"u1us59", __M2N_u1us59},
	{"u1us6", __M2N_u1us6},
	{"u1us61", __M2N_u1us61},
	{"u1us62", __M2N_u1us62},
	{"u1us62s62", __M2N_u1us62s62},
	{"u1us63", __M2N_u1us63},
	{"u1us63s63", __M2N_u1us63s63},
	{"u1us64s64", __M2N_u1us64s64},
	{"u1us65", __M2N_u1us65},
	{"u1us65s65", __M2N_u1us65s65},
	{"u1us66", __M2N_u1us66},
	{"u1us66s66", __M2N_u1us66s66},
	{"u1us68", __M2N_u1us68},
	{"u1us68s68", __M2N_u1us68s68},
	{"u1us69", __M2N_u1us69},
	{"u1us69s69", __M2N_u1us69s69},
	{"u1us6s6", __M2N_u1us6s6},
	{"u1us6u", __M2N_u1us6u},
	{"u1us6uu1", __M2N_u1us6uu1},
	{"u1us70", __M2N_u1us70},
	{"u1us70s70", __M2N_u1us70s70},
	{"u1us763", __M2N_u1us763},
	{"u1us77", __M2N_u1us77},
	{"u1us77s77", __M2N_u1us77s77},
	{"u1us78", __M2N_u1us78},
	{"u1us78s78", __M2N_u1us78s78},
	{"u1us79", __M2N_u1us79},
	{"u1us81", __M2N_u1us81},
	{"u1us82", __M2N_u1us82},
	{"u1us83", __M2N_u1us83},
	{"u1us84", __M2N_u1us84},
	{"u1us85", __M2N_u1us85},
	{"u1us86", __M2N_u1us86},
	{"u1us87", __M2N_u1us87},
	{"u1us88", __M2N_u1us88},
	{"u1us90", __M2N_u1us90},
	{"u1us92", __M2N_u1us92},
	{"u1us93", __M2N_u1us93},
	{"u1us94", __M2N_u1us94},
	{"u1us94s94", __M2N_u1us94s94},
	{"u1us95", __M2N_u1us95},
	{"u1us97", __M2N_u1us97},
	{"u1us98", __M2N_u1us98},
	{"u1us99", __M2N_u1us99},
	{"u1uu", __M2N_u1uu},
	{"u1uu1", __M2N_u1uu1},
	{"u1uu1i4u", __M2N_u1uu1i4u},
	{"u1uu1u", __M2N_u1uu1u},
	{"u1uu1u1", __M2N_u1uu1u1},
	{"u1uu1uu1", __M2N_u1uu1uu1},
	{"u1uu2", __M2N_u1uu2},
	{"u1uu2i4", __M2N_u1uu2i4},
	{"u1uu2u2", __M2N_u1uu2u2},
	{"u1uu2u2i4", __M2N_u1uu2u2i4},
	{"u1uu4", __M2N_u1uu4},
	{"u1uu4i4i4u", __M2N_u1uu4i4i4u},
	{"u1uu8", __M2N_u1uu8},
	{"u1uui4", __M2N_u1uui4},
	{"u1uui4i4", __M2N_u1uui4i4},
	{"u1uui4i4i4", __M2N_u1uui4i4i4},
	{"u1uui4i4u", __M2N_u1uui4i4u},
	{"u1uui4u", __M2N_u1uui4u},
	{"u1uui4u1", __M2N_u1uui4u1},
	{"u1uui4uu1u1u", __M2N_u1uui4uu1u1u},
	{"u1uur4i4r4i4", __M2N_u1uur4i4r4i4},
	{"u1uur4i4r4i4u", __M2N_u1uur4i4r4i4u},
	{"u1uus16", __M2N_u1uus16},
	{"u1uus16u1", __M2N_u1uus16u1},
	{"u1uus17", __M2N_u1uus17},
	{"u1uus17u1", __M2N_u1uus17u1},
	{"u1uus19", __M2N_u1uus19},
	{"u1uus19u1", __M2N_u1uus19u1},
	{"u1uus41", __M2N_u1uus41},
	{"u1uus41u1", __M2N_u1uus41u1},
	{"u1uus42", __M2N_u1uus42},
	{"u1uus42u1", __M2N_u1uus42u1},
	{"u1uus43", __M2N_u1uus43},
	{"u1uus43u1", __M2N_u1uus43u1},
	{"u1uus6", __M2N_u1uus6},
	{"u1uus6u1", __M2N_u1uus6u1},
	{"u1uus86", __M2N_u1uus86},
	{"u1uuu", __M2N_u1uuu},
	{"u1uuu1", __M2N_u1uuu1},
	{"u1uuu1i4", __M2N_u1uuu1i4},
	{"u1uuu1i4r4u", __M2N_u1uuu1i4r4u},
	{"u1uuu1u1r4i4", __M2N_u1uuu1u1r4i4},
	{"u1uuu1u1r4u", __M2N_u1uuu1u1r4u},
	{"u1uuu1u1s68", __M2N_u1uuu1u1s68},
	{"u1uuu2u2u2", __M2N_u1uuu2u2u2},
	{"u1uuu2u2u2u2u2u2u2u2", __M2N_u1uuu2u2u2u2u2u2u2u2},
	{"u1uuu8", __M2N_u1uuu8},
	{"u1uuui4", __M2N_u1uuui4},
	{"u1uuui4i4", __M2N_u1uuui4i4},
	{"u1uuui4i4i4", __M2N_u1uuui4i4i4},
	{"u1uuui4i4u", __M2N_u1uuui4i4u},
	{"u1uuuu", __M2N_u1uuuu},
	{"u1uuuu1", __M2N_u1uuuu1},
	{"u1uuuu1s68", __M2N_u1uuuu1s68},
	{"u1uuuu1u", __M2N_u1uuuu1u},
	{"u1uuuui4i4u", __M2N_u1uuuui4i4u},
	{"u1uuuuu", __M2N_u1uuuuu},
	{"u1uuuuuu", __M2N_u1uuuuuu},
	{"u2", __M2N_u2},
	{"u2i", __M2N_u2i},
	{"u2i1", __M2N_u2i1},
	{"u2i2", __M2N_u2i2},
	{"u2i2i4", __M2N_u2i2i4},
	{"u2i4", __M2N_u2i4},
	{"u2i4i4", __M2N_u2i4i4},
	{"u2i8", __M2N_u2i8},
	{"u2ii", __M2N_u2ii},
	{"u2iis31", __M2N_u2iis31},
	{"u2iiu", __M2N_u2iiu},
	{"u2r4", __M2N_u2r4},
	{"u2r8", __M2N_u2r8},
	{"u2s319", __M2N_u2s319},
	{"u2s319i4", __M2N_u2s319i4},
	{"u2s320", __M2N_u2s320},
	{"u2s320i4", __M2N_u2s320i4},
	{"u2s83", __M2N_u2s83},
	{"u2u", __M2N_u2u},
	{"u2u1", __M2N_u2u1},
	{"u2u2", __M2N_u2u2},
	{"u2u2i2", __M2N_u2u2i2},
	{"u2u2i4", __M2N_u2u2i4},
	{"u2u2u2", __M2N_u2u2u2},
	{"u2u4", __M2N_u2u4},
	{"u2u4i4", __M2N_u2u4i4},
	{"u2u8", __M2N_u2u8},
	{"u2ui4", __M2N_u2ui4},
	{"u2ui4u", __M2N_u2ui4u},
	{"u2uiu", __M2N_u2uiu},
	{"u2uu", __M2N_u2uu},
	{"u2uu2", __M2N_u2uu2},
	{"u2uuu", __M2N_u2uuu},
	{"u4", __M2N_u4},
	{"u4i1", __M2N_u4i1},
	{"u4i2", __M2N_u4i2},
	{"u4i4", __M2N_u4i4},
	{"u4i4i4", __M2N_u4i4i4},
	{"u4i8", __M2N_u4i8},
	{"u4i8i4", __M2N_u4i8i4},
	{"u4r4", __M2N_u4r4},
	{"u4r4i4", __M2N_u4r4i4},
	{"u4r4r4", __M2N_u4r4r4},
	{"u4r8", __M2N_u4r8},
	{"u4s1", __M2N_u4s1},
	{"u4s116", __M2N_u4s116},
	{"u4s117", __M2N_u4s117},
	{"u4s118", __M2N_u4s118},
	{"u4s119", __M2N_u4s119},
	{"u4s120", __M2N_u4s120},
	{"u4s121", __M2N_u4s121},
	{"u4s122", __M2N_u4s122},
	{"u4s123", __M2N_u4s123},
	{"u4s124", __M2N_u4s124},
	{"u4s125", __M2N_u4s125},
	{"u4s126", __M2N_u4s126},
	{"u4s127", __M2N_u4s127},
	{"u4s128", __M2N_u4s128},
	{"u4s129", __M2N_u4s129},
	{"u4s130", __M2N_u4s130},
	{"u4s131", __M2N_u4s131},
	{"u4s132", __M2N_u4s132},
	{"u4s133", __M2N_u4s133},
	{"u4s134", __M2N_u4s134},
	{"u4s135", __M2N_u4s135},
	{"u4s136", __M2N_u4s136},
	{"u4s137", __M2N_u4s137},
	{"u4s138", __M2N_u4s138},
	{"u4s139", __M2N_u4s139},
	{"u4s140", __M2N_u4s140},
	{"u4s141", __M2N_u4s141},
	{"u4s142", __M2N_u4s142},
	{"u4s143", __M2N_u4s143},
	{"u4s144", __M2N_u4s144},
	{"u4s146", __M2N_u4s146},
	{"u4s147", __M2N_u4s147},
	{"u4s148", __M2N_u4s148},
	{"u4s149", __M2N_u4s149},
	{"u4s150", __M2N_u4s150},
	{"u4s151", __M2N_u4s151},
	{"u4s152", __M2N_u4s152},
	{"u4s153", __M2N_u4s153},
	{"u4s154", __M2N_u4s154},
	{"u4s155", __M2N_u4s155},
	{"u4s156", __M2N_u4s156},
	{"u4s157", __M2N_u4s157},
	{"u4s158", __M2N_u4s158},
	{"u4s159", __M2N_u4s159},
	{"u4s161", __M2N_u4s161},
	{"u4s162", __M2N_u4s162},
	{"u4s163", __M2N_u4s163},
	{"u4s165", __M2N_u4s165},
	{"u4s166", __M2N_u4s166},
	{"u4s167", __M2N_u4s167},
	{"u4s169", __M2N_u4s169},
	{"u4s170", __M2N_u4s170},
	{"u4s171", __M2N_u4s171},
	{"u4s172", __M2N_u4s172},
	{"u4s173", __M2N_u4s173},
	{"u4s173s173", __M2N_u4s173s173},
	{"u4s173s173u1", __M2N_u4s173s173u1},
	{"u4s174", __M2N_u4s174},
	{"u4s175", __M2N_u4s175},
	{"u4s176", __M2N_u4s176},
	{"u4s177", __M2N_u4s177},
	{"u4s177s177", __M2N_u4s177s177},
	{"u4s177s177u1", __M2N_u4s177s177u1},
	{"u4s178", __M2N_u4s178},
	{"u4s179", __M2N_u4s179},
	{"u4s180", __M2N_u4s180},
	{"u4s181", __M2N_u4s181},
	{"u4s181s181", __M2N_u4s181s181},
	{"u4s181s181u1", __M2N_u4s181s181u1},
	{"u4s313", __M2N_u4s313},
	{"u4s319", __M2N_u4s319},
	{"u4s319i4", __M2N_u4s319i4},
	{"u4s320", __M2N_u4s320},
	{"u4s320i4", __M2N_u4s320i4},
	{"u4s38", __M2N_u4s38},
	{"u4s39", __M2N_u4s39},
	{"u4s83", __M2N_u4s83},
	{"u4u", __M2N_u4u},
	{"u4u1", __M2N_u4u1},
	{"u4u2", __M2N_u4u2},
	{"u4u4", __M2N_u4u4},
	{"u4u4i4", __M2N_u4u4i4},
	{"u4u4u", __M2N_u4u4u},
	{"u4u4u1", __M2N_u4u4u1},
	{"u4u4u2", __M2N_u4u4u2},
	{"u4u4u4", __M2N_u4u4u4},
	{"u4u4u4u", __M2N_u4u4u4u},
	{"u4u4u4u1", __M2N_u4u4u4u1},
	{"u4u4u4u4", __M2N_u4u4u4u4},
	{"u4u4u8", __M2N_u4u4u8},
	{"u4u4ui4i4", __M2N_u4u4ui4i4},
	{"u4u8", __M2N_u4u8},
	{"u4u8i4", __M2N_u4u8i4},
	{"u4ui4", __M2N_u4ui4},
	{"u4ui4i4", __M2N_u4ui4i4},
	{"u4ui4u", __M2N_u4ui4u},
	{"u4ui4u4", __M2N_u4ui4u4},
	{"u4uu", __M2N_u4uu},
	{"u4uu4", __M2N_u4uu4},
	{"u4uu4u4", __M2N_u4uu4u4},
	{"u4uu4ui4i4", __M2N_u4uu4ui4i4},
	{"u8", __M2N_u8},
	{"u8i1", __M2N_u8i1},
	{"u8i2", __M2N_u8i2},
	{"u8i4", __M2N_u8i4},
	{"u8i8", __M2N_u8i8},
	{"u8i8i4", __M2N_u8i8i4},
	{"u8i8i8", __M2N_u8i8i8},
	{"u8r4", __M2N_u8r4},
	{"u8r8", __M2N_u8r8},
	{"u8r8i4", __M2N_u8r8i4},
	{"u8r8r8", __M2N_u8r8r8},
	{"u8s319", __M2N_u8s319},
	{"u8s319i4", __M2N_u8s319i4},
	{"u8s320", __M2N_u8s320},
	{"u8s320i4", __M2N_u8s320i4},
	{"u8s83", __M2N_u8s83},
	{"u8u", __M2N_u8u},
	{"u8u1", __M2N_u8u1},
	{"u8u2", __M2N_u8u2},
	{"u8u4", __M2N_u8u4},
	{"u8u8", __M2N_u8u8},
	{"u8u8i4", __M2N_u8u8i4},
	{"u8u8i8", __M2N_u8u8i8},
	{"u8u8u4u4", __M2N_u8u8u4u4},
	{"u8u8u8", __M2N_u8u8u8},
	{"u8u8u8i4", __M2N_u8u8u8i4},
	{"u8u8u8u", __M2N_u8u8u8u},
	{"u8u8u8u1", __M2N_u8u8u8u1},
	{"u8u8u8u8", __M2N_u8u8u8u8},
	{"u8ui4", __M2N_u8ui4},
	{"u8ui4i4", __M2N_u8ui4i4},
	{"u8ui4u", __M2N_u8ui4u},
	{"u8uu", __M2N_u8uu},
	{"u8uui8u", __M2N_u8uui8u},
	{"u8uuui8u", __M2N_u8uuui8u},
	{"ui", __M2N_ui},
	{"ui1", __M2N_ui1},
	{"ui2", __M2N_ui2},
	{"ui4", __M2N_ui4},
	{"ui4i4", __M2N_ui4i4},
	{"ui4i4i4", __M2N_ui4i4i4},
	{"ui4i4i4i4i4", __M2N_ui4i4i4i4i4},
	{"ui4i4i4ui4", __M2N_ui4i4i4ui4},
	{"ui4i4uu", __M2N_ui4i4uu},
	{"ui4s252u", __M2N_ui4s252u},
	{"ui4s253u", __M2N_ui4s253u},
	{"ui4s254u", __M2N_ui4s254u},
	{"ui4s31u", __M2N_ui4s31u},
	{"ui4s68i4", __M2N_ui4s68i4},
	{"ui4s90", __M2N_ui4s90},
	{"ui4u", __M2N_ui4u},
	{"ui4ui4", __M2N_ui4ui4},
	{"ui4uu", __M2N_ui4uu},
	{"ui4uu1u", __M2N_ui4uu1u},
	{"ui4uui8u", __M2N_ui4uui8u},
	{"ui4uur4u", __M2N_ui4uur4u},
	{"ui4uuu", __M2N_ui4uuu},
	{"ui4uuu1r4u", __M2N_ui4uuu1r4u},
	{"ui4uuu1ui4i4u", __M2N_ui4uuu1ui4i4u},
	{"ui4uuu1uu", __M2N_ui4uuu1uu},
	{"ui4uuui4i4u", __M2N_ui4uuui4i4u},
	{"ui4uuur4u", __M2N_ui4uuur4u},
	{"ui4uuuu", __M2N_ui4uuuu},
	{"ui4uuuu1uu", __M2N_ui4uuuu1uu},
	{"ui4uuuui4i4u", __M2N_ui4uuuui4i4u},
	{"ui8", __M2N_ui8},
	{"ui8i4i4", __M2N_ui8i4i4},
	{"ui8i4i4i4", __M2N_ui8i4i4i4},
	{"ui8i8u4u4", __M2N_ui8i8u4u4},
	{"ui8s31u", __M2N_ui8s31u},
	{"ui8s68", __M2N_ui8s68},
	{"uii", __M2N_uii},
	{"uiis31", __M2N_uiis31},
	{"uiiu", __M2N_uiiu},
	{"uis763s763", __M2N_uis763s763},
	{"uiu", __M2N_uiu},
	{"ur4", __M2N_ur4},
	{"ur4uu", __M2N_ur4uu},
	{"ur8", __M2N_ur8},
	{"ur8uu", __M2N_ur8uu},
	{"us100", __M2N_us100},
	{"us111", __M2N_us111},
	{"us116", __M2N_us116},
	{"us116r4", __M2N_us116r4},
	{"us116r4i4", __M2N_us116r4i4},
	{"us116r4i4i4", __M2N_us116r4i4i4},
	{"us120", __M2N_us120},
	{"us144", __M2N_us144},
	{"us144s144uu1", __M2N_us144s144uu1},
	{"us148", __M2N_us148},
	{"us148s148", __M2N_us148s148},
	{"us148s148r4", __M2N_us148s148r4},
	{"us148s148r4i4", __M2N_us148s148r4i4},
	{"us148s148r4i4i4", __M2N_us148s148r4i4i4},
	{"us152", __M2N_us152},
	{"us24", __M2N_us24},
	{"us3", __M2N_us3},
	{"us30", __M2N_us30},
	{"us31", __M2N_us31},
	{"us31s31", __M2N_us31s31},
	{"us31s31s31", __M2N_us31s31s31},
	{"us432", __M2N_us432},
	{"us433", __M2N_us433},
	{"us434", __M2N_us434},
	{"us436", __M2N_us436},
	{"us437", __M2N_us437},
	{"us438", __M2N_us438},
	{"us478", __M2N_us478},
	{"us488", __M2N_us488},
	{"us510", __M2N_us510},
	{"us68", __M2N_us68},
	{"us68i4", __M2N_us68i4},
	{"us68i4i4i4", __M2N_us68i4i4i4},
	{"us763", __M2N_us763},
	{"us763s763", __M2N_us763s763},
	{"us83", __M2N_us83},
	{"us83s31u", __M2N_us83s31u},
	{"us85", __M2N_us85},
	{"us85s85", __M2N_us85s85},
	{"us90", __M2N_us90},
	{"us90s90", __M2N_us90s90},
	{"uu", __M2N_uu},
	{"uu1", __M2N_uu1},
	{"uu1r4", __M2N_uu1r4},
	{"uu1u", __M2N_uu1u},
	{"uu2", __M2N_uu2},
	{"uu2u", __M2N_uu2u},
	{"uu4", __M2N_uu4},
	{"uu4s31u", __M2N_uu4s31u},
	{"uu8", __M2N_uu8},
	{"uu8s31u", __M2N_uu8s31u},
	{"uui", __M2N_uui},
	{"uui1", __M2N_uui1},
	{"uui2", __M2N_uui2},
	{"uui2ui4i4", __M2N_uui2ui4i4},
	{"uui4", __M2N_uui4},
	{"uui4i4", __M2N_uui4i4},
	{"uui4i4i4", __M2N_uui4i4i4},
	{"uui4i4i4i8i8uu", __M2N_uui4i4i4i8i8uu},
	{"uui4i4u", __M2N_uui4i4u},
	{"uui4i4u1u4", __M2N_uui4i4u1u4},
	{"uui4r4", __M2N_uui4r4},
	{"uui4r4i4", __M2N_uui4r4i4},
	{"uui4s38u1", __M2N_uui4s38u1},
	{"uui4s90", __M2N_uui4s90},
	{"uui4u", __M2N_uui4u},
	{"uui4u1", __M2N_uui4u1},
	{"uui4u1i4u", __M2N_uui4u1i4u},
	{"uui4u2", __M2N_uui4u2},
	{"uui4ui4uu", __M2N_uui4ui4uu},
	{"uui4uu", __M2N_uui4uu},
	{"uui4uuu", __M2N_uui4uuu},
	{"uui4uuuu", __M2N_uui4uuuu},
	{"uui4uuuuuu", __M2N_uui4uuuuuu},
	{"uui8", __M2N_uui8},
	{"uui8i8", __M2N_uui8i8},
	{"uui8i8i8", __M2N_uui8i8i8},
	{"uui8i8s68", __M2N_uui8i8s68},
	{"uuiu", __M2N_uuiu},
	{"uuiuuu", __M2N_uuiuuu},
	{"uur4", __M2N_uur4},
	{"uur4i4", __M2N_uur4i4},
	{"uur4u", __M2N_uur4u},
	{"uus148s152", __M2N_uus148s152},
	{"uus148s152u", __M2N_uus148s152u},
	{"uus148s152u1", __M2N_uus148s152u1},
	{"uus148s152uu1", __M2N_uus148s152uu1},
	{"uus148u", __M2N_uus148u},
	{"uus26", __M2N_uus26},
	{"uus27", __M2N_uus27},
	{"uus272i4", __M2N_uus272i4},
	{"uus28", __M2N_uus28},
	{"uus28ui4i4uuu", __M2N_uus28ui4i4uuu},
	{"uus28uu1i4i4i4i4uu", __M2N_uus28uu1i4i4i4i4uu},
	{"uus28uui4i4i4uu", __M2N_uus28uui4i4i4uu},
	{"uus28uui4i4uu", __M2N_uus28uui4i4uu},
	{"uus28uuuu", __M2N_uus28uuuu},
	{"uus31", __M2N_uus31},
	{"uus321", __M2N_uus321},
	{"uus34", __M2N_uus34},
	{"uus35", __M2N_uus35},
	{"uus36", __M2N_uus36},
	{"uus38", __M2N_uus38},
	{"uus38i4", __M2N_uus38i4},
	{"uus40uu", __M2N_uus40uu},
	{"uus42", __M2N_uus42},
	{"uus423uu", __M2N_uus423uu},
	{"uus424uu", __M2N_uus424uu},
	{"uus425uu", __M2N_uus425uu},
	{"uus427i4", __M2N_uus427i4},
	{"uus6", __M2N_uus6},
	{"uus66", __M2N_uus66},
	{"uus81", __M2N_uus81},
	{"uus86uu", __M2N_uus86uu},
	{"uus88", __M2N_uus88},
	{"uus94uu", __M2N_uus94uu},
	{"uuu", __M2N_uuu},
	{"uuu1", __M2N_uuu1},
	{"uuu1i4", __M2N_uuu1i4},
	{"uuu1i4i4", __M2N_uuu1i4i4},
	{"uuu1i4i4i4ui4i4i4i4u1u", __M2N_uuu1i4i4i4ui4i4i4i4u1u},
	{"uuu1i4u", __M2N_uuu1i4u},
	{"uuu1u", __M2N_uuu1u},
	{"uuu1u1", __M2N_uuu1u1},
	{"uuu1ui4i4", __M2N_uuu1ui4i4},
	{"uuu1uuu1", __M2N_uuu1uuu1},
	{"uuu2", __M2N_uuu2},
	{"uuu2i4", __M2N_uuu2i4},
	{"uuu2u2", __M2N_uuu2u2},
	{"uuu4", __M2N_uuu4},
	{"uuu4u4", __M2N_uuu4u4},
	{"uuu4u8", __M2N_uuu4u8},
	{"uuu8", __M2N_uuu8},
	{"uuui4", __M2N_uuui4},
	{"uuui4i4", __M2N_uuui4i4},
	{"uuui4i4i4", __M2N_uuui4i4i4},
	{"uuui4i4i4uu", __M2N_uuui4i4i4uu},
	{"uuui4i4i4uuu", __M2N_uuui4i4i4uuu},
	{"uuui4i4s90", __M2N_uuui4i4s90},
	{"uuui4i4u", __M2N_uuui4i4u},
	{"uuui4i4u1u4", __M2N_uuui4i4u1u4},
	{"uuui4i4uu", __M2N_uuui4i4uu},
	{"uuui4i4uuuu1uu1i4i4uu", __M2N_uuui4i4uuuu1uu1i4i4uu},
	{"uuui4r4", __M2N_uuui4r4},
	{"uuui4r4i4", __M2N_uuui4r4i4},
	{"uuui4s30", __M2N_uuui4s30},
	{"uuui4s30uu", __M2N_uuui4s30uu},
	{"uuui4s38u1", __M2N_uuui4s38u1},
	{"uuui4u1i4u", __M2N_uuui4u1i4u},
	{"uuui4ui4uu", __M2N_uuui4ui4uu},
	{"uuui4uu", __M2N_uuui4uu},
	{"uuui4uuu", __M2N_uuui4uuu},
	{"uuui4uuuu", __M2N_uuui4uuuu},
	{"uuui4uuuuuu", __M2N_uuui4uuuuuu},
	{"uuui8uu", __M2N_uuui8uu},
	{"uuur4", __M2N_uuur4},
	{"uuur4i4", __M2N_uuur4i4},
	{"uuur4i4r4i4", __M2N_uuur4i4r4i4},
	{"uuur4uuu", __M2N_uuur4uuu},
	{"uuus16uu", __M2N_uuus16uu},
	{"uuus17uu", __M2N_uuus17uu},
	{"uuus19uu", __M2N_uuus19uu},
	{"uuus26", __M2N_uuus26},
	{"uuus27", __M2N_uuus27},
	{"uuus28", __M2N_uuus28},
	{"uuus38u1", __M2N_uuus38u1},
	{"uuus38u1u4", __M2N_uuus38u1u4},
	{"uuus42u", __M2N_uuus42u},
	{"uuus86uu", __M2N_uuus86uu},
	{"uuuu", __M2N_uuuu},
	{"uuuu1", __M2N_uuuu1},
	{"uuuu1i4i4", __M2N_uuuu1i4i4},
	{"uuuu1i4i4i4", __M2N_uuuu1i4i4i4},
	{"uuuu1i4uuu", __M2N_uuuu1i4uuu},
	{"uuuu1r4i4r4i4", __M2N_uuuu1r4i4r4i4},
	{"uuuu1u", __M2N_uuuu1u},
	{"uuuu1u1", __M2N_uuuu1u1},
	{"uuuu1uu", __M2N_uuuu1uu},
	{"uuuu1uuuu", __M2N_uuuu1uuuu},
	{"uuuu4", __M2N_uuuu4},
	{"uuuui4", __M2N_uuuui4},
	{"uuuui4i4", __M2N_uuuui4i4},
	{"uuuui4i4i4", __M2N_uuuui4i4i4},
	{"uuuui4i4i4i4u1s94", __M2N_uuuui4i4i4i4u1s94},
	{"uuuui4i4r4u", __M2N_uuuui4i4r4u},
	{"uuuui4i4uuu", __M2N_uuuui4i4uuu},
	{"uuuui4r4", __M2N_uuuui4r4},
	{"uuuui4r4i4", __M2N_uuuui4r4i4},
	{"uuuui4r4u", __M2N_uuuui4r4u},
	{"uuuui8uuu", __M2N_uuuui8uuu},
	{"uuuui8uuuu", __M2N_uuuui8uuuu},
	{"uuuur4", __M2N_uuuur4},
	{"uuuur4i4", __M2N_uuuur4i4},
	{"uuuur4i4r4i4", __M2N_uuuur4i4r4i4},
	{"uuuur4uuu", __M2N_uuuur4uuu},
	{"uuuus42u", __M2N_uuuus42u},
	{"uuuus90i4u", __M2N_uuuus90i4u},
	{"uuuus94u1", __M2N_uuuus94u1},
	{"uuuuu", __M2N_uuuuu},
	{"uuuuu1", __M2N_uuuuu1},
	{"uuuuu1u1", __M2N_uuuuu1u1},
	{"uuuuu4", __M2N_uuuuu4},
	{"uuuuuu", __M2N_uuuuuu},
	{"uuuuuuu", __M2N_uuuuuuu},
	{"uuuuuuuu", __M2N_uuuuuuuu},
	{"uuuuuuuuu", __M2N_uuuuuuuuu},
	{"uuuuuuuuuu", __M2N_uuuuuuuuuu},
	{"uuuuuuuuuuu", __M2N_uuuuuuuuuuu},
	{"uuuuuuuuuuuu", __M2N_uuuuuuuuuuuu},
	{"uuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuuuu", __M2N_uuuuuuuuuuuuuuuuuuuu},
	{"v", __M2N_v},
	{"vi", __M2N_vi},
	{"vi2u", __M2N_vi2u},
	{"vi2ui4", __M2N_vi2ui4},
	{"vi4", __M2N_vi4},
	{"vi4i4", __M2N_vi4i4},
	{"vi4i4i4", __M2N_vi4i4i4},
	{"vi4i4i4i4i4", __M2N_vi4i4i4i4i4},
	{"vi4i4s68u", __M2N_vi4i4s68u},
	{"vi4i4u", __M2N_vi4i4u},
	{"vi4i4uuu", __M2N_vi4i4uuu},
	{"vi4i8", __M2N_vi4i8},
	{"vi4u", __M2N_vi4u},
	{"vi4u1", __M2N_vi4u1},
	{"vi4ui4", __M2N_vi4ui4},
	{"vi4uui4i4", __M2N_vi4uui4i4},
	{"vi4uuu8", __M2N_vi4uuu8},
	{"vi8", __M2N_vi8},
	{"vi8u", __M2N_vi8u},
	{"vi8ui4", __M2N_vi8ui4},
	{"vii4i", __M2N_vii4i},
	{"viis31", __M2N_viis31},
	{"viiu", __M2N_viiu},
	{"viu", __M2N_viu},
	{"viui4i4", __M2N_viui4i4},
	{"vr4", __M2N_vr4},
	{"vr4r4", __M2N_vr4r4},
	{"vr4u", __M2N_vr4u},
	{"vr4ui4", __M2N_vr4ui4},
	{"vr4uu", __M2N_vr4uu},
	{"vr8u", __M2N_vr8u},
	{"vr8ui4", __M2N_vr8ui4},
	{"vr8uu", __M2N_vr8uu},
	{"vs111s101", __M2N_vs111s101},
	{"vs111s102", __M2N_vs111s102},
	{"vs111s103", __M2N_vs111s103},
	{"vs111s104", __M2N_vs111s104},
	{"vs111s105", __M2N_vs111s105},
	{"vs111s111", __M2N_vs111s111},
	{"vs111s24", __M2N_vs111s24},
	{"vs111s272", __M2N_vs111s272},
	{"vs111s488", __M2N_vs111s488},
	{"vs111s510", __M2N_vs111s510},
	{"vs111uu", __M2N_vs111uu},
	{"vs132uu", __M2N_vs132uu},
	{"vs136uu", __M2N_vs136uu},
	{"vs140uu", __M2N_vs140uu},
	{"vs144uu", __M2N_vs144uu},
	{"vs148s148", __M2N_vs148s148},
	{"vs148s148s152", __M2N_vs148s148s152},
	{"vs148s148s152r4", __M2N_vs148s148s152r4},
	{"vs148s148s152r4u1", __M2N_vs148s148s152r4u1},
	{"vs148uu", __M2N_vs148uu},
	{"vs152", __M2N_vs152},
	{"vs152uu", __M2N_vs152uu},
	{"vs1i4u", __M2N_vs1i4u},
	{"vs1i4ui4", __M2N_vs1i4ui4},
	{"vs202", __M2N_vs202},
	{"vs24", __M2N_vs24},
	{"vs24i4i4s24i4i4", __M2N_vs24i4i4s24i4i4},
	{"vs24i4s24i4i4", __M2N_vs24i4s24i4i4},
	{"vs24i4ui4i4", __M2N_vs24i4ui4i4},
	{"vs24s100", __M2N_vs24s100},
	{"vs24s24", __M2N_vs24s24},
	{"vs24s24i4", __M2N_vs24s24i4},
	{"vs24u", __M2N_vs24u},
	{"vs24ui4", __M2N_vs24ui4},
	{"vs272", __M2N_vs272},
	{"vs272s100", __M2N_vs272s100},
	{"vs272u", __M2N_vs272u},
	{"vs2i4u", __M2N_vs2i4u},
	{"vs2i4ui4", __M2N_vs2i4ui4},
	{"vs31", __M2N_vs31},
	{"vs3i4u", __M2N_vs3i4u},
	{"vs3i4ui4", __M2N_vs3i4ui4},
	{"vs427", __M2N_vs427},
	{"vs427s100", __M2N_vs427s100},
	{"vs427u", __M2N_vs427u},
	{"vs488s101", __M2N_vs488s101},
	{"vs488s102", __M2N_vs488s102},
	{"vs488s103", __M2N_vs488s103},
	{"vs488s104", __M2N_vs488s104},
	{"vs488s105", __M2N_vs488s105},
	{"vs488s111", __M2N_vs488s111},
	{"vs488s24", __M2N_vs488s24},
	{"vs488s272", __M2N_vs488s272},
	{"vs488s488", __M2N_vs488s488},
	{"vs488s510", __M2N_vs488s510},
	{"vs510", __M2N_vs510},
	{"vs510s100", __M2N_vs510s100},
	{"vs510s510", __M2N_vs510s510},
	{"vs510u", __M2N_vs510u},
	{"vs511", __M2N_vs511},
	{"vs68u", __M2N_vs68u},
	{"vs68ui4", __M2N_vs68ui4},
	{"vs68ui4i4i4", __M2N_vs68ui4i4i4},
	{"vs763", __M2N_vs763},
	{"vs763u", __M2N_vs763u},
	{"vs94", __M2N_vs94},
	{"vtypedbyrefu", __M2N_vtypedbyrefu},
	{"vu", __M2N_vu},
	{"vu1", __M2N_vu1},
	{"vu1u", __M2N_vu1u},
	{"vu1ui4", __M2N_vu1ui4},
	{"vu1uu", __M2N_vu1uu},
	{"vu1uuu", __M2N_vu1uuu},
	{"vu2u", __M2N_vu2u},
	{"vu2ui4", __M2N_vu2ui4},
	{"vu4", __M2N_vu4},
	{"vu4u", __M2N_vu4u},
	{"vu4ui4", __M2N_vu4ui4},
	{"vu8u", __M2N_vu8u},
	{"vu8ui4", __M2N_vu8ui4},
	{"vui", __M2N_vui},
	{"vui1", __M2N_vui1},
	{"vui1i1i1i1i1i1i1i1", __M2N_vui1i1i1i1i1i1i1i1},
	{"vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1", __M2N_vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1},
	{"vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1", __M2N_vui1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1i1},
	{"vui2", __M2N_vui2},
	{"vui2i2i2i2", __M2N_vui2i2i2i2},
	{"vui2i2i2i2i2i2i2i2", __M2N_vui2i2i2i2i2i2i2i2},
	{"vui2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2", __M2N_vui2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2},
	{"vui4", __M2N_vui4},
	{"vui4i", __M2N_vui4i},
	{"vui4i2i2u1u1u1u1u1u1u1u1", __M2N_vui4i2i2u1u1u1u1u1u1u1u1},
	{"vui4i4", __M2N_vui4i4},
	{"vui4i4i4", __M2N_vui4i4i4},
	{"vui4i4i4i4", __M2N_vui4i4i4i4},
	{"vui4i4i4i4i4", __M2N_vui4i4i4i4i4},
	{"vui4i4i4i4i4i", __M2N_vui4i4i4i4i4i},
	{"vui4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4i4i4i4i4i4},
	{"vui4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", __M2N_vui4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4},
	{"vui4i4i4i4i4iu1", __M2N_vui4i4i4i4i4iu1},
	{"vui4i4i4i4i4u1", __M2N_vui4i4i4i4i4u1},
	{"vui4i4i4i4i4u1u1", __M2N_vui4i4i4i4i4u1u1},
	{"vui4i4i4i4u", __M2N_vui4i4i4i4u},
	{"vui4i4i4i4u1", __M2N_vui4i4i4i4u1},
	{"vui4i4i4i4u1i", __M2N_vui4i4i4i4u1i},
	{"vui4i4i4i4u1u1", __M2N_vui4i4i4i4u1u1},
	{"vui4i4i4i4u1u1u1", __M2N_vui4i4i4i4u1u1u1},
	{"vui4i4i4i8i8", __M2N_vui4i4i4i8i8},
	{"vui4i4i4s100", __M2N_vui4i4i4s100},
	{"vui4i4i4s68i4", __M2N_vui4i4i4s68i4},
	{"vui4i4i4u", __M2N_vui4i4i4u},
	{"vui4i4i4u1", __M2N_vui4i4i4u1},
	{"vui4i4i4u1u1", __M2N_vui4i4i4u1u1},
	{"vui4i4i4u1u1u1", __M2N_vui4i4i4u1u1u1},
	{"vui4i4i4ui4", __M2N_vui4i4i4ui4},
	{"vui4i4s100", __M2N_vui4i4s100},
	{"vui4i4s144", __M2N_vui4i4s144},
	{"vui4i4s148", __M2N_vui4i4s148},
	{"vui4i4s151", __M2N_vui4i4s151},
	{"vui4i4s152", __M2N_vui4i4s152},
	{"vui4i4s193", __M2N_vui4i4s193},
	{"vui4i4s202", __M2N_vui4i4s202},
	{"vui4i4s38", __M2N_vui4i4s38},
	{"vui4i4s68", __M2N_vui4i4s68},
	{"vui4i4u", __M2N_vui4i4u},
	{"vui4i4u1", __M2N_vui4i4u1},
	{"vui4i4u1u", __M2N_vui4i4u1u},
	{"vui4i4u1u1", __M2N_vui4i4u1u1},
	{"vui4i4u2", __M2N_vui4i4u2},
	{"vui4i4uu", __M2N_vui4i4uu},
	{"vui4i4uuu", __M2N_vui4i4uuu},
	{"vui4i8", __M2N_vui4i8},
	{"vui4i8i4u", __M2N_vui4i8i4u},
	{"vui4i8i8u1", __M2N_vui4i8i8u1},
	{"vui4ii4", __M2N_vui4ii4},
	{"vui4r4", __M2N_vui4r4},
	{"vui4r4u", __M2N_vui4r4u},
	{"vui4r4uu", __M2N_vui4r4uu},
	{"vui4r8", __M2N_vui4r8},
	{"vui4s0", __M2N_vui4s0},
	{"vui4s1", __M2N_vui4s1},
	{"vui4s100", __M2N_vui4s100},
	{"vui4s116", __M2N_vui4s116},
	{"vui4s144", __M2N_vui4s144},
	{"vui4s148", __M2N_vui4s148},
	{"vui4s151", __M2N_vui4s151},
	{"vui4s152", __M2N_vui4s152},
	{"vui4s156", __M2N_vui4s156},
	{"vui4s193", __M2N_vui4s193},
	{"vui4s202", __M2N_vui4s202},
	{"vui4s21", __M2N_vui4s21},
	{"vui4s24", __M2N_vui4s24},
	{"vui4s24i4i4", __M2N_vui4s24i4i4},
	{"vui4s28", __M2N_vui4s28},
	{"vui4s3", __M2N_vui4s3},
	{"vui4s31i4", __M2N_vui4s31i4},
	{"vui4s34", __M2N_vui4s34},
	{"vui4s38", __M2N_vui4s38},
	{"vui4s38i4", __M2N_vui4s38i4},
	{"vui4s39", __M2N_vui4s39},
	{"vui4s40", __M2N_vui4s40},
	{"vui4s43", __M2N_vui4s43},
	{"vui4s503", __M2N_vui4s503},
	{"vui4s504", __M2N_vui4s504},
	{"vui4s505", __M2N_vui4s505},
	{"vui4s506", __M2N_vui4s506},
	{"vui4s507", __M2N_vui4s507},
	{"vui4s51", __M2N_vui4s51},
	{"vui4s514", __M2N_vui4s514},
	{"vui4s6", __M2N_vui4s6},
	{"vui4s62", __M2N_vui4s62},
	{"vui4s63", __M2N_vui4s63},
	{"vui4s65", __M2N_vui4s65},
	{"vui4s68", __M2N_vui4s68},
	{"vui4s68i4", __M2N_vui4s68i4},
	{"vui4s77", __M2N_vui4s77},
	{"vui4s78", __M2N_vui4s78},
	{"vui4s79", __M2N_vui4s79},
	{"vui4s94u", __M2N_vui4s94u},
	{"vui4u", __M2N_vui4u},
	{"vui4u1", __M2N_vui4u1},
	{"vui4u1i4", __M2N_vui4u1i4},
	{"vui4u2", __M2N_vui4u2},
	{"vui4u4", __M2N_vui4u4},
	{"vui4u8i4", __M2N_vui4u8i4},
	{"vui4ui4", __M2N_vui4ui4},
	{"vui4ui4i4", __M2N_vui4ui4i4},
	{"vui4ui4i4i4", __M2N_vui4ui4i4i4},
	{"vui4ui4i4u1", __M2N_vui4ui4i4u1},
	{"vui4ui4u", __M2N_vui4ui4u},
	{"vui4ui4uu1u", __M2N_vui4ui4uu1u},
	{"vui4uu", __M2N_vui4uu},
	{"vui4uui4", __M2N_vui4uui4},
	{"vui4uui4u", __M2N_vui4uui4u},
	{"vui4uuu", __M2N_vui4uuu},
	{"vui4uuu1u", __M2N_vui4uuu1u},
	{"vui4uuu1u1u", __M2N_vui4uuu1u1u},
	{"vui4uuui4", __M2N_vui4uuui4},
	{"vui4uuui4u", __M2N_vui4uuui4u},
	{"vui4uuuu", __M2N_vui4uuuu},
	{"vui4uuuuu", __M2N_vui4uuuuu},
	{"vui8", __M2N_vui8},
	{"vui8i4", __M2N_vui8i4},
	{"vui8i8", __M2N_vui8i8},
	{"vui8i8i8", __M2N_vui8i8i8},
	{"vui8i8i8i8", __M2N_vui8i8i8i8},
	{"vui8i8i8u", __M2N_vui8i8i8u},
	{"vui8s68", __M2N_vui8s68},
	{"vui8s94", __M2N_vui8s94},
	{"vui8u", __M2N_vui8u},
	{"vui8ui8", __M2N_vui8ui8},
	{"vui8ui8i8", __M2N_vui8ui8i8},
	{"vui8uu", __M2N_vui8uu},
	{"vuii4ii4ii4u1s69", __M2N_vuii4ii4ii4u1s69},
	{"vuii4ii4u1", __M2N_vuii4ii4u1},
	{"vuiiiiiii4u", __M2N_vuiiiiiii4u},
	{"vuiiui4", __M2N_vuiiui4},
	{"vuiu", __M2N_vuiu},
	{"vuiu1", __M2N_vuiu1},
	{"vur4", __M2N_vur4},
	{"vur4i4r4i4i", __M2N_vur4i4r4i4i},
	{"vur4r4", __M2N_vur4r4},
	{"vur4r4i", __M2N_vur4r4i},
	{"vur4r4r4", __M2N_vur4r4r4},
	{"vur4r4r4r4", __M2N_vur4r4r4r4},
	{"vur4r4r4r4r4r4", __M2N_vur4r4r4r4r4r4},
	{"vur4r4r4r4r4r4r4r4", __M2N_vur4r4r4r4r4r4r4r4},
	{"vur4r4r4r4r4r4r4r4r4", __M2N_vur4r4r4r4r4r4r4r4r4},
	{"vur4r4r4r4r4r4r4r4r4r4r4r4", __M2N_vur4r4r4r4r4r4r4r4r4r4r4r4},
	{"vur4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4", __M2N_vur4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4},
	{"vur4r4r4r4u", __M2N_vur4r4r4r4u},
	{"vur4r4r4r4uu", __M2N_vur4r4r4r4uu},
	{"vur4r4s144", __M2N_vur4r4s144},
	{"vur4s144", __M2N_vur4s144},
	{"vur4s144r4", __M2N_vur4s144r4},
	{"vur4s148", __M2N_vur4s148},
	{"vur8", __M2N_vur8},
	{"vur8r8", __M2N_vur8r8},
	{"vur8r8r8", __M2N_vur8r8r8},
	{"vur8r8r8r8", __M2N_vur8r8r8r8},
	{"vur8r8r8r8r8r8", __M2N_vur8r8r8r8r8r8},
	{"vur8r8r8r8r8r8r8r8", __M2N_vur8r8r8r8r8r8r8r8},
	{"vur8r8r8r8r8r8r8r8r8", __M2N_vur8r8r8r8r8r8r8r8r8},
	{"vur8r8r8r8r8r8r8r8r8r8r8r8", __M2N_vur8r8r8r8r8r8r8r8r8r8r8r8},
	{"vur8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8", __M2N_vur8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8},
	{"vur8r8s132", __M2N_vur8r8s132},
	{"vur8s132", __M2N_vur8s132},
	{"vur8s132r8", __M2N_vur8s132r8},
	{"vur8s136", __M2N_vur8s136},
	{"vus0", __M2N_vus0},
	{"vus1", __M2N_vus1},
	{"vus100", __M2N_vus100},
	{"vus101", __M2N_vus101},
	{"vus102", __M2N_vus102},
	{"vus103", __M2N_vus103},
	{"vus104", __M2N_vus104},
	{"vus105", __M2N_vus105},
	{"vus106", __M2N_vus106},
	{"vus107", __M2N_vus107},
	{"vus108", __M2N_vus108},
	{"vus109", __M2N_vus109},
	{"vus110", __M2N_vus110},
	{"vus111", __M2N_vus111},
	{"vus114", __M2N_vus114},
	{"vus116", __M2N_vus116},
	{"vus117", __M2N_vus117},
	{"vus118", __M2N_vus118},
	{"vus119", __M2N_vus119},
	{"vus120", __M2N_vus120},
	{"vus120s120", __M2N_vus120s120},
	{"vus120s120s120", __M2N_vus120s120s120},
	{"vus120s120s120s120", __M2N_vus120s120s120s120},
	{"vus120u1", __M2N_vus120u1},
	{"vus120u1u1", __M2N_vus120u1u1},
	{"vus121", __M2N_vus121},
	{"vus122", __M2N_vus122},
	{"vus123", __M2N_vus123},
	{"vus124", __M2N_vus124},
	{"vus124s124", __M2N_vus124s124},
	{"vus124s124s124", __M2N_vus124s124s124},
	{"vus124s124s124s124", __M2N_vus124s124s124s124},
	{"vus124u1", __M2N_vus124u1},
	{"vus125", __M2N_vus125},
	{"vus126", __M2N_vus126},
	{"vus127", __M2N_vus127},
	{"vus128", __M2N_vus128},
	{"vus128s128", __M2N_vus128s128},
	{"vus128s128s128", __M2N_vus128s128s128},
	{"vus128s128s128s128", __M2N_vus128s128s128s128},
	{"vus129", __M2N_vus129},
	{"vus130", __M2N_vus130},
	{"vus131", __M2N_vus131},
	{"vus132", __M2N_vus132},
	{"vus132r8", __M2N_vus132r8},
	{"vus132r8r8", __M2N_vus132r8r8},
	{"vus132s132", __M2N_vus132s132},
	{"vus132s132s132", __M2N_vus132s132s132},
	{"vus132s132s132s132", __M2N_vus132s132s132s132},
	{"vus133", __M2N_vus133},
	{"vus134", __M2N_vus134},
	{"vus135", __M2N_vus135},
	{"vus136", __M2N_vus136},
	{"vus136r8", __M2N_vus136r8},
	{"vus136s136", __M2N_vus136s136},
	{"vus136s136s136", __M2N_vus136s136s136},
	{"vus136s136s136s136", __M2N_vus136s136s136s136},
	{"vus137", __M2N_vus137},
	{"vus138", __M2N_vus138},
	{"vus139", __M2N_vus139},
	{"vus140", __M2N_vus140},
	{"vus140s140", __M2N_vus140s140},
	{"vus140s140s140", __M2N_vus140s140s140},
	{"vus140s140s140s140", __M2N_vus140s140s140s140},
	{"vus141", __M2N_vus141},
	{"vus142", __M2N_vus142},
	{"vus143", __M2N_vus143},
	{"vus144", __M2N_vus144},
	{"vus144r4", __M2N_vus144r4},
	{"vus144r4r4", __M2N_vus144r4r4},
	{"vus144s144", __M2N_vus144s144},
	{"vus144s144s144", __M2N_vus144s144s144},
	{"vus144s144s144s144", __M2N_vus144s144s144s144},
	{"vus146", __M2N_vus146},
	{"vus146s148", __M2N_vus146s148},
	{"vus147", __M2N_vus147},
	{"vus148", __M2N_vus148},
	{"vus148r4", __M2N_vus148r4},
	{"vus148s148", __M2N_vus148s148},
	{"vus148s148r4r4s478", __M2N_vus148s148r4r4s478},
	{"vus148s148s148", __M2N_vus148s148s148},
	{"vus148s148s148s148", __M2N_vus148s148s148s148},
	{"vus149", __M2N_vus149},
	{"vus150", __M2N_vus150},
	{"vus151", __M2N_vus151},
	{"vus152", __M2N_vus152},
	{"vus152r4r4r4r4uuu1i4u", __M2N_vus152r4r4r4r4uuu1i4u},
	{"vus152s152", __M2N_vus152s152},
	{"vus152s152s152", __M2N_vus152s152s152},
	{"vus152s152s152s152", __M2N_vus152s152s152s152},
	{"vus152u1u1u1u1", __M2N_vus152u1u1u1u1},
	{"vus152ui4u1u1", __M2N_vus152ui4u1u1},
	{"vus152uu1u1u1u1", __M2N_vus152uu1u1u1u1},
	{"vus153", __M2N_vus153},
	{"vus153s153", __M2N_vus153s153},
	{"vus153s156", __M2N_vus153s156},
	{"vus153s156s156", __M2N_vus153s156s156},
	{"vus154", __M2N_vus154},
	{"vus154s156", __M2N_vus154s156},
	{"vus155", __M2N_vus155},
	{"vus156", __M2N_vus156},
	{"vus156s153", __M2N_vus156s153},
	{"vus156s153s156", __M2N_vus156s153s156},
	{"vus156s154", __M2N_vus156s154},
	{"vus156s156", __M2N_vus156s156},
	{"vus156s156s153", __M2N_vus156s156s153},
	{"vus156s156s156", __M2N_vus156s156s156},
	{"vus156s156s156s156", __M2N_vus156s156s156s156},
	{"vus157", __M2N_vus157},
	{"vus158", __M2N_vus158},
	{"vus159", __M2N_vus159},
	{"vus161", __M2N_vus161},
	{"vus162", __M2N_vus162},
	{"vus163", __M2N_vus163},
	{"vus165", __M2N_vus165},
	{"vus166", __M2N_vus166},
	{"vus167", __M2N_vus167},
	{"vus169", __M2N_vus169},
	{"vus169s148", __M2N_vus169s148},
	{"vus170", __M2N_vus170},
	{"vus171", __M2N_vus171},
	{"vus172", __M2N_vus172},
	{"vus173", __M2N_vus173},
	{"vus173s173", __M2N_vus173s173},
	{"vus173s173s173", __M2N_vus173s173s173},
	{"vus173s173s173s173", __M2N_vus173s173s173s173},
	{"vus173u4", __M2N_vus173u4},
	{"vus173u4u4", __M2N_vus173u4u4},
	{"vus174", __M2N_vus174},
	{"vus175", __M2N_vus175},
	{"vus176", __M2N_vus176},
	{"vus177", __M2N_vus177},
	{"vus177s177", __M2N_vus177s177},
	{"vus177s177s177", __M2N_vus177s177s177},
	{"vus177s177s177s177", __M2N_vus177s177s177s177},
	{"vus177u4", __M2N_vus177u4},
	{"vus178", __M2N_vus178},
	{"vus179", __M2N_vus179},
	{"vus180", __M2N_vus180},
	{"vus181", __M2N_vus181},
	{"vus181s181", __M2N_vus181s181},
	{"vus181s181s181", __M2N_vus181s181s181},
	{"vus181s181s181s181", __M2N_vus181s181s181s181},
	{"vus182", __M2N_vus182},
	{"vus182s518", __M2N_vus182s518},
	{"vus182s518u", __M2N_vus182s518u},
	{"vus182uu", __M2N_vus182uu},
	{"vus1i4", __M2N_vus1i4},
	{"vus1s1", __M2N_vus1s1},
	{"vus1s1s1", __M2N_vus1s1s1},
	{"vus1s1s1s1", __M2N_vus1s1s1s1},
	{"vus1u", __M2N_vus1u},
	{"vus1uu", __M2N_vus1uu},
	{"vus202", __M2N_vus202},
	{"vus205", __M2N_vus205},
	{"vus21", __M2N_vus21},
	{"vus213", __M2N_vus213},
	{"vus216", __M2N_vus216},
	{"vus229", __M2N_vus229},
	{"vus231", __M2N_vus231},
	{"vus24", __M2N_vus24},
	{"vus248", __M2N_vus248},
	{"vus24i4", __M2N_vus24i4},
	{"vus24i4i4", __M2N_vus24i4i4},
	{"vus24s24s24", __M2N_vus24s24s24},
	{"vus24u1", __M2N_vus24u1},
	{"vus26", __M2N_vus26},
	{"vus27", __M2N_vus27},
	{"vus272", __M2N_vus272},
	{"vus28", __M2N_vus28},
	{"vus28i4i4", __M2N_vus28i4i4},
	{"vus28s64", __M2N_vus28s64},
	{"vus28u", __M2N_vus28u},
	{"vus28ui4i4u", __M2N_vus28ui4i4u},
	{"vus28uu", __M2N_vus28uu},
	{"vus28uu1i4i4i4i4", __M2N_vus28uu1i4i4i4i4},
	{"vus28uu1i4i4i4i4u", __M2N_vus28uu1i4i4i4i4u},
	{"vus28uu1i4i4i4u1u1", __M2N_vus28uu1i4i4i4u1u1},
	{"vus28uu1i8i4i4i4i4u", __M2N_vus28uu1i8i4i4i4i4u},
	{"vus28uui4i4", __M2N_vus28uui4i4},
	{"vus28uui4i4i4", __M2N_vus28uui4i4i4},
	{"vus3", __M2N_vus3},
	{"vus30", __M2N_vus30},
	{"vus30s30s94", __M2N_vus30s30s94},
	{"vus31", __M2N_vus31},
	{"vus313", __M2N_vus313},
	{"vus319", __M2N_vus319},
	{"vus319s319", __M2N_vus319s319},
	{"vus31i8", __M2N_vus31i8},
	{"vus31s252", __M2N_vus31s252},
	{"vus31s253", __M2N_vus31s253},
	{"vus31s254", __M2N_vus31s254},
	{"vus31u", __M2N_vus31u},
	{"vus320", __M2N_vus320},
	{"vus320s320", __M2N_vus320s320},
	{"vus34", __M2N_vus34},
	{"vus34u1", __M2N_vus34u1},
	{"vus35", __M2N_vus35},
	{"vus35u", __M2N_vus35u},
	{"vus35ui4", __M2N_vus35ui4},
	{"vus36", __M2N_vus36},
	{"vus36u", __M2N_vus36u},
	{"vus36uuuui4uu", __M2N_vus36uuuui4uu},
	{"vus38", __M2N_vus38},
	{"vus38i4", __M2N_vus38i4},
	{"vus38i4i4", __M2N_vus38i4i4},
	{"vus38s38", __M2N_vus38s38},
	{"vus38s38s38", __M2N_vus38s38s38},
	{"vus38s38s38s38", __M2N_vus38s38s38s38},
	{"vus38u", __M2N_vus38u},
	{"vus39", __M2N_vus39},
	{"vus39s39", __M2N_vus39s39},
	{"vus39s39s39", __M2N_vus39s39s39},
	{"vus39s39s39s39", __M2N_vus39s39s39s39},
	{"vus40", __M2N_vus40},
	{"vus41", __M2N_vus41},
	{"vus42", __M2N_vus42},
	{"vus421", __M2N_vus421},
	{"vus421s421", __M2N_vus421s421},
	{"vus423", __M2N_vus423},
	{"vus424", __M2N_vus424},
	{"vus425", __M2N_vus425},
	{"vus427", __M2N_vus427},
	{"vus42u1", __M2N_vus42u1},
	{"vus43", __M2N_vus43},
	{"vus44", __M2N_vus44},
	{"vus45", __M2N_vus45},
	{"vus47", __M2N_vus47},
	{"vus478", __M2N_vus478},
	{"vus479", __M2N_vus479},
	{"vus48", __M2N_vus48},
	{"vus480", __M2N_vus480},
	{"vus482", __M2N_vus482},
	{"vus485", __M2N_vus485},
	{"vus488", __M2N_vus488},
	{"vus490", __M2N_vus490},
	{"vus491", __M2N_vus491},
	{"vus501", __M2N_vus501},
	{"vus508", __M2N_vus508},
	{"vus51", __M2N_vus51},
	{"vus510", __M2N_vus510},
	{"vus513", __M2N_vus513},
	{"vus515i4", __M2N_vus515i4},
	{"vus516", __M2N_vus516},
	{"vus519", __M2N_vus519},
	{"vus52", __M2N_vus52},
	{"vus521", __M2N_vus521},
	{"vus522", __M2N_vus522},
	{"vus522u", __M2N_vus522u},
	{"vus53", __M2N_vus53},
	{"vus54", __M2N_vus54},
	{"vus55", __M2N_vus55},
	{"vus57", __M2N_vus57},
	{"vus58", __M2N_vus58},
	{"vus59", __M2N_vus59},
	{"vus6", __M2N_vus6},
	{"vus61", __M2N_vus61},
	{"vus62", __M2N_vus62},
	{"vus63", __M2N_vus63},
	{"vus65", __M2N_vus65},
	{"vus66", __M2N_vus66},
	{"vus66u1", __M2N_vus66u1},
	{"vus68", __M2N_vus68},
	{"vus68i4", __M2N_vus68i4},
	{"vus6u", __M2N_vus6u},
	{"vus70", __M2N_vus70},
	{"vus763", __M2N_vus763},
	{"vus763u", __M2N_vus763u},
	{"vus763uu", __M2N_vus763uu},
	{"vus77", __M2N_vus77},
	{"vus78", __M2N_vus78},
	{"vus79", __M2N_vus79},
	{"vus81", __M2N_vus81},
	{"vus81u1", __M2N_vus81u1},
	{"vus82", __M2N_vus82},
	{"vus83", __M2N_vus83},
	{"vus84u1", __M2N_vus84u1},
	{"vus85", __M2N_vus85},
	{"vus85i4", __M2N_vus85i4},
	{"vus85i4s85i4", __M2N_vus85i4s85i4},
	{"vus85s24", __M2N_vus85s24},
	{"vus85s273", __M2N_vus85s273},
	{"vus85s85", __M2N_vus85s85},
	{"vus86", __M2N_vus86},
	{"vus90i4i4u", __M2N_vus90i4i4u},
	{"vus92", __M2N_vus92},
	{"vus94", __M2N_vus94},
	{"vutypedbyrefu", __M2N_vutypedbyrefu},
	{"vuu", __M2N_vuu},
	{"vuu1", __M2N_vuu1},
	{"vuu1i1u1u1", __M2N_vuu1i1u1u1},
	{"vuu1i4", __M2N_vuu1i4},
	{"vuu1i4i4", __M2N_vuu1i4i4},
	{"vuu1i4i4i4i4", __M2N_vuu1i4i4i4i4},
	{"vuu1i4i4s90", __M2N_vuu1i4i4s90},
	{"vuu1i4r4u", __M2N_vuu1i4r4u},
	{"vuu1i4u", __M2N_vuu1i4u},
	{"vuu1i8", __M2N_vuu1i8},
	{"vuu1s100i4s90", __M2N_vuu1s100i4s90},
	{"vuu1s120", __M2N_vuu1s120},
	{"vuu1s120u1", __M2N_vuu1s120u1},
	{"vuu1s124", __M2N_vuu1s124},
	{"vuu1u", __M2N_vuu1u},
	{"vuu1u1", __M2N_vuu1u1},
	{"vuu1u1i4", __M2N_vuu1u1i4},
	{"vuu1u1i4s90", __M2N_vuu1u1i4s90},
	{"vuu1u1i4u1", __M2N_vuu1u1i4u1},
	{"vuu1u1s120", __M2N_vuu1u1s120},
	{"vuu1u1u", __M2N_vuu1u1u},
	{"vuu1u1u1", __M2N_vuu1u1u1},
	{"vuu1u1u1u1", __M2N_vuu1u1u1u1},
	{"vuu1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1},
	{"vuu1u1u1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1u1u1},
	{"vuu1u1u1u1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1u1u1u1},
	{"vuu1u1u1u1u1u1u1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1},
	{"vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1},
	{"vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1", __M2N_vuu1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1u1},
	{"vuu1u1u4u4u4", __M2N_vuu1u1u4u4u4},
	{"vuu1u1uuuui4i4u", __M2N_vuu1u1uuuui4i4u},
	{"vuu1u4", __M2N_vuu1u4},
	{"vuu1u8", __M2N_vuu1u8},
	{"vuu1ui4i4i4", __M2N_vuu1ui4i4i4},
	{"vuu1ui4s90", __M2N_vuu1ui4s90},
	{"vuu1uu1u1", __M2N_vuu1uu1u1},
	{"vuu1uuu", __M2N_vuu1uuu},
	{"vuu2", __M2N_vuu2},
	{"vuu2i4", __M2N_vuu2i4},
	{"vuu2i4i4i4i4i4i4i4", __M2N_vuu2i4i4i4i4i4i4i4},
	{"vuu2i4u1u1u1", __M2N_vuu2i4u1u1u1},
	{"vuu2u1u1u1", __M2N_vuu2u1u1u1},
	{"vuu2u2", __M2N_vuu2u2},
	{"vuu2u2u2u2", __M2N_vuu2u2u2u2},
	{"vuu2u2u2u2u2u2u2u2", __M2N_vuu2u2u2u2u2u2u2u2},
	{"vuu2u2u2u2u2u2u2u2u2u2u2u2u2u2u2u2", __M2N_vuu2u2u2u2u2u2u2u2u2u2u2u2u2u2u2u2},
	{"vuu4", __M2N_vuu4},
	{"vuu4i4i4i4", __M2N_vuu4i4i4i4},
	{"vuu4s173", __M2N_vuu4s173},
	{"vuu4s173u4", __M2N_vuu4s173u4},
	{"vuu4s177", __M2N_vuu4s177},
	{"vuu4u4", __M2N_vuu4u4},
	{"vuu4u4s173", __M2N_vuu4u4s173},
	{"vuu4u4u4", __M2N_vuu4u4u4},
	{"vuu4u4u4u4", __M2N_vuu4u4u4u4},
	{"vuu4u4u4u4u4u4", __M2N_vuu4u4u4u4u4u4},
	{"vuu4u4u4u4u4u4u4u4", __M2N_vuu4u4u4u4u4u4u4u4},
	{"vuu4u4u4u4u4u4u4u4u4", __M2N_vuu4u4u4u4u4u4u4u4u4},
	{"vuu4u4u4u4u4u4u4u4u4u4u4u4", __M2N_vuu4u4u4u4u4u4u4u4u4u4u4u4},
	{"vuu4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4", __M2N_vuu4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4},
	{"vuu8", __M2N_vuu8},
	{"vuu8u8", __M2N_vuu8u8},
	{"vuu8u8u8u8", __M2N_vuu8u8u8u8},
	{"vuui", __M2N_vuui},
	{"vuui2", __M2N_vuui2},
	{"vuui4", __M2N_vuui4},
	{"vuui4i1i4", __M2N_vuui4i1i4},
	{"vuui4i2i4", __M2N_vuui4i2i4},
	{"vuui4i4", __M2N_vuui4i4},
	{"vuui4i4i4", __M2N_vuui4i4i4},
	{"vuui4i4i4i4", __M2N_vuui4i4i4i4},
	{"vuui4i4i4i4i4", __M2N_vuui4i4i4i4i4},
	{"vuui4i4i4i4i4i4", __M2N_vuui4i4i4i4i4i4},
	{"vuui4i4i4u", __M2N_vuui4i4i4u},
	{"vuui4i4u", __M2N_vuui4i4u},
	{"vuui4i4u1", __M2N_vuui4i4u1},
	{"vuui4i4u1u1", __M2N_vuui4i4u1u1},
	{"vuui4i4uuuu1uu1i4i4", __M2N_vuui4i4uuuu1uu1i4i4},
	{"vuui4i8i4", __M2N_vuui4i8i4},
	{"vuui4r4i4", __M2N_vuui4r4i4},
	{"vuui4r8i4", __M2N_vuui4r8i4},
	{"vuui4s182", __M2N_vuui4s182},
	{"vuui4s68", __M2N_vuui4s68},
	{"vuui4u", __M2N_vuui4u},
	{"vuui4u1", __M2N_vuui4u1},
	{"vuui4u1i4", __M2N_vuui4u1i4},
	{"vuui4u2i4", __M2N_vuui4u2i4},
	{"vuui4u4i4", __M2N_vuui4u4i4},
	{"vuui4u8i4", __M2N_vuui4u8i4},
	{"vuui4ui4i4", __M2N_vuui4ui4i4},
	{"vuui4uu", __M2N_vuui4uu},
	{"vuui4uuuu", __M2N_vuui4uuuu},
	{"vuui8", __M2N_vuui8},
	{"vuui8i4", __M2N_vuui8i4},
	{"vuui8i8", __M2N_vuui8i8},
	{"vuui8i8i4", __M2N_vuui8i8i4},
	{"vuui8i8i8", __M2N_vuui8i8i8},
	{"vuui8i8s30s30", __M2N_vuui8i8s30s30},
	{"vuui8i8u", __M2N_vuui8i8u},
	{"vuui8u", __M2N_vuui8u},
	{"vuui8ui8uu", __M2N_vuui8ui8uu},
	{"vuui8uu", __M2N_vuui8uu},
	{"vuuiii4i4u", __M2N_vuuiii4i4u},
	{"vuuiiui4", __M2N_vuuiiui4},
	{"vuuis115i4", __M2N_vuuis115i4},
	{"vuuiu", __M2N_vuuiu},
	{"vuur4", __M2N_vuur4},
	{"vuur4i4r4i4uu", __M2N_vuur4i4r4i4uu},
	{"vuur4r4", __M2N_vuur4r4},
	{"vuur4u", __M2N_vuur4u},
	{"vuur8", __M2N_vuur8},
	{"vuus201u4", __M2N_vuus201u4},
	{"vuus24", __M2N_vuus24},
	{"vuus26", __M2N_vuus26},
	{"vuus27", __M2N_vuus27},
	{"vuus28", __M2N_vuus28},
	{"vuus28u", __M2N_vuus28u},
	{"vuus30", __M2N_vuus30},
	{"vuus30s30", __M2N_vuus30s30},
	{"vuus34", __M2N_vuus34},
	{"vuus38u1", __M2N_vuus38u1},
	{"vuus39u1", __M2N_vuus39u1},
	{"vuus41", __M2N_vuus41},
	{"vuus42", __M2N_vuus42},
	{"vuus421", __M2N_vuus421},
	{"vuus43", __M2N_vuus43},
	{"vuus520i4", __M2N_vuus520i4},
	{"vuus520i4s182", __M2N_vuus520i4s182},
	{"vuus6", __M2N_vuus6},
	{"vuus68", __M2N_vuus68},
	{"vuus763u", __M2N_vuus763u},
	{"vuus90", __M2N_vuus90},
	{"vuuu", __M2N_vuuu},
	{"vuuu1", __M2N_vuuu1},
	{"vuuu1i4", __M2N_vuuu1i4},
	{"vuuu1i4i4", __M2N_vuuu1i4i4},
	{"vuuu1i4i4i4i4", __M2N_vuuu1i4i4i4i4},
	{"vuuu1i4u", __M2N_vuuu1i4u},
	{"vuuu1i4u1", __M2N_vuuu1i4u1},
	{"vuuu1r4", __M2N_vuuu1r4},
	{"vuuu1r4i4r4i4", __M2N_vuuu1r4i4r4i4},
	{"vuuu1s484", __M2N_vuuu1s484},
	{"vuuu1u", __M2N_vuuu1u},
	{"vuuu1u1", __M2N_vuuu1u1},
	{"vuuu1u1i4s30i4", __M2N_vuuu1u1i4s30i4},
	{"vuuu1u1u", __M2N_vuuu1u1u},
	{"vuuu1uu", __M2N_vuuu1uu},
	{"vuuu4", __M2N_vuuu4},
	{"vuuu4i", __M2N_vuuu4i},
	{"vuuu8", __M2N_vuuu8},
	{"vuuui2i4", __M2N_vuuui2i4},
	{"vuuui4", __M2N_vuuui4},
	{"vuuui4i4", __M2N_vuuui4i4},
	{"vuuui4i4u", __M2N_vuuui4i4u},
	{"vuuui4s30r4uu", __M2N_vuuui4s30r4uu},
	{"vuuui4s30uu", __M2N_vuuui4s30uu},
	{"vuuui4s90", __M2N_vuuui4s90},
	{"vuuui4u", __M2N_vuuui4u},
	{"vuuui4u1", __M2N_vuuui4u1},
	{"vuuui4ui4us433i4u1", __M2N_vuuui4ui4us433i4u1},
	{"vuuui4uu", __M2N_vuuui4uu},
	{"vuuui4uuu", __M2N_vuuui4uuu},
	{"vuuui4uuuu1", __M2N_vuuui4uuuu1},
	{"vuuui4uuuu1u1", __M2N_vuuui4uuuu1u1},
	{"vuuui8", __M2N_vuuui8},
	{"vuuui8uu", __M2N_vuuui8uu},
	{"vuuur4", __M2N_vuuur4},
	{"vuuur4u", __M2N_vuuur4u},
	{"vuuus39u1", __M2N_vuuus39u1},
	{"vuuus42", __M2N_vuuus42},
	{"vuuus90i4", __M2N_vuuus90i4},
	{"vuuus94", __M2N_vuuus94},
	{"vuuus94s94", __M2N_vuuus94s94},
	{"vuuuu", __M2N_vuuuu},
	{"vuuuu1", __M2N_vuuuu1},
	{"vuuuu1i4", __M2N_vuuuu1i4},
	{"vuuuu1i4u1", __M2N_vuuuu1i4u1},
	{"vuuuu1u", __M2N_vuuuu1u},
	{"vuuuu1uu", __M2N_vuuuu1uu},
	{"vuuuui4", __M2N_vuuuui4},
	{"vuuuui4i4", __M2N_vuuuui4i4},
	{"vuuuui8", __M2N_vuuuui8},
	{"vuuuus38u1", __M2N_vuuuus38u1},
	{"vuuuus90i4i4u", __M2N_vuuuus90i4i4u},
	{"vuuuus94uu", __M2N_vuuuus94uu},
	{"vuuuus94uui8", __M2N_vuuuus94uui8},
	{"vuuuuu", __M2N_vuuuuu},
	{"vuuuuu1", __M2N_vuuuuu1},
	{"vuuuuu1i4i4", __M2N_vuuuuu1i4i4},
	{"vuuuuu1i4i4i4i4u", __M2N_vuuuuu1i4i4i4i4u},
	{"vuuuuu1i4i4u", __M2N_vuuuuu1i4i4u},
	{"vuuuuu1i8i4i4i4i4", __M2N_vuuuuu1i8i4i4i4i4},
	{"vuuuuui4u", __M2N_vuuuuui4u},
	{"vuuuuuu", __M2N_vuuuuuu},
	{"vuuuuuu1i4i4", __M2N_vuuuuuu1i4i4},
	{"vuuuuuuu", __M2N_vuuuuuuu},
	{"vuuuuuuuu", __M2N_vuuuuuuuu},
	{"vuuuuuuuuu", __M2N_vuuuuuuuuu},
	{"vuuuuuuuuuu", __M2N_vuuuuuuuuuu},
	{"vuuuuuuuuuuu", __M2N_vuuuuuuuuuuu},
	{"vuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuuuu", __M2N_vuuuuuuuuuuuuuuuuu},
	{nullptr, nullptr},
};

static int8_t __N2M_i1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int8_t __N2M_i1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_i2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i4i4(int32_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4i8i8(int64_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4iu(intptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s0s0(__struct_0__ __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_0__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s1s1(__struct_1__ __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s21s21(__struct_21__ __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s28s28(__struct_28__ __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s34s34(__struct_34__ __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_34__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s40s40(__struct_40__ __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_40__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s43s43(__struct_43__ __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_43__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s51s51(__struct_51__ __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_51__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s62s62(__struct_62__ __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_62__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s63s63(__struct_63__ __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_63__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s65s65(__struct_65__ __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_65__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s68s68(__struct_68__ __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_68__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s77s77(__struct_77__ __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_77__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4s78s78(__struct_78__ __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_78__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4u8u8(uint64_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uint64_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui1i1(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui2i2(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ui8i8(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uii(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uiu(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us0s0(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us100(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_100__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us101(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_101__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us102(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_102__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us103(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_103__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us104(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_104__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us105(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_105__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us106(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us107(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_107__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us108(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us109(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_109__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us111(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_111__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us114(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_114__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us173(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_173__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us1s1(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us201(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_201__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us21s21(uintptr_t __arg0, __struct_21__ __arg1, __struct_21__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_21__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us249(uintptr_t __arg0, __struct_249__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_249__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us24s24(uintptr_t __arg0, __struct_24__ __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us250(uintptr_t __arg0, __struct_250__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_250__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us251(uintptr_t __arg0, __struct_251__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_251__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us252(uintptr_t __arg0, __struct_252__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_252__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us253(uintptr_t __arg0, __struct_253__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_253__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us254(uintptr_t __arg0, __struct_254__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_254__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us28s28(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us3(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us30(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_30__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us31(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us31s31u1(uintptr_t __arg0, __struct_31__ __arg1, __struct_31__ __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_31__*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us34s34(uintptr_t __arg0, __struct_34__ __arg1, __struct_34__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us3s3(uintptr_t __arg0, __struct_3__ __arg1, __struct_3__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_3__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us40s40(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_40__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us41(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_41__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us42(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us42s42(uintptr_t __arg0, __struct_42__ __arg1, __struct_42__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us43s43(uintptr_t __arg0, __struct_43__ __arg1, __struct_43__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us51(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us51s51(uintptr_t __arg0, __struct_51__ __arg1, __struct_51__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_51__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us62(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us62s62(uintptr_t __arg0, __struct_62__ __arg1, __struct_62__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_62__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us63s63(uintptr_t __arg0, __struct_63__ __arg1, __struct_63__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_63__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us64(uintptr_t __arg0, __struct_64__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_64__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us65(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us65s65(uintptr_t __arg0, __struct_65__ __arg1, __struct_65__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_65__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us66s66(uintptr_t __arg0, __struct_66__ __arg1, __struct_66__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_66__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us68s68(uintptr_t __arg0, __struct_68__ __arg1, __struct_68__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_68__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us69(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us69s69(uintptr_t __arg0, __struct_69__ __arg1, __struct_69__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_69__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us70(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_70__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us77s77(uintptr_t __arg0, __struct_77__ __arg1, __struct_77__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_77__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us78s78(uintptr_t __arg0, __struct_78__ __arg1, __struct_78__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_78__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us81s81(uintptr_t __arg0, __struct_81__ __arg1, __struct_81__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_81__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_81__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us83(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_83__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us84(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_84__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us90(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_90__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us97(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_97__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us98(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_98__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4us99(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_99__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu2u2(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui1i4i4(uintptr_t __arg0, uintptr_t __arg1, int8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui2i4i4(uintptr_t __arg0, uintptr_t __arg1, int16_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4i4ui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, uint8_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	args[__ARG_OFFSET_6__].u64 = __arg6;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4ui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui4ui4u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uint8_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	args[__ARG_OFFSET_5__].u64 = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uui8i4i4(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuii4i4(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus0i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_0__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus1i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_1__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus21i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_21__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_21__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus24i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_24__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus26i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_26__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_26__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus27i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_27__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_27__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus28i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_28__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus34i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_34__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus35i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_35__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_35__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus36i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_36__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_36__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus38i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_38__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus39i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_39__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_39__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus3i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_3__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_3__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus40i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_40__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_40__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus41i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_41__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus42i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus43i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus51i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_51__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_51__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus62i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_62__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_62__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus63i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_63__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_63__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus64i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_64__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_64__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus65i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_65__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_65__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus66i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_66__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_66__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus68i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_68__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_68__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus69i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_69__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_69__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus6i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_6__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus70i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_70__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_70__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus77i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_77__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_77__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uus78i4i4(uintptr_t __arg0, uintptr_t __arg1, __struct_78__ __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_78__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu1i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu1i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuu2i4i4(uintptr_t __arg0, uintptr_t __arg1, uint16_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4i4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4u1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4u1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuu1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_i4uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8ui8i4(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_i8uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_iu(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_iui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_iuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_iuui(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4ur4r4(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4uur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_r4uur4r4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_r8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_r8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_s0u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_s0ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_s0uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_100__ __N2M_s100(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    __struct_100__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_100__ __N2M_s100u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_100__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_100__ __N2M_s100uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_100__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_100__ __N2M_s100uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_100__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_115__ __N2M_s115us115(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_115__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_115__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_115__ __N2M_s115us736s734i(uintptr_t __arg0, __struct_736__ __arg1, __struct_734__ __arg2, intptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_736__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_734__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(intptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    __struct_115__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_115__ __N2M_s115uus736s734i(uintptr_t __arg0, uintptr_t __arg1, __struct_736__ __arg2, __struct_734__ __arg3, intptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_736__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_734__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(intptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    __struct_115__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_116__ __N2M_s116u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_116__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_144__ __N2M_s144u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_144__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_144__ __N2M_s144ur4i4r4i4(uintptr_t __arg0, float __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    __struct_144__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_144__ __N2M_s144uur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    __struct_144__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_148__ __N2M_s148u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_148__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_151__ __N2M_s151u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_151__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_152__ __N2M_s152u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_152__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_161__ __N2M_s161u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_161__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_16__ __N2M_s16u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_16__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_16__ __N2M_s16uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_16__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_17__ __N2M_s17u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_17__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_17__ __N2M_s17uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_17__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_182__ __N2M_s182s205u(__struct_205__ __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_205__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_182__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_182__ __N2M_s182us205u(uintptr_t __arg0, __struct_205__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_205__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_182__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_193__ __N2M_s193u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_193__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_19__ __N2M_s19u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_19__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_19__ __N2M_s19uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_19__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_1__ __N2M_s1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_1__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_1__ __N2M_s1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_1__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_202__ __N2M_s202u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_202__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_205__ __N2M_s205u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_205__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_21__ __N2M_s21u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_21__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_21__ __N2M_s21ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_21__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_248__ __N2M_s248us86s90(uintptr_t __arg0, __struct_86__ __arg1, __struct_90__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_86__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_90__*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_248__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_24__ __N2M_s24u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_24__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_24__ __N2M_s24ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_24__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_26__ __N2M_s26u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_26__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_27__ __N2M_s27u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_27__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_28__ __N2M_s28u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_28__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_28__ __N2M_s28ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_28__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_30__ __N2M_s30u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_30__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_30__ __N2M_s30ui4i4i4i4i4i4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, int32_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(int32_t*)(args + __ARG_OFFSET_8__) = __arg8;

    __struct_30__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_30__ __N2M_s30uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_30__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_318__ __N2M_s318ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_318__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_31__ __N2M_s31u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_31__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_34__ __N2M_s34u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_34__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_34__ __N2M_s34ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_34__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_35__ __N2M_s35u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_35__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_36__ __N2M_s36u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_36__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_38__ __N2M_s38u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_38__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_39__ __N2M_s39u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_39__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_39__ __N2M_s39ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_39__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_s3u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_s3ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_s3us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_40__ __N2M_s40u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_40__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_40__ __N2M_s40ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_40__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_40__ __N2M_s40us321(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_321__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_40__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_41__ __N2M_s41u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_41__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_41__ __N2M_s41uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_41__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_42__ __N2M_s42u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_42__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_42__ __N2M_s42uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_42__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_432__ __N2M_s432u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_432__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_43__ __N2M_s43u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_43__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_43__ __N2M_s43ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_43__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_43__ __N2M_s43uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_43__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_44__ __N2M_s44u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_44__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_45__ __N2M_s45u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_45__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_47__ __N2M_s47u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_47__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_48__ __N2M_s48u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_48__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_503__ __N2M_s503u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_503__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_504__ __N2M_s504u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_504__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_505__ __N2M_s505u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_505__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_506__ __N2M_s506u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_506__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_507__ __N2M_s507u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_507__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_51__ __N2M_s51u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_51__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_51__ __N2M_s51ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_51__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_526__ __N2M_s526(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    __struct_526__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_526__ __N2M_s526u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_526__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_52__ __N2M_s52u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_52__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_53__ __N2M_s53u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_53__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_54__ __N2M_s54u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_54__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_55__ __N2M_s55u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_55__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_57__ __N2M_s57u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_57__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_58__ __N2M_s58u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_58__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_59__ __N2M_s59u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_59__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_61__ __N2M_s61u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_61__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_62__ __N2M_s62u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_62__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_62__ __N2M_s62ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_62__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_63__ __N2M_s63u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_63__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_63__ __N2M_s63ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_63__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_64__ __N2M_s64us28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_64__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_65__ __N2M_s65u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_65__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_65__ __N2M_s65ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_65__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_66__ __N2M_s66u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_66__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_68__ __N2M_s68u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_68__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_68__ __N2M_s68ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_68__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_6__ __N2M_s6u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_6__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_6__ __N2M_s6ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_6__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_6__ __N2M_s6uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_6__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_70__ __N2M_s70u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_70__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_763__ __N2M_s763u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_763__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_77__ __N2M_s77u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_77__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_77__ __N2M_s77ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_77__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_78__ __N2M_s78u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_78__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_78__ __N2M_s78ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_78__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_79__ __N2M_s79ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_79__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_81__ __N2M_s81u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_81__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_82__ __N2M_s82uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    __struct_82__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_83__ __N2M_s83u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_83__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_83__ __N2M_s83uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_83__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_85__ __N2M_s85u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_85__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_90__ __N2M_s90us761(uintptr_t __arg0, __struct_761__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_761__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_90__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_93__ __N2M_s93us86s90(uintptr_t __arg0, __struct_86__ __arg1, __struct_90__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_86__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_90__*)(args + __ARG_OFFSET_2__) = __arg2;

    __struct_93__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_s94u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_s94us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_s94uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_u(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i4i(int32_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1i8(int64_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int64_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s0(__struct_0__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_0__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s1(__struct_1__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_1__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s21(__struct_21__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_21__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s28(__struct_28__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s34(__struct_34__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_34__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s40(__struct_40__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_40__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s43(__struct_43__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_43__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s51(__struct_51__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_51__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s62(__struct_62__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_62__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s63(__struct_63__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_63__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s65(__struct_65__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_65__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s68(__struct_68__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_68__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s77(__struct_77__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_77__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1s78(__struct_78__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_78__*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui1i1(uintptr_t __arg0, int8_t __arg1, int8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui2i2(uintptr_t __arg0, int16_t __arg1, int16_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4i(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui4u1(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ui8i8(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uii(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us0s0(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us100(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_100__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us101(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_101__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us102(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_102__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us103(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_103__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us104(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_104__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us105(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_105__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us106(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us107(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_107__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us108(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us109(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_109__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us111(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_111__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us114(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_114__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us115(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_115__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us116(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_116__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us117(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us118(uintptr_t __arg0, __struct_118__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_118__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us119(uintptr_t __arg0, __struct_119__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_119__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us120(uintptr_t __arg0, __struct_120__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_120__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us121(uintptr_t __arg0, __struct_121__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_121__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us122(uintptr_t __arg0, __struct_122__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_122__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us123(uintptr_t __arg0, __struct_123__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_123__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us124(uintptr_t __arg0, __struct_124__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_124__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us125(uintptr_t __arg0, __struct_125__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_125__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us126(uintptr_t __arg0, __struct_126__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_126__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us127(uintptr_t __arg0, __struct_127__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_127__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us128(uintptr_t __arg0, __struct_128__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_128__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us129(uintptr_t __arg0, __struct_129__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_129__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us130(uintptr_t __arg0, __struct_130__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_130__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us131(uintptr_t __arg0, __struct_131__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_131__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us132(uintptr_t __arg0, __struct_132__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_132__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us133(uintptr_t __arg0, __struct_133__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_133__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us134(uintptr_t __arg0, __struct_134__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_134__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us135(uintptr_t __arg0, __struct_135__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_135__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us136(uintptr_t __arg0, __struct_136__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_136__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us137(uintptr_t __arg0, __struct_137__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_137__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us138(uintptr_t __arg0, __struct_138__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_138__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us139(uintptr_t __arg0, __struct_139__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_139__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us140(uintptr_t __arg0, __struct_140__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_140__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us141(uintptr_t __arg0, __struct_141__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_141__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us142(uintptr_t __arg0, __struct_142__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_142__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us143(uintptr_t __arg0, __struct_143__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_143__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us144(uintptr_t __arg0, __struct_144__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_144__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us146(uintptr_t __arg0, __struct_146__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_146__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us147(uintptr_t __arg0, __struct_147__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_147__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us148(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_148__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us149(uintptr_t __arg0, __struct_149__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_149__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us150(uintptr_t __arg0, __struct_150__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_150__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us151(uintptr_t __arg0, __struct_151__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_151__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us152(uintptr_t __arg0, __struct_152__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_152__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us153(uintptr_t __arg0, __struct_153__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_153__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us154(uintptr_t __arg0, __struct_154__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_154__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us155(uintptr_t __arg0, __struct_155__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_155__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us156(uintptr_t __arg0, __struct_156__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_156__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us157(uintptr_t __arg0, __struct_157__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_157__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us158(uintptr_t __arg0, __struct_158__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_158__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us159(uintptr_t __arg0, __struct_159__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_159__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us16(uintptr_t __arg0, __struct_16__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_16__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us161(uintptr_t __arg0, __struct_161__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_161__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us162(uintptr_t __arg0, __struct_162__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_162__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us163(uintptr_t __arg0, __struct_163__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_163__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us165(uintptr_t __arg0, __struct_165__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_165__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us166(uintptr_t __arg0, __struct_166__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_166__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us167(uintptr_t __arg0, __struct_167__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_167__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us169(uintptr_t __arg0, __struct_169__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_169__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us17(uintptr_t __arg0, __struct_17__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_17__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us170(uintptr_t __arg0, __struct_170__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_170__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us171(uintptr_t __arg0, __struct_171__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_171__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us172(uintptr_t __arg0, __struct_172__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_172__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us173(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_173__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us174(uintptr_t __arg0, __struct_174__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_174__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us175(uintptr_t __arg0, __struct_175__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_175__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us176(uintptr_t __arg0, __struct_176__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_176__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us177(uintptr_t __arg0, __struct_177__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_177__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us178(uintptr_t __arg0, __struct_178__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_178__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us179(uintptr_t __arg0, __struct_179__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_179__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us180(uintptr_t __arg0, __struct_180__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_180__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us181(uintptr_t __arg0, __struct_181__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_181__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us182(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us19(uintptr_t __arg0, __struct_19__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_19__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us193(uintptr_t __arg0, __struct_193__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_193__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1s1(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us1uu(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us201(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_201__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us202(uintptr_t __arg0, __struct_202__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_202__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us205(uintptr_t __arg0, __struct_205__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_205__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us213(uintptr_t __arg0, __struct_213__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_213__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us216(uintptr_t __arg0, __struct_216__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_216__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us217(uintptr_t __arg0, __struct_217__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_217__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us218(uintptr_t __arg0, __struct_218__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_218__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us21s21(uintptr_t __arg0, __struct_21__ __arg1, __struct_21__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_21__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us226(uintptr_t __arg0, __struct_226__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_226__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us229(uintptr_t __arg0, __struct_229__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_229__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us230(uintptr_t __arg0, __struct_230__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_230__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us231(uintptr_t __arg0, __struct_231__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_231__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us248(uintptr_t __arg0, __struct_248__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_248__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us249(uintptr_t __arg0, __struct_249__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_249__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us24s24(uintptr_t __arg0, __struct_24__ __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us250(uintptr_t __arg0, __struct_250__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_250__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us251(uintptr_t __arg0, __struct_251__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_251__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us252(uintptr_t __arg0, __struct_252__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_252__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us253(uintptr_t __arg0, __struct_253__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_253__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us254(uintptr_t __arg0, __struct_254__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_254__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us26s26(uintptr_t __arg0, __struct_26__ __arg1, __struct_26__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_26__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us27s27(uintptr_t __arg0, __struct_27__ __arg1, __struct_27__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_27__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us28s28(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us28u(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us3(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us30(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_30__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us31u(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us31us31u(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_31__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us34s34(uintptr_t __arg0, __struct_34__ __arg1, __struct_34__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us35s35(uintptr_t __arg0, __struct_35__ __arg1, __struct_35__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_35__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us35u(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us35ui4(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us36s36(uintptr_t __arg0, __struct_36__ __arg1, __struct_36__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_36__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us36u(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us38s38(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_38__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us38u(uintptr_t __arg0, __struct_38__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us39s39(uintptr_t __arg0, __struct_39__ __arg1, __struct_39__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_39__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us3s3(uintptr_t __arg0, __struct_3__ __arg1, __struct_3__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_3__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us40s40(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_40__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us41(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_41__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us41s41(uintptr_t __arg0, __struct_41__ __arg1, __struct_41__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_41__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_41__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us42(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us42s42(uintptr_t __arg0, __struct_42__ __arg1, __struct_42__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us43s43(uintptr_t __arg0, __struct_43__ __arg1, __struct_43__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us44(uintptr_t __arg0, __struct_44__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_44__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us45(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_45__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us47(uintptr_t __arg0, __struct_47__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_47__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us51(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us510(uintptr_t __arg0, __struct_510__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_510__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us51s51(uintptr_t __arg0, __struct_51__ __arg1, __struct_51__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_51__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us52(uintptr_t __arg0, __struct_52__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_52__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us53(uintptr_t __arg0, __struct_53__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_53__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us54(uintptr_t __arg0, __struct_54__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_54__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us55(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_55__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us57(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us58(uintptr_t __arg0, __struct_58__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_58__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us59(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_59__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us61(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_61__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us62(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us62s62(uintptr_t __arg0, __struct_62__ __arg1, __struct_62__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_62__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us63s63(uintptr_t __arg0, __struct_63__ __arg1, __struct_63__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_63__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us64s64(uintptr_t __arg0, __struct_64__ __arg1, __struct_64__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_64__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_64__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us65(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us65s65(uintptr_t __arg0, __struct_65__ __arg1, __struct_65__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_65__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us66s66(uintptr_t __arg0, __struct_66__ __arg1, __struct_66__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_66__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us68s68(uintptr_t __arg0, __struct_68__ __arg1, __struct_68__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_68__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us69(uintptr_t __arg0, __struct_69__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us69s69(uintptr_t __arg0, __struct_69__ __arg1, __struct_69__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_69__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_69__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us6s6(uintptr_t __arg0, __struct_6__ __arg1, __struct_6__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_6__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us6u(uintptr_t __arg0, __struct_6__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us70(uintptr_t __arg0, __struct_70__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_70__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us70s70(uintptr_t __arg0, __struct_70__ __arg1, __struct_70__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_70__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_70__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us763(uintptr_t __arg0, __struct_763__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_763__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us77s77(uintptr_t __arg0, __struct_77__ __arg1, __struct_77__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_77__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us78s78(uintptr_t __arg0, __struct_78__ __arg1, __struct_78__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_78__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us81(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_81__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us83(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_83__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us84(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_84__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us85(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us86(uintptr_t __arg0, __struct_86__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_86__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us87(uintptr_t __arg0, __struct_87__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_87__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us88(uintptr_t __arg0, __struct_88__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_88__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us90(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_90__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us92(uintptr_t __arg0, __struct_92__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_92__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us93(uintptr_t __arg0, __struct_93__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_93__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us95(uintptr_t __arg0, __struct_95__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_95__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us97(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_97__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us98(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_98__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1us99(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_99__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu1u(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2i4(uintptr_t __arg0, uint16_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2u2(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu2u2i4(uintptr_t __arg0, uint16_t __arg1, uint16_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4i4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uur4i4r4i4u(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uus16(uintptr_t __arg0, uintptr_t __arg1, __struct_16__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_16__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uus17(uintptr_t __arg0, uintptr_t __arg1, __struct_17__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_17__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uus19(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_19__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu1i4r4u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuu1u1r4u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuui4i4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuuui4i4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_u1uuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_u2uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_u4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8u(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uui8u(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_u8uuui8u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_us34(__struct_34__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_34__*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uu(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui2ui4i4(uintptr_t __arg0, int16_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4i4i4i8i8uu(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, int64_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int64_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4r4i4(uintptr_t __arg0, int32_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4s30(uintptr_t __arg0, int32_t __arg1, __struct_30__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_30__*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4ui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui4uuuuuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuiuuu(uintptr_t __arg0, intptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uur4i4(uintptr_t __arg0, float __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28ui4i4uuu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28uu1i4i4i4i4uu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28uui4i4i4uu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28uui4i4uu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus28uuuu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus321(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_321__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus40uu(uintptr_t __arg0, __struct_40__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus42(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus423uu(uintptr_t __arg0, __struct_423__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_423__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus424uu(uintptr_t __arg0, __struct_424__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_424__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus425uu(uintptr_t __arg0, __struct_425__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_425__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus81(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_81__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uus86uu(uintptr_t __arg0, __struct_86__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_86__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuu1i4(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4s90(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, __struct_90__ __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(__struct_90__*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4i4uuuu1uu1i4i4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, uintptr_t __arg8, uint8_t __arg9, int32_t __arg10, int32_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	args[__ARG_OFFSET_7__].u64 = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	args[__ARG_OFFSET_9__].u64 = __arg9;
	*(int32_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(int32_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4r4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4r4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4s30(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_30__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_30__*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4s30uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_30__ __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_30__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4s38u1(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_38__ __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_38__*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4u1i4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uint8_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4ui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui4uuuuuu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuui8uu(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuur4uuu(uintptr_t __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus16uu(uintptr_t __arg0, uintptr_t __arg1, __struct_16__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_16__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus17uu(uintptr_t __arg0, uintptr_t __arg1, __struct_17__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_17__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus19uu(uintptr_t __arg0, uintptr_t __arg1, __struct_19__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_19__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus38u1(uintptr_t __arg0, uintptr_t __arg1, __struct_38__ __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_38__*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus42u(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuus86uu(uintptr_t __arg0, uintptr_t __arg1, __struct_86__ __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_86__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1i4i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1i4uuu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1uu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuu1uuuu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4i4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4r4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui4r4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui8uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuui8uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuur4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuur4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, float __arg5, int32_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(float*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuur4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuus42u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_42__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __ARG_OFFSET_16__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;
	constexpr int __ARG_SIZE_16__ = (sizeof(__arg16) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_16__ + __ARG_SIZE_16__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;
	*(uintptr_t*)(args + __ARG_OFFSET_16__) = __arg16;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, uintptr_t __arg17, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __ARG_OFFSET_16__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;
	constexpr int __ARG_SIZE_16__ = (sizeof(__arg16) + 7)/8;
	constexpr int __ARG_OFFSET_17__ = __ARG_OFFSET_16__ + __ARG_SIZE_16__;
	constexpr int __ARG_SIZE_17__ = (sizeof(__arg17) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_17__ + __ARG_SIZE_17__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;
	*(uintptr_t*)(args + __ARG_OFFSET_16__) = __arg16;
	*(uintptr_t*)(args + __ARG_OFFSET_17__) = __arg17;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_uuuuuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, uintptr_t __arg17, uintptr_t __arg18, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __ARG_OFFSET_16__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;
	constexpr int __ARG_SIZE_16__ = (sizeof(__arg16) + 7)/8;
	constexpr int __ARG_OFFSET_17__ = __ARG_OFFSET_16__ + __ARG_SIZE_16__;
	constexpr int __ARG_SIZE_17__ = (sizeof(__arg17) + 7)/8;
	constexpr int __ARG_OFFSET_18__ = __ARG_OFFSET_17__ + __ARG_SIZE_17__;
	constexpr int __ARG_SIZE_18__ = (sizeof(__arg18) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_18__ + __ARG_SIZE_18__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;
	*(uintptr_t*)(args + __ARG_OFFSET_16__) = __arg16;
	*(uintptr_t*)(args + __ARG_OFFSET_17__) = __arg17;
	*(uintptr_t*)(args + __ARG_OFFSET_18__) = __arg18;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static void __N2M_v(const MethodInfo* method)
{
    
	constexpr int __TOTAL_ARG_SIZE__ = 1;

    StackObject args[__TOTAL_ARG_SIZE__];

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi(intptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4(int32_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4i4(int32_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4i4i4i8i8(int32_t __arg0, int32_t __arg1, int32_t __arg2, int64_t __arg3, int64_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4i8i8u1(int32_t __arg0, int64_t __arg1, int64_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vi4u(int32_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(int32_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_viiiiiii4u(intptr_t __arg0, intptr_t __arg1, intptr_t __arg2, intptr_t __arg3, intptr_t __arg4, intptr_t __arg5, int32_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(intptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(intptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(intptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(intptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vr4(float __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(float*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs229(__struct_229__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_229__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs231(__struct_231__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_231__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs28ui4i4u(__struct_28__ __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs28uu(__struct_28__ __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs28uu1i4i4i4i4(__struct_28__ __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs28uui4i4(__struct_28__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs28uui4i4i4(__struct_28__ __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_28__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs31s252(__struct_31__ __arg0, __struct_252__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_31__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_252__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs31s253(__struct_31__ __arg0, __struct_253__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_31__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_253__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs31s254(__struct_31__ __arg0, __struct_254__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_31__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_254__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs31u(__struct_31__ __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_31__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs40(__struct_40__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_40__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs42(__struct_42__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_42__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs423(__struct_423__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_423__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs424(__struct_424__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_424__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs425(__struct_425__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_425__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs479(__struct_479__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_479__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs480(__struct_480__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_480__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs482(__struct_482__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_482__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs51(__struct_51__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_51__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs513(__struct_513__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_513__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs521(__struct_521__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_521__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs522(__struct_522__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_522__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs522u(__struct_522__ __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_522__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs85(__struct_85__ __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_85__*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs85i4(__struct_85__ __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_85__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs85s24(__struct_85__ __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_85__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs85s273(__struct_85__ __arg0, __struct_273__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_85__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_273__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vs85s85(__struct_85__ __arg0, __struct_85__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(__struct_85__*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu(uintptr_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu1(uint8_t __arg0, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vu1u1i4(uint8_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	args[__ARG_OFFSET_0__].u64 = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4i4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4i4i4u(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4i4i8i8(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int64_t __arg4, int64_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int64_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int64_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4u(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i4uuuu1uu1i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uint8_t __arg6, uintptr_t __arg7, uint8_t __arg8, int32_t __arg9, int32_t __arg10, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	args[__ARG_OFFSET_6__].u64 = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	args[__ARG_OFFSET_8__].u64 = __arg8;
	*(int32_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(int32_t*)(args + __ARG_OFFSET_10__) = __arg10;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i8(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4i8i8u1(uintptr_t __arg0, int32_t __arg1, int64_t __arg2, int64_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s0(uintptr_t __arg0, int32_t __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s1(uintptr_t __arg0, int32_t __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s21(uintptr_t __arg0, int32_t __arg1, __struct_21__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_21__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s24(uintptr_t __arg0, int32_t __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s28(uintptr_t __arg0, int32_t __arg1, __struct_28__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s3(uintptr_t __arg0, int32_t __arg1, __struct_3__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_3__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s34(uintptr_t __arg0, int32_t __arg1, __struct_34__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s39(uintptr_t __arg0, int32_t __arg1, __struct_39__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_39__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s40(uintptr_t __arg0, int32_t __arg1, __struct_40__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_40__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s43(uintptr_t __arg0, int32_t __arg1, __struct_43__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s51(uintptr_t __arg0, int32_t __arg1, __struct_51__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_51__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s514(uintptr_t __arg0, int32_t __arg1, __struct_514__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_514__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s6(uintptr_t __arg0, int32_t __arg1, __struct_6__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_6__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s62(uintptr_t __arg0, int32_t __arg1, __struct_62__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_62__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s63(uintptr_t __arg0, int32_t __arg1, __struct_63__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_63__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s65(uintptr_t __arg0, int32_t __arg1, __struct_65__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_65__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s68(uintptr_t __arg0, int32_t __arg1, __struct_68__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_68__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s77(uintptr_t __arg0, int32_t __arg1, __struct_77__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_77__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s78(uintptr_t __arg0, int32_t __arg1, __struct_78__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_78__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4s79(uintptr_t __arg0, int32_t __arg1, __struct_79__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_79__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4u1(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uui4(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uuu1u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui4uuu1u1u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	args[__ARG_OFFSET_5__].u64 = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui8i4(uintptr_t __arg0, int64_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vui8ui8(uintptr_t __arg0, int64_t __arg1, uintptr_t __arg2, int64_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuiii4i4u(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuiiiiiii4u(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, intptr_t __arg3, intptr_t __arg4, intptr_t __arg5, intptr_t __arg6, int32_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(intptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(intptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(intptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(intptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuiiui4(uintptr_t __arg0, intptr_t __arg1, intptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur4r4(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur4u(uintptr_t __arg0, float __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus148(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_148__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus182(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus182s518(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_518__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus182s518u(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_518__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus182uu(uintptr_t __arg0, __struct_182__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1u(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus1uu(uintptr_t __arg0, __struct_1__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus229(uintptr_t __arg0, __struct_229__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_229__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus231(uintptr_t __arg0, __struct_231__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_231__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28s64(uintptr_t __arg0, __struct_28__ __arg1, __struct_64__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_64__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28u(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28ui4i4u(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28uu(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28uu1i4i4i4i4(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uint8_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28uui4i4(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus28uui4i4i4(uintptr_t __arg0, __struct_28__ __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, int32_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus3(uintptr_t __arg0, __struct_3__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_3__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus31(uintptr_t __arg0, __struct_31__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus31s252(uintptr_t __arg0, __struct_31__ __arg1, __struct_252__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_252__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus31s253(uintptr_t __arg0, __struct_31__ __arg1, __struct_253__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_253__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus31s254(uintptr_t __arg0, __struct_31__ __arg1, __struct_254__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_254__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus31u(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus35u(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus35ui4(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus36u(uintptr_t __arg0, __struct_36__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus38u(uintptr_t __arg0, __struct_38__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus39u1(uintptr_t __arg0, __struct_39__ __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus41(uintptr_t __arg0, __struct_41__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_41__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus42(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus423(uintptr_t __arg0, __struct_423__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_423__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus424(uintptr_t __arg0, __struct_424__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_424__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus425(uintptr_t __arg0, __struct_425__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_425__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus44(uintptr_t __arg0, __struct_44__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_44__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus45(uintptr_t __arg0, __struct_45__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_45__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus47(uintptr_t __arg0, __struct_47__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_47__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus479(uintptr_t __arg0, __struct_479__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_479__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus48(uintptr_t __arg0, __struct_48__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_48__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus480(uintptr_t __arg0, __struct_480__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_480__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus482(uintptr_t __arg0, __struct_482__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_482__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus51(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus513(uintptr_t __arg0, __struct_513__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_513__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus52(uintptr_t __arg0, __struct_52__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_52__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus521(uintptr_t __arg0, __struct_521__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_521__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus522(uintptr_t __arg0, __struct_522__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_522__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus522u(uintptr_t __arg0, __struct_522__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_522__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus53(uintptr_t __arg0, __struct_53__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_53__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus54(uintptr_t __arg0, __struct_54__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_54__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus55(uintptr_t __arg0, __struct_55__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_55__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus57(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus58(uintptr_t __arg0, __struct_58__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_58__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus59(uintptr_t __arg0, __struct_59__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_59__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus61(uintptr_t __arg0, __struct_61__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_61__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus62(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus65(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus66(uintptr_t __arg0, __struct_66__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus6u(uintptr_t __arg0, __struct_6__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus763u(uintptr_t __arg0, __struct_763__ __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_763__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus763uu(uintptr_t __arg0, __struct_763__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_763__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus81(uintptr_t __arg0, __struct_81__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_81__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus85(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus85i4(uintptr_t __arg0, __struct_85__ __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus85s24(uintptr_t __arg0, __struct_85__ __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus85s273(uintptr_t __arg0, __struct_85__ __arg1, __struct_273__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_273__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vus85s85(uintptr_t __arg0, __struct_85__ __arg1, __struct_85__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_85__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vutypedbyrefu(uintptr_t __arg0, Il2CppTypedRef __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(Il2CppTypedRef*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1i4u(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1s484(uintptr_t __arg0, uint8_t __arg1, __struct_484__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(__struct_484__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1u(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1u1i4(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu1uu(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4i4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4i4uuuu1uu1i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uint8_t __arg7, uintptr_t __arg8, uint8_t __arg9, int32_t __arg10, int32_t __arg11, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	args[__ARG_OFFSET_7__].u64 = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	args[__ARG_OFFSET_9__].u64 = __arg9;
	*(int32_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(int32_t*)(args + __ARG_OFFSET_11__) = __arg11;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4s182(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, __struct_182__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_182__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui8(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui8i8u(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui8u(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuui8uu(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuiii4i4u(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, intptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(intptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuiiui4(uintptr_t __arg0, uintptr_t __arg1, intptr_t __arg2, intptr_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(intptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuur4r4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuur4u(uintptr_t __arg0, uintptr_t __arg1, float __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuur8(uintptr_t __arg0, uintptr_t __arg1, double __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(double*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus24(uintptr_t __arg0, uintptr_t __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus39u1(uintptr_t __arg0, uintptr_t __arg1, __struct_39__ __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_39__*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus41(uintptr_t __arg0, uintptr_t __arg1, __struct_41__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_41__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus42(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus43(uintptr_t __arg0, uintptr_t __arg1, __struct_43__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus520i4(uintptr_t __arg0, uintptr_t __arg1, __struct_520__ __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_520__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus520i4s182(uintptr_t __arg0, uintptr_t __arg1, __struct_520__ __arg2, int32_t __arg3, __struct_182__ __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_520__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(__struct_182__*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuus6(uintptr_t __arg0, uintptr_t __arg1, __struct_6__ __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_6__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1i4u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1r4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1s484(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, __struct_484__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(__struct_484__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu1uu(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuu4(uintptr_t __arg0, uintptr_t __arg1, uint32_t __arg2, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui2i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int16_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4i4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuui8uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int64_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuur4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuur4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuus39u1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_39__ __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_39__*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuus42(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_42__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_vuuuuuuuuuuuuuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, uintptr_t __arg6, uintptr_t __arg7, uintptr_t __arg8, uintptr_t __arg9, uintptr_t __arg10, uintptr_t __arg11, uintptr_t __arg12, uintptr_t __arg13, uintptr_t __arg14, uintptr_t __arg15, uintptr_t __arg16, const MethodInfo* method)
{
    
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __ARG_OFFSET_8__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;
	constexpr int __ARG_SIZE_8__ = (sizeof(__arg8) + 7)/8;
	constexpr int __ARG_OFFSET_9__ = __ARG_OFFSET_8__ + __ARG_SIZE_8__;
	constexpr int __ARG_SIZE_9__ = (sizeof(__arg9) + 7)/8;
	constexpr int __ARG_OFFSET_10__ = __ARG_OFFSET_9__ + __ARG_SIZE_9__;
	constexpr int __ARG_SIZE_10__ = (sizeof(__arg10) + 7)/8;
	constexpr int __ARG_OFFSET_11__ = __ARG_OFFSET_10__ + __ARG_SIZE_10__;
	constexpr int __ARG_SIZE_11__ = (sizeof(__arg11) + 7)/8;
	constexpr int __ARG_OFFSET_12__ = __ARG_OFFSET_11__ + __ARG_SIZE_11__;
	constexpr int __ARG_SIZE_12__ = (sizeof(__arg12) + 7)/8;
	constexpr int __ARG_OFFSET_13__ = __ARG_OFFSET_12__ + __ARG_SIZE_12__;
	constexpr int __ARG_SIZE_13__ = (sizeof(__arg13) + 7)/8;
	constexpr int __ARG_OFFSET_14__ = __ARG_OFFSET_13__ + __ARG_SIZE_13__;
	constexpr int __ARG_SIZE_14__ = (sizeof(__arg14) + 7)/8;
	constexpr int __ARG_OFFSET_15__ = __ARG_OFFSET_14__ + __ARG_SIZE_14__;
	constexpr int __ARG_SIZE_15__ = (sizeof(__arg15) + 7)/8;
	constexpr int __ARG_OFFSET_16__ = __ARG_OFFSET_15__ + __ARG_SIZE_15__;
	constexpr int __ARG_SIZE_16__ = (sizeof(__arg16) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_16__ + __ARG_SIZE_16__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(uintptr_t*)(args + __ARG_OFFSET_7__) = __arg7;
	*(uintptr_t*)(args + __ARG_OFFSET_8__) = __arg8;
	*(uintptr_t*)(args + __ARG_OFFSET_9__) = __arg9;
	*(uintptr_t*)(args + __ARG_OFFSET_10__) = __arg10;
	*(uintptr_t*)(args + __ARG_OFFSET_11__) = __arg11;
	*(uintptr_t*)(args + __ARG_OFFSET_12__) = __arg12;
	*(uintptr_t*)(args + __ARG_OFFSET_13__) = __arg13;
	*(uintptr_t*)(args + __ARG_OFFSET_14__) = __arg14;
	*(uintptr_t*)(args + __ARG_OFFSET_15__) = __arg15;
	*(uintptr_t*)(args + __ARG_OFFSET_16__) = __arg16;

    Interpreter::Execute(method, args, nullptr);
}


const Native2ManagedMethodInfo hybridclr::interpreter::g_native2managedStub[] = 
{

	{"i1u", (Il2CppMethodPointer)__N2M_i1u},
	{"i1uu", (Il2CppMethodPointer)__N2M_i1uu},
	{"i2u", (Il2CppMethodPointer)__N2M_i2u},
	{"i2uu", (Il2CppMethodPointer)__N2M_i2uu},
	{"i4", (Il2CppMethodPointer)__N2M_i4},
	{"i4i4i4", (Il2CppMethodPointer)__N2M_i4i4i4},
	{"i4i8i8", (Il2CppMethodPointer)__N2M_i4i8i8},
	{"i4iu", (Il2CppMethodPointer)__N2M_i4iu},
	{"i4s0s0", (Il2CppMethodPointer)__N2M_i4s0s0},
	{"i4s1s1", (Il2CppMethodPointer)__N2M_i4s1s1},
	{"i4s21s21", (Il2CppMethodPointer)__N2M_i4s21s21},
	{"i4s28s28", (Il2CppMethodPointer)__N2M_i4s28s28},
	{"i4s34s34", (Il2CppMethodPointer)__N2M_i4s34s34},
	{"i4s40s40", (Il2CppMethodPointer)__N2M_i4s40s40},
	{"i4s43s43", (Il2CppMethodPointer)__N2M_i4s43s43},
	{"i4s51s51", (Il2CppMethodPointer)__N2M_i4s51s51},
	{"i4s62s62", (Il2CppMethodPointer)__N2M_i4s62s62},
	{"i4s63s63", (Il2CppMethodPointer)__N2M_i4s63s63},
	{"i4s65s65", (Il2CppMethodPointer)__N2M_i4s65s65},
	{"i4s68s68", (Il2CppMethodPointer)__N2M_i4s68s68},
	{"i4s77s77", (Il2CppMethodPointer)__N2M_i4s77s77},
	{"i4s78s78", (Il2CppMethodPointer)__N2M_i4s78s78},
	{"i4u", (Il2CppMethodPointer)__N2M_i4u},
	{"i4u8u8", (Il2CppMethodPointer)__N2M_i4u8u8},
	{"i4ui", (Il2CppMethodPointer)__N2M_i4ui},
	{"i4ui1", (Il2CppMethodPointer)__N2M_i4ui1},
	{"i4ui1i1", (Il2CppMethodPointer)__N2M_i4ui1i1},
	{"i4ui2", (Il2CppMethodPointer)__N2M_i4ui2},
	{"i4ui2i2", (Il2CppMethodPointer)__N2M_i4ui2i2},
	{"i4ui4", (Il2CppMethodPointer)__N2M_i4ui4},
	{"i4ui4i4", (Il2CppMethodPointer)__N2M_i4ui4i4},
	{"i4ui4i4i4", (Il2CppMethodPointer)__N2M_i4ui4i4i4},
	{"i4ui8", (Il2CppMethodPointer)__N2M_i4ui8},
	{"i4ui8i8", (Il2CppMethodPointer)__N2M_i4ui8i8},
	{"i4uii", (Il2CppMethodPointer)__N2M_i4uii},
	{"i4uiu", (Il2CppMethodPointer)__N2M_i4uiu},
	{"i4ur4", (Il2CppMethodPointer)__N2M_i4ur4},
	{"i4ur8", (Il2CppMethodPointer)__N2M_i4ur8},
	{"i4us0", (Il2CppMethodPointer)__N2M_i4us0},
	{"i4us0s0", (Il2CppMethodPointer)__N2M_i4us0s0},
	{"i4us1", (Il2CppMethodPointer)__N2M_i4us1},
	{"i4us100", (Il2CppMethodPointer)__N2M_i4us100},
	{"i4us101", (Il2CppMethodPointer)__N2M_i4us101},
	{"i4us102", (Il2CppMethodPointer)__N2M_i4us102},
	{"i4us103", (Il2CppMethodPointer)__N2M_i4us103},
	{"i4us104", (Il2CppMethodPointer)__N2M_i4us104},
	{"i4us105", (Il2CppMethodPointer)__N2M_i4us105},
	{"i4us106", (Il2CppMethodPointer)__N2M_i4us106},
	{"i4us107", (Il2CppMethodPointer)__N2M_i4us107},
	{"i4us108", (Il2CppMethodPointer)__N2M_i4us108},
	{"i4us109", (Il2CppMethodPointer)__N2M_i4us109},
	{"i4us110", (Il2CppMethodPointer)__N2M_i4us110},
	{"i4us111", (Il2CppMethodPointer)__N2M_i4us111},
	{"i4us114", (Il2CppMethodPointer)__N2M_i4us114},
	{"i4us173", (Il2CppMethodPointer)__N2M_i4us173},
	{"i4us1s1", (Il2CppMethodPointer)__N2M_i4us1s1},
	{"i4us201", (Il2CppMethodPointer)__N2M_i4us201},
	{"i4us21", (Il2CppMethodPointer)__N2M_i4us21},
	{"i4us21s21", (Il2CppMethodPointer)__N2M_i4us21s21},
	{"i4us24", (Il2CppMethodPointer)__N2M_i4us24},
	{"i4us249", (Il2CppMethodPointer)__N2M_i4us249},
	{"i4us24s24", (Il2CppMethodPointer)__N2M_i4us24s24},
	{"i4us250", (Il2CppMethodPointer)__N2M_i4us250},
	{"i4us251", (Il2CppMethodPointer)__N2M_i4us251},
	{"i4us252", (Il2CppMethodPointer)__N2M_i4us252},
	{"i4us253", (Il2CppMethodPointer)__N2M_i4us253},
	{"i4us254", (Il2CppMethodPointer)__N2M_i4us254},
	{"i4us26", (Il2CppMethodPointer)__N2M_i4us26},
	{"i4us27", (Il2CppMethodPointer)__N2M_i4us27},
	{"i4us28", (Il2CppMethodPointer)__N2M_i4us28},
	{"i4us28s28", (Il2CppMethodPointer)__N2M_i4us28s28},
	{"i4us3", (Il2CppMethodPointer)__N2M_i4us3},
	{"i4us30", (Il2CppMethodPointer)__N2M_i4us30},
	{"i4us31", (Il2CppMethodPointer)__N2M_i4us31},
	{"i4us31s31u1", (Il2CppMethodPointer)__N2M_i4us31s31u1},
	{"i4us34", (Il2CppMethodPointer)__N2M_i4us34},
	{"i4us34s34", (Il2CppMethodPointer)__N2M_i4us34s34},
	{"i4us35", (Il2CppMethodPointer)__N2M_i4us35},
	{"i4us36", (Il2CppMethodPointer)__N2M_i4us36},
	{"i4us38", (Il2CppMethodPointer)__N2M_i4us38},
	{"i4us39", (Il2CppMethodPointer)__N2M_i4us39},
	{"i4us3s3", (Il2CppMethodPointer)__N2M_i4us3s3},
	{"i4us40", (Il2CppMethodPointer)__N2M_i4us40},
	{"i4us40s40", (Il2CppMethodPointer)__N2M_i4us40s40},
	{"i4us41", (Il2CppMethodPointer)__N2M_i4us41},
	{"i4us42", (Il2CppMethodPointer)__N2M_i4us42},
	{"i4us42s42", (Il2CppMethodPointer)__N2M_i4us42s42},
	{"i4us43", (Il2CppMethodPointer)__N2M_i4us43},
	{"i4us43s43", (Il2CppMethodPointer)__N2M_i4us43s43},
	{"i4us51", (Il2CppMethodPointer)__N2M_i4us51},
	{"i4us51s51", (Il2CppMethodPointer)__N2M_i4us51s51},
	{"i4us6", (Il2CppMethodPointer)__N2M_i4us6},
	{"i4us62", (Il2CppMethodPointer)__N2M_i4us62},
	{"i4us62s62", (Il2CppMethodPointer)__N2M_i4us62s62},
	{"i4us63", (Il2CppMethodPointer)__N2M_i4us63},
	{"i4us63s63", (Il2CppMethodPointer)__N2M_i4us63s63},
	{"i4us64", (Il2CppMethodPointer)__N2M_i4us64},
	{"i4us65", (Il2CppMethodPointer)__N2M_i4us65},
	{"i4us65s65", (Il2CppMethodPointer)__N2M_i4us65s65},
	{"i4us66", (Il2CppMethodPointer)__N2M_i4us66},
	{"i4us66s66", (Il2CppMethodPointer)__N2M_i4us66s66},
	{"i4us68", (Il2CppMethodPointer)__N2M_i4us68},
	{"i4us68s68", (Il2CppMethodPointer)__N2M_i4us68s68},
	{"i4us69", (Il2CppMethodPointer)__N2M_i4us69},
	{"i4us69s69", (Il2CppMethodPointer)__N2M_i4us69s69},
	{"i4us70", (Il2CppMethodPointer)__N2M_i4us70},
	{"i4us77", (Il2CppMethodPointer)__N2M_i4us77},
	{"i4us77s77", (Il2CppMethodPointer)__N2M_i4us77s77},
	{"i4us78", (Il2CppMethodPointer)__N2M_i4us78},
	{"i4us78s78", (Il2CppMethodPointer)__N2M_i4us78s78},
	{"i4us79", (Il2CppMethodPointer)__N2M_i4us79},
	{"i4us81s81", (Il2CppMethodPointer)__N2M_i4us81s81},
	{"i4us83", (Il2CppMethodPointer)__N2M_i4us83},
	{"i4us84", (Il2CppMethodPointer)__N2M_i4us84},
	{"i4us90", (Il2CppMethodPointer)__N2M_i4us90},
	{"i4us94", (Il2CppMethodPointer)__N2M_i4us94},
	{"i4us97", (Il2CppMethodPointer)__N2M_i4us97},
	{"i4us98", (Il2CppMethodPointer)__N2M_i4us98},
	{"i4us99", (Il2CppMethodPointer)__N2M_i4us99},
	{"i4uu", (Il2CppMethodPointer)__N2M_i4uu},
	{"i4uu1", (Il2CppMethodPointer)__N2M_i4uu1},
	{"i4uu1u1", (Il2CppMethodPointer)__N2M_i4uu1u1},
	{"i4uu2", (Il2CppMethodPointer)__N2M_i4uu2},
	{"i4uu2u2", (Il2CppMethodPointer)__N2M_i4uu2u2},
	{"i4uu4", (Il2CppMethodPointer)__N2M_i4uu4},
	{"i4uu8", (Il2CppMethodPointer)__N2M_i4uu8},
	{"i4uu8u8", (Il2CppMethodPointer)__N2M_i4uu8u8},
	{"i4uui1i4i4", (Il2CppMethodPointer)__N2M_i4uui1i4i4},
	{"i4uui2i4i4", (Il2CppMethodPointer)__N2M_i4uui2i4i4},
	{"i4uui4", (Il2CppMethodPointer)__N2M_i4uui4},
	{"i4uui4i4", (Il2CppMethodPointer)__N2M_i4uui4i4},
	{"i4uui4i4i4", (Il2CppMethodPointer)__N2M_i4uui4i4i4},
	{"i4uui4i4u1", (Il2CppMethodPointer)__N2M_i4uui4i4u1},
	{"i4uui4i4ui4", (Il2CppMethodPointer)__N2M_i4uui4i4ui4},
	{"i4uui4i4ui4i4i4", (Il2CppMethodPointer)__N2M_i4uui4i4ui4i4i4},
	{"i4uui4i4ui4u1", (Il2CppMethodPointer)__N2M_i4uui4i4ui4u1},
	{"i4uui4u", (Il2CppMethodPointer)__N2M_i4uui4u},
	{"i4uui4u1", (Il2CppMethodPointer)__N2M_i4uui4u1},
	{"i4uui4ui4", (Il2CppMethodPointer)__N2M_i4uui4ui4},
	{"i4uui4ui4i4", (Il2CppMethodPointer)__N2M_i4uui4ui4i4},
	{"i4uui4ui4u1", (Il2CppMethodPointer)__N2M_i4uui4ui4u1},
	{"i4uui8i4i4", (Il2CppMethodPointer)__N2M_i4uui8i4i4},
	{"i4uuii4i4", (Il2CppMethodPointer)__N2M_i4uuii4i4},
	{"i4uus0i4i4", (Il2CppMethodPointer)__N2M_i4uus0i4i4},
	{"i4uus1i4i4", (Il2CppMethodPointer)__N2M_i4uus1i4i4},
	{"i4uus21i4i4", (Il2CppMethodPointer)__N2M_i4uus21i4i4},
	{"i4uus24i4i4", (Il2CppMethodPointer)__N2M_i4uus24i4i4},
	{"i4uus26i4i4", (Il2CppMethodPointer)__N2M_i4uus26i4i4},
	{"i4uus27i4i4", (Il2CppMethodPointer)__N2M_i4uus27i4i4},
	{"i4uus28i4i4", (Il2CppMethodPointer)__N2M_i4uus28i4i4},
	{"i4uus34i4i4", (Il2CppMethodPointer)__N2M_i4uus34i4i4},
	{"i4uus35i4i4", (Il2CppMethodPointer)__N2M_i4uus35i4i4},
	{"i4uus36i4i4", (Il2CppMethodPointer)__N2M_i4uus36i4i4},
	{"i4uus38i4i4", (Il2CppMethodPointer)__N2M_i4uus38i4i4},
	{"i4uus39i4i4", (Il2CppMethodPointer)__N2M_i4uus39i4i4},
	{"i4uus3i4i4", (Il2CppMethodPointer)__N2M_i4uus3i4i4},
	{"i4uus40i4i4", (Il2CppMethodPointer)__N2M_i4uus40i4i4},
	{"i4uus41i4i4", (Il2CppMethodPointer)__N2M_i4uus41i4i4},
	{"i4uus42i4i4", (Il2CppMethodPointer)__N2M_i4uus42i4i4},
	{"i4uus43i4i4", (Il2CppMethodPointer)__N2M_i4uus43i4i4},
	{"i4uus51i4i4", (Il2CppMethodPointer)__N2M_i4uus51i4i4},
	{"i4uus62i4i4", (Il2CppMethodPointer)__N2M_i4uus62i4i4},
	{"i4uus63i4i4", (Il2CppMethodPointer)__N2M_i4uus63i4i4},
	{"i4uus64i4i4", (Il2CppMethodPointer)__N2M_i4uus64i4i4},
	{"i4uus65i4i4", (Il2CppMethodPointer)__N2M_i4uus65i4i4},
	{"i4uus66i4i4", (Il2CppMethodPointer)__N2M_i4uus66i4i4},
	{"i4uus68i4i4", (Il2CppMethodPointer)__N2M_i4uus68i4i4},
	{"i4uus69i4i4", (Il2CppMethodPointer)__N2M_i4uus69i4i4},
	{"i4uus6i4i4", (Il2CppMethodPointer)__N2M_i4uus6i4i4},
	{"i4uus70i4i4", (Il2CppMethodPointer)__N2M_i4uus70i4i4},
	{"i4uus77i4i4", (Il2CppMethodPointer)__N2M_i4uus77i4i4},
	{"i4uus78i4i4", (Il2CppMethodPointer)__N2M_i4uus78i4i4},
	{"i4uuu", (Il2CppMethodPointer)__N2M_i4uuu},
	{"i4uuu1i4", (Il2CppMethodPointer)__N2M_i4uuu1i4},
	{"i4uuu1i4i4", (Il2CppMethodPointer)__N2M_i4uuu1i4i4},
	{"i4uuu2i4i4", (Il2CppMethodPointer)__N2M_i4uuu2i4i4},
	{"i4uuui4", (Il2CppMethodPointer)__N2M_i4uuui4},
	{"i4uuui4i4", (Il2CppMethodPointer)__N2M_i4uuui4i4},
	{"i4uuui4i4i4", (Il2CppMethodPointer)__N2M_i4uuui4i4i4},
	{"i4uuui4u", (Il2CppMethodPointer)__N2M_i4uuui4u},
	{"i4uuui4u1", (Il2CppMethodPointer)__N2M_i4uuui4u1},
	{"i4uuui4u1u", (Il2CppMethodPointer)__N2M_i4uuui4u1u},
	{"i4uuui4uu", (Il2CppMethodPointer)__N2M_i4uuui4uu},
	{"i4uuuu", (Il2CppMethodPointer)__N2M_i4uuuu},
	{"i4uuuu1", (Il2CppMethodPointer)__N2M_i4uuuu1},
	{"i4uuuu1u", (Il2CppMethodPointer)__N2M_i4uuuu1u},
	{"i4uuuui4", (Il2CppMethodPointer)__N2M_i4uuuui4},
	{"i4uuuui4u", (Il2CppMethodPointer)__N2M_i4uuuui4u},
	{"i4uuuuu", (Il2CppMethodPointer)__N2M_i4uuuuu},
	{"i8u", (Il2CppMethodPointer)__N2M_i8u},
	{"i8ui4", (Il2CppMethodPointer)__N2M_i8ui4},
	{"i8ui8i4", (Il2CppMethodPointer)__N2M_i8ui8i4},
	{"i8uu", (Il2CppMethodPointer)__N2M_i8uu},
	{"i8uuu", (Il2CppMethodPointer)__N2M_i8uuu},
	{"iu", (Il2CppMethodPointer)__N2M_iu},
	{"iui4", (Il2CppMethodPointer)__N2M_iui4},
	{"iuu", (Il2CppMethodPointer)__N2M_iuu},
	{"iuui", (Il2CppMethodPointer)__N2M_iuui},
	{"r4u", (Il2CppMethodPointer)__N2M_r4u},
	{"r4ui4", (Il2CppMethodPointer)__N2M_r4ui4},
	{"r4ur4r4", (Il2CppMethodPointer)__N2M_r4ur4r4},
	{"r4uu", (Il2CppMethodPointer)__N2M_r4uu},
	{"r4uur4", (Il2CppMethodPointer)__N2M_r4uur4},
	{"r4uur4r4", (Il2CppMethodPointer)__N2M_r4uur4r4},
	{"r8u", (Il2CppMethodPointer)__N2M_r8u},
	{"r8uu", (Il2CppMethodPointer)__N2M_r8uu},
	{"s0u", (Il2CppMethodPointer)__N2M_s0u},
	{"s0ui4", (Il2CppMethodPointer)__N2M_s0ui4},
	{"s0uu", (Il2CppMethodPointer)__N2M_s0uu},
	{"s100", (Il2CppMethodPointer)__N2M_s100},
	{"s100u", (Il2CppMethodPointer)__N2M_s100u},
	{"s100uu", (Il2CppMethodPointer)__N2M_s100uu},
	{"s100uuu", (Il2CppMethodPointer)__N2M_s100uuu},
	{"s115us115", (Il2CppMethodPointer)__N2M_s115us115},
	{"s115us736s734i", (Il2CppMethodPointer)__N2M_s115us736s734i},
	{"s115uus736s734i", (Il2CppMethodPointer)__N2M_s115uus736s734i},
	{"s116u", (Il2CppMethodPointer)__N2M_s116u},
	{"s144u", (Il2CppMethodPointer)__N2M_s144u},
	{"s144ur4i4r4i4", (Il2CppMethodPointer)__N2M_s144ur4i4r4i4},
	{"s144uur4i4r4i4", (Il2CppMethodPointer)__N2M_s144uur4i4r4i4},
	{"s148u", (Il2CppMethodPointer)__N2M_s148u},
	{"s151u", (Il2CppMethodPointer)__N2M_s151u},
	{"s152u", (Il2CppMethodPointer)__N2M_s152u},
	{"s161u", (Il2CppMethodPointer)__N2M_s161u},
	{"s16u", (Il2CppMethodPointer)__N2M_s16u},
	{"s16uu", (Il2CppMethodPointer)__N2M_s16uu},
	{"s17u", (Il2CppMethodPointer)__N2M_s17u},
	{"s17uu", (Il2CppMethodPointer)__N2M_s17uu},
	{"s182s205u", (Il2CppMethodPointer)__N2M_s182s205u},
	{"s182us205u", (Il2CppMethodPointer)__N2M_s182us205u},
	{"s193u", (Il2CppMethodPointer)__N2M_s193u},
	{"s19u", (Il2CppMethodPointer)__N2M_s19u},
	{"s19uu", (Il2CppMethodPointer)__N2M_s19uu},
	{"s1u", (Il2CppMethodPointer)__N2M_s1u},
	{"s1ui4", (Il2CppMethodPointer)__N2M_s1ui4},
	{"s202u", (Il2CppMethodPointer)__N2M_s202u},
	{"s205u", (Il2CppMethodPointer)__N2M_s205u},
	{"s21u", (Il2CppMethodPointer)__N2M_s21u},
	{"s21ui4", (Il2CppMethodPointer)__N2M_s21ui4},
	{"s248us86s90", (Il2CppMethodPointer)__N2M_s248us86s90},
	{"s24u", (Il2CppMethodPointer)__N2M_s24u},
	{"s24ui4", (Il2CppMethodPointer)__N2M_s24ui4},
	{"s26u", (Il2CppMethodPointer)__N2M_s26u},
	{"s27u", (Il2CppMethodPointer)__N2M_s27u},
	{"s28u", (Il2CppMethodPointer)__N2M_s28u},
	{"s28ui4", (Il2CppMethodPointer)__N2M_s28ui4},
	{"s30u", (Il2CppMethodPointer)__N2M_s30u},
	{"s30ui4i4i4i4i4i4i4i4", (Il2CppMethodPointer)__N2M_s30ui4i4i4i4i4i4i4i4},
	{"s30uu", (Il2CppMethodPointer)__N2M_s30uu},
	{"s318ui4", (Il2CppMethodPointer)__N2M_s318ui4},
	{"s31u", (Il2CppMethodPointer)__N2M_s31u},
	{"s34u", (Il2CppMethodPointer)__N2M_s34u},
	{"s34ui4", (Il2CppMethodPointer)__N2M_s34ui4},
	{"s35u", (Il2CppMethodPointer)__N2M_s35u},
	{"s36u", (Il2CppMethodPointer)__N2M_s36u},
	{"s38u", (Il2CppMethodPointer)__N2M_s38u},
	{"s39u", (Il2CppMethodPointer)__N2M_s39u},
	{"s39ui4", (Il2CppMethodPointer)__N2M_s39ui4},
	{"s3u", (Il2CppMethodPointer)__N2M_s3u},
	{"s3ui4", (Il2CppMethodPointer)__N2M_s3ui4},
	{"s3us34", (Il2CppMethodPointer)__N2M_s3us34},
	{"s40u", (Il2CppMethodPointer)__N2M_s40u},
	{"s40ui4", (Il2CppMethodPointer)__N2M_s40ui4},
	{"s40us321", (Il2CppMethodPointer)__N2M_s40us321},
	{"s41u", (Il2CppMethodPointer)__N2M_s41u},
	{"s41uu", (Il2CppMethodPointer)__N2M_s41uu},
	{"s42u", (Il2CppMethodPointer)__N2M_s42u},
	{"s42uu", (Il2CppMethodPointer)__N2M_s42uu},
	{"s432u", (Il2CppMethodPointer)__N2M_s432u},
	{"s43u", (Il2CppMethodPointer)__N2M_s43u},
	{"s43ui4", (Il2CppMethodPointer)__N2M_s43ui4},
	{"s43uu", (Il2CppMethodPointer)__N2M_s43uu},
	{"s44u", (Il2CppMethodPointer)__N2M_s44u},
	{"s45u", (Il2CppMethodPointer)__N2M_s45u},
	{"s47u", (Il2CppMethodPointer)__N2M_s47u},
	{"s48u", (Il2CppMethodPointer)__N2M_s48u},
	{"s503u", (Il2CppMethodPointer)__N2M_s503u},
	{"s504u", (Il2CppMethodPointer)__N2M_s504u},
	{"s505u", (Il2CppMethodPointer)__N2M_s505u},
	{"s506u", (Il2CppMethodPointer)__N2M_s506u},
	{"s507u", (Il2CppMethodPointer)__N2M_s507u},
	{"s51u", (Il2CppMethodPointer)__N2M_s51u},
	{"s51ui4", (Il2CppMethodPointer)__N2M_s51ui4},
	{"s526", (Il2CppMethodPointer)__N2M_s526},
	{"s526u", (Il2CppMethodPointer)__N2M_s526u},
	{"s52u", (Il2CppMethodPointer)__N2M_s52u},
	{"s53u", (Il2CppMethodPointer)__N2M_s53u},
	{"s54u", (Il2CppMethodPointer)__N2M_s54u},
	{"s55u", (Il2CppMethodPointer)__N2M_s55u},
	{"s57u", (Il2CppMethodPointer)__N2M_s57u},
	{"s58u", (Il2CppMethodPointer)__N2M_s58u},
	{"s59u", (Il2CppMethodPointer)__N2M_s59u},
	{"s61u", (Il2CppMethodPointer)__N2M_s61u},
	{"s62u", (Il2CppMethodPointer)__N2M_s62u},
	{"s62ui4", (Il2CppMethodPointer)__N2M_s62ui4},
	{"s63u", (Il2CppMethodPointer)__N2M_s63u},
	{"s63ui4", (Il2CppMethodPointer)__N2M_s63ui4},
	{"s64us28", (Il2CppMethodPointer)__N2M_s64us28},
	{"s65u", (Il2CppMethodPointer)__N2M_s65u},
	{"s65ui4", (Il2CppMethodPointer)__N2M_s65ui4},
	{"s66u", (Il2CppMethodPointer)__N2M_s66u},
	{"s68u", (Il2CppMethodPointer)__N2M_s68u},
	{"s68ui4", (Il2CppMethodPointer)__N2M_s68ui4},
	{"s6u", (Il2CppMethodPointer)__N2M_s6u},
	{"s6ui4", (Il2CppMethodPointer)__N2M_s6ui4},
	{"s6uu", (Il2CppMethodPointer)__N2M_s6uu},
	{"s70u", (Il2CppMethodPointer)__N2M_s70u},
	{"s763u", (Il2CppMethodPointer)__N2M_s763u},
	{"s77u", (Il2CppMethodPointer)__N2M_s77u},
	{"s77ui4", (Il2CppMethodPointer)__N2M_s77ui4},
	{"s78u", (Il2CppMethodPointer)__N2M_s78u},
	{"s78ui4", (Il2CppMethodPointer)__N2M_s78ui4},
	{"s79ui4", (Il2CppMethodPointer)__N2M_s79ui4},
	{"s81u", (Il2CppMethodPointer)__N2M_s81u},
	{"s82uu1", (Il2CppMethodPointer)__N2M_s82uu1},
	{"s83u", (Il2CppMethodPointer)__N2M_s83u},
	{"s83uu", (Il2CppMethodPointer)__N2M_s83uu},
	{"s85u", (Il2CppMethodPointer)__N2M_s85u},
	{"s90us761", (Il2CppMethodPointer)__N2M_s90us761},
	{"s93us86s90", (Il2CppMethodPointer)__N2M_s93us86s90},
	{"s94u", (Il2CppMethodPointer)__N2M_s94u},
	{"s94us94", (Il2CppMethodPointer)__N2M_s94us94},
	{"s94uu", (Il2CppMethodPointer)__N2M_s94uu},
	{"u", (Il2CppMethodPointer)__N2M_u},
	{"u1", (Il2CppMethodPointer)__N2M_u1},
	{"u1i4", (Il2CppMethodPointer)__N2M_u1i4},
	{"u1i4i", (Il2CppMethodPointer)__N2M_u1i4i},
	{"u1i8", (Il2CppMethodPointer)__N2M_u1i8},
	{"u1s0", (Il2CppMethodPointer)__N2M_u1s0},
	{"u1s1", (Il2CppMethodPointer)__N2M_u1s1},
	{"u1s21", (Il2CppMethodPointer)__N2M_u1s21},
	{"u1s28", (Il2CppMethodPointer)__N2M_u1s28},
	{"u1s34", (Il2CppMethodPointer)__N2M_u1s34},
	{"u1s40", (Il2CppMethodPointer)__N2M_u1s40},
	{"u1s43", (Il2CppMethodPointer)__N2M_u1s43},
	{"u1s51", (Il2CppMethodPointer)__N2M_u1s51},
	{"u1s62", (Il2CppMethodPointer)__N2M_u1s62},
	{"u1s63", (Il2CppMethodPointer)__N2M_u1s63},
	{"u1s65", (Il2CppMethodPointer)__N2M_u1s65},
	{"u1s68", (Il2CppMethodPointer)__N2M_u1s68},
	{"u1s77", (Il2CppMethodPointer)__N2M_u1s77},
	{"u1s78", (Il2CppMethodPointer)__N2M_u1s78},
	{"u1u", (Il2CppMethodPointer)__N2M_u1u},
	{"u1ui", (Il2CppMethodPointer)__N2M_u1ui},
	{"u1ui1", (Il2CppMethodPointer)__N2M_u1ui1},
	{"u1ui1i1", (Il2CppMethodPointer)__N2M_u1ui1i1},
	{"u1ui2", (Il2CppMethodPointer)__N2M_u1ui2},
	{"u1ui2i2", (Il2CppMethodPointer)__N2M_u1ui2i2},
	{"u1ui4", (Il2CppMethodPointer)__N2M_u1ui4},
	{"u1ui4i", (Il2CppMethodPointer)__N2M_u1ui4i},
	{"u1ui4i4", (Il2CppMethodPointer)__N2M_u1ui4i4},
	{"u1ui4r4", (Il2CppMethodPointer)__N2M_u1ui4r4},
	{"u1ui4u", (Il2CppMethodPointer)__N2M_u1ui4u},
	{"u1ui4u1", (Il2CppMethodPointer)__N2M_u1ui4u1},
	{"u1ui8", (Il2CppMethodPointer)__N2M_u1ui8},
	{"u1ui8i8", (Il2CppMethodPointer)__N2M_u1ui8i8},
	{"u1uii", (Il2CppMethodPointer)__N2M_u1uii},
	{"u1ur4", (Il2CppMethodPointer)__N2M_u1ur4},
	{"u1ur8", (Il2CppMethodPointer)__N2M_u1ur8},
	{"u1us0", (Il2CppMethodPointer)__N2M_u1us0},
	{"u1us0s0", (Il2CppMethodPointer)__N2M_u1us0s0},
	{"u1us1", (Il2CppMethodPointer)__N2M_u1us1},
	{"u1us100", (Il2CppMethodPointer)__N2M_u1us100},
	{"u1us101", (Il2CppMethodPointer)__N2M_u1us101},
	{"u1us102", (Il2CppMethodPointer)__N2M_u1us102},
	{"u1us103", (Il2CppMethodPointer)__N2M_u1us103},
	{"u1us104", (Il2CppMethodPointer)__N2M_u1us104},
	{"u1us105", (Il2CppMethodPointer)__N2M_u1us105},
	{"u1us106", (Il2CppMethodPointer)__N2M_u1us106},
	{"u1us107", (Il2CppMethodPointer)__N2M_u1us107},
	{"u1us108", (Il2CppMethodPointer)__N2M_u1us108},
	{"u1us109", (Il2CppMethodPointer)__N2M_u1us109},
	{"u1us110", (Il2CppMethodPointer)__N2M_u1us110},
	{"u1us111", (Il2CppMethodPointer)__N2M_u1us111},
	{"u1us114", (Il2CppMethodPointer)__N2M_u1us114},
	{"u1us115", (Il2CppMethodPointer)__N2M_u1us115},
	{"u1us116", (Il2CppMethodPointer)__N2M_u1us116},
	{"u1us117", (Il2CppMethodPointer)__N2M_u1us117},
	{"u1us118", (Il2CppMethodPointer)__N2M_u1us118},
	{"u1us119", (Il2CppMethodPointer)__N2M_u1us119},
	{"u1us120", (Il2CppMethodPointer)__N2M_u1us120},
	{"u1us121", (Il2CppMethodPointer)__N2M_u1us121},
	{"u1us122", (Il2CppMethodPointer)__N2M_u1us122},
	{"u1us123", (Il2CppMethodPointer)__N2M_u1us123},
	{"u1us124", (Il2CppMethodPointer)__N2M_u1us124},
	{"u1us125", (Il2CppMethodPointer)__N2M_u1us125},
	{"u1us126", (Il2CppMethodPointer)__N2M_u1us126},
	{"u1us127", (Il2CppMethodPointer)__N2M_u1us127},
	{"u1us128", (Il2CppMethodPointer)__N2M_u1us128},
	{"u1us129", (Il2CppMethodPointer)__N2M_u1us129},
	{"u1us130", (Il2CppMethodPointer)__N2M_u1us130},
	{"u1us131", (Il2CppMethodPointer)__N2M_u1us131},
	{"u1us132", (Il2CppMethodPointer)__N2M_u1us132},
	{"u1us133", (Il2CppMethodPointer)__N2M_u1us133},
	{"u1us134", (Il2CppMethodPointer)__N2M_u1us134},
	{"u1us135", (Il2CppMethodPointer)__N2M_u1us135},
	{"u1us136", (Il2CppMethodPointer)__N2M_u1us136},
	{"u1us137", (Il2CppMethodPointer)__N2M_u1us137},
	{"u1us138", (Il2CppMethodPointer)__N2M_u1us138},
	{"u1us139", (Il2CppMethodPointer)__N2M_u1us139},
	{"u1us140", (Il2CppMethodPointer)__N2M_u1us140},
	{"u1us141", (Il2CppMethodPointer)__N2M_u1us141},
	{"u1us142", (Il2CppMethodPointer)__N2M_u1us142},
	{"u1us143", (Il2CppMethodPointer)__N2M_u1us143},
	{"u1us144", (Il2CppMethodPointer)__N2M_u1us144},
	{"u1us146", (Il2CppMethodPointer)__N2M_u1us146},
	{"u1us147", (Il2CppMethodPointer)__N2M_u1us147},
	{"u1us148", (Il2CppMethodPointer)__N2M_u1us148},
	{"u1us149", (Il2CppMethodPointer)__N2M_u1us149},
	{"u1us150", (Il2CppMethodPointer)__N2M_u1us150},
	{"u1us151", (Il2CppMethodPointer)__N2M_u1us151},
	{"u1us152", (Il2CppMethodPointer)__N2M_u1us152},
	{"u1us153", (Il2CppMethodPointer)__N2M_u1us153},
	{"u1us154", (Il2CppMethodPointer)__N2M_u1us154},
	{"u1us155", (Il2CppMethodPointer)__N2M_u1us155},
	{"u1us156", (Il2CppMethodPointer)__N2M_u1us156},
	{"u1us157", (Il2CppMethodPointer)__N2M_u1us157},
	{"u1us158", (Il2CppMethodPointer)__N2M_u1us158},
	{"u1us159", (Il2CppMethodPointer)__N2M_u1us159},
	{"u1us16", (Il2CppMethodPointer)__N2M_u1us16},
	{"u1us161", (Il2CppMethodPointer)__N2M_u1us161},
	{"u1us162", (Il2CppMethodPointer)__N2M_u1us162},
	{"u1us163", (Il2CppMethodPointer)__N2M_u1us163},
	{"u1us165", (Il2CppMethodPointer)__N2M_u1us165},
	{"u1us166", (Il2CppMethodPointer)__N2M_u1us166},
	{"u1us167", (Il2CppMethodPointer)__N2M_u1us167},
	{"u1us169", (Il2CppMethodPointer)__N2M_u1us169},
	{"u1us17", (Il2CppMethodPointer)__N2M_u1us17},
	{"u1us170", (Il2CppMethodPointer)__N2M_u1us170},
	{"u1us171", (Il2CppMethodPointer)__N2M_u1us171},
	{"u1us172", (Il2CppMethodPointer)__N2M_u1us172},
	{"u1us173", (Il2CppMethodPointer)__N2M_u1us173},
	{"u1us174", (Il2CppMethodPointer)__N2M_u1us174},
	{"u1us175", (Il2CppMethodPointer)__N2M_u1us175},
	{"u1us176", (Il2CppMethodPointer)__N2M_u1us176},
	{"u1us177", (Il2CppMethodPointer)__N2M_u1us177},
	{"u1us178", (Il2CppMethodPointer)__N2M_u1us178},
	{"u1us179", (Il2CppMethodPointer)__N2M_u1us179},
	{"u1us180", (Il2CppMethodPointer)__N2M_u1us180},
	{"u1us181", (Il2CppMethodPointer)__N2M_u1us181},
	{"u1us182", (Il2CppMethodPointer)__N2M_u1us182},
	{"u1us19", (Il2CppMethodPointer)__N2M_u1us19},
	{"u1us193", (Il2CppMethodPointer)__N2M_u1us193},
	{"u1us1s1", (Il2CppMethodPointer)__N2M_u1us1s1},
	{"u1us1uu", (Il2CppMethodPointer)__N2M_u1us1uu},
	{"u1us201", (Il2CppMethodPointer)__N2M_u1us201},
	{"u1us202", (Il2CppMethodPointer)__N2M_u1us202},
	{"u1us205", (Il2CppMethodPointer)__N2M_u1us205},
	{"u1us21", (Il2CppMethodPointer)__N2M_u1us21},
	{"u1us213", (Il2CppMethodPointer)__N2M_u1us213},
	{"u1us216", (Il2CppMethodPointer)__N2M_u1us216},
	{"u1us217", (Il2CppMethodPointer)__N2M_u1us217},
	{"u1us218", (Il2CppMethodPointer)__N2M_u1us218},
	{"u1us21s21", (Il2CppMethodPointer)__N2M_u1us21s21},
	{"u1us226", (Il2CppMethodPointer)__N2M_u1us226},
	{"u1us229", (Il2CppMethodPointer)__N2M_u1us229},
	{"u1us230", (Il2CppMethodPointer)__N2M_u1us230},
	{"u1us231", (Il2CppMethodPointer)__N2M_u1us231},
	{"u1us24", (Il2CppMethodPointer)__N2M_u1us24},
	{"u1us248", (Il2CppMethodPointer)__N2M_u1us248},
	{"u1us249", (Il2CppMethodPointer)__N2M_u1us249},
	{"u1us24s24", (Il2CppMethodPointer)__N2M_u1us24s24},
	{"u1us250", (Il2CppMethodPointer)__N2M_u1us250},
	{"u1us251", (Il2CppMethodPointer)__N2M_u1us251},
	{"u1us252", (Il2CppMethodPointer)__N2M_u1us252},
	{"u1us253", (Il2CppMethodPointer)__N2M_u1us253},
	{"u1us254", (Il2CppMethodPointer)__N2M_u1us254},
	{"u1us26", (Il2CppMethodPointer)__N2M_u1us26},
	{"u1us26s26", (Il2CppMethodPointer)__N2M_u1us26s26},
	{"u1us27", (Il2CppMethodPointer)__N2M_u1us27},
	{"u1us27s27", (Il2CppMethodPointer)__N2M_u1us27s27},
	{"u1us28", (Il2CppMethodPointer)__N2M_u1us28},
	{"u1us28s28", (Il2CppMethodPointer)__N2M_u1us28s28},
	{"u1us28u", (Il2CppMethodPointer)__N2M_u1us28u},
	{"u1us3", (Il2CppMethodPointer)__N2M_u1us3},
	{"u1us30", (Il2CppMethodPointer)__N2M_u1us30},
	{"u1us31u", (Il2CppMethodPointer)__N2M_u1us31u},
	{"u1us31us31u", (Il2CppMethodPointer)__N2M_u1us31us31u},
	{"u1us34", (Il2CppMethodPointer)__N2M_u1us34},
	{"u1us34s34", (Il2CppMethodPointer)__N2M_u1us34s34},
	{"u1us35", (Il2CppMethodPointer)__N2M_u1us35},
	{"u1us35s35", (Il2CppMethodPointer)__N2M_u1us35s35},
	{"u1us35u", (Il2CppMethodPointer)__N2M_u1us35u},
	{"u1us35ui4", (Il2CppMethodPointer)__N2M_u1us35ui4},
	{"u1us36", (Il2CppMethodPointer)__N2M_u1us36},
	{"u1us36s36", (Il2CppMethodPointer)__N2M_u1us36s36},
	{"u1us36u", (Il2CppMethodPointer)__N2M_u1us36u},
	{"u1us38", (Il2CppMethodPointer)__N2M_u1us38},
	{"u1us38s38", (Il2CppMethodPointer)__N2M_u1us38s38},
	{"u1us38u", (Il2CppMethodPointer)__N2M_u1us38u},
	{"u1us39", (Il2CppMethodPointer)__N2M_u1us39},
	{"u1us39s39", (Il2CppMethodPointer)__N2M_u1us39s39},
	{"u1us3s3", (Il2CppMethodPointer)__N2M_u1us3s3},
	{"u1us40", (Il2CppMethodPointer)__N2M_u1us40},
	{"u1us40s40", (Il2CppMethodPointer)__N2M_u1us40s40},
	{"u1us41", (Il2CppMethodPointer)__N2M_u1us41},
	{"u1us41s41", (Il2CppMethodPointer)__N2M_u1us41s41},
	{"u1us42", (Il2CppMethodPointer)__N2M_u1us42},
	{"u1us42s42", (Il2CppMethodPointer)__N2M_u1us42s42},
	{"u1us43", (Il2CppMethodPointer)__N2M_u1us43},
	{"u1us43s43", (Il2CppMethodPointer)__N2M_u1us43s43},
	{"u1us44", (Il2CppMethodPointer)__N2M_u1us44},
	{"u1us45", (Il2CppMethodPointer)__N2M_u1us45},
	{"u1us47", (Il2CppMethodPointer)__N2M_u1us47},
	{"u1us48", (Il2CppMethodPointer)__N2M_u1us48},
	{"u1us51", (Il2CppMethodPointer)__N2M_u1us51},
	{"u1us510", (Il2CppMethodPointer)__N2M_u1us510},
	{"u1us51s51", (Il2CppMethodPointer)__N2M_u1us51s51},
	{"u1us52", (Il2CppMethodPointer)__N2M_u1us52},
	{"u1us53", (Il2CppMethodPointer)__N2M_u1us53},
	{"u1us54", (Il2CppMethodPointer)__N2M_u1us54},
	{"u1us55", (Il2CppMethodPointer)__N2M_u1us55},
	{"u1us57", (Il2CppMethodPointer)__N2M_u1us57},
	{"u1us58", (Il2CppMethodPointer)__N2M_u1us58},
	{"u1us59", (Il2CppMethodPointer)__N2M_u1us59},
	{"u1us6", (Il2CppMethodPointer)__N2M_u1us6},
	{"u1us61", (Il2CppMethodPointer)__N2M_u1us61},
	{"u1us62", (Il2CppMethodPointer)__N2M_u1us62},
	{"u1us62s62", (Il2CppMethodPointer)__N2M_u1us62s62},
	{"u1us63", (Il2CppMethodPointer)__N2M_u1us63},
	{"u1us63s63", (Il2CppMethodPointer)__N2M_u1us63s63},
	{"u1us64s64", (Il2CppMethodPointer)__N2M_u1us64s64},
	{"u1us65", (Il2CppMethodPointer)__N2M_u1us65},
	{"u1us65s65", (Il2CppMethodPointer)__N2M_u1us65s65},
	{"u1us66", (Il2CppMethodPointer)__N2M_u1us66},
	{"u1us66s66", (Il2CppMethodPointer)__N2M_u1us66s66},
	{"u1us68", (Il2CppMethodPointer)__N2M_u1us68},
	{"u1us68s68", (Il2CppMethodPointer)__N2M_u1us68s68},
	{"u1us69", (Il2CppMethodPointer)__N2M_u1us69},
	{"u1us69s69", (Il2CppMethodPointer)__N2M_u1us69s69},
	{"u1us6s6", (Il2CppMethodPointer)__N2M_u1us6s6},
	{"u1us6u", (Il2CppMethodPointer)__N2M_u1us6u},
	{"u1us70", (Il2CppMethodPointer)__N2M_u1us70},
	{"u1us70s70", (Il2CppMethodPointer)__N2M_u1us70s70},
	{"u1us763", (Il2CppMethodPointer)__N2M_u1us763},
	{"u1us77", (Il2CppMethodPointer)__N2M_u1us77},
	{"u1us77s77", (Il2CppMethodPointer)__N2M_u1us77s77},
	{"u1us78", (Il2CppMethodPointer)__N2M_u1us78},
	{"u1us78s78", (Il2CppMethodPointer)__N2M_u1us78s78},
	{"u1us79", (Il2CppMethodPointer)__N2M_u1us79},
	{"u1us81", (Il2CppMethodPointer)__N2M_u1us81},
	{"u1us83", (Il2CppMethodPointer)__N2M_u1us83},
	{"u1us84", (Il2CppMethodPointer)__N2M_u1us84},
	{"u1us85", (Il2CppMethodPointer)__N2M_u1us85},
	{"u1us86", (Il2CppMethodPointer)__N2M_u1us86},
	{"u1us87", (Il2CppMethodPointer)__N2M_u1us87},
	{"u1us88", (Il2CppMethodPointer)__N2M_u1us88},
	{"u1us90", (Il2CppMethodPointer)__N2M_u1us90},
	{"u1us92", (Il2CppMethodPointer)__N2M_u1us92},
	{"u1us93", (Il2CppMethodPointer)__N2M_u1us93},
	{"u1us94", (Il2CppMethodPointer)__N2M_u1us94},
	{"u1us95", (Il2CppMethodPointer)__N2M_u1us95},
	{"u1us97", (Il2CppMethodPointer)__N2M_u1us97},
	{"u1us98", (Il2CppMethodPointer)__N2M_u1us98},
	{"u1us99", (Il2CppMethodPointer)__N2M_u1us99},
	{"u1uu", (Il2CppMethodPointer)__N2M_u1uu},
	{"u1uu1", (Il2CppMethodPointer)__N2M_u1uu1},
	{"u1uu1u", (Il2CppMethodPointer)__N2M_u1uu1u},
	{"u1uu1u1", (Il2CppMethodPointer)__N2M_u1uu1u1},
	{"u1uu2", (Il2CppMethodPointer)__N2M_u1uu2},
	{"u1uu2i4", (Il2CppMethodPointer)__N2M_u1uu2i4},
	{"u1uu2u2", (Il2CppMethodPointer)__N2M_u1uu2u2},
	{"u1uu2u2i4", (Il2CppMethodPointer)__N2M_u1uu2u2i4},
	{"u1uu4", (Il2CppMethodPointer)__N2M_u1uu4},
	{"u1uu8", (Il2CppMethodPointer)__N2M_u1uu8},
	{"u1uui4", (Il2CppMethodPointer)__N2M_u1uui4},
	{"u1uui4i4", (Il2CppMethodPointer)__N2M_u1uui4i4},
	{"u1uui4i4u", (Il2CppMethodPointer)__N2M_u1uui4i4u},
	{"u1uui4u", (Il2CppMethodPointer)__N2M_u1uui4u},
	{"u1uur4i4r4i4u", (Il2CppMethodPointer)__N2M_u1uur4i4r4i4u},
	{"u1uus16", (Il2CppMethodPointer)__N2M_u1uus16},
	{"u1uus17", (Il2CppMethodPointer)__N2M_u1uus17},
	{"u1uus19", (Il2CppMethodPointer)__N2M_u1uus19},
	{"u1uuu", (Il2CppMethodPointer)__N2M_u1uuu},
	{"u1uuu1", (Il2CppMethodPointer)__N2M_u1uuu1},
	{"u1uuu1i4r4u", (Il2CppMethodPointer)__N2M_u1uuu1i4r4u},
	{"u1uuu1u1r4u", (Il2CppMethodPointer)__N2M_u1uuu1u1r4u},
	{"u1uuui4", (Il2CppMethodPointer)__N2M_u1uuui4},
	{"u1uuui4i4", (Il2CppMethodPointer)__N2M_u1uuui4i4},
	{"u1uuui4i4u", (Il2CppMethodPointer)__N2M_u1uuui4i4u},
	{"u1uuuu", (Il2CppMethodPointer)__N2M_u1uuuu},
	{"u1uuuui4i4u", (Il2CppMethodPointer)__N2M_u1uuuui4i4u},
	{"u1uuuuu", (Il2CppMethodPointer)__N2M_u1uuuuu},
	{"u1uuuuuu", (Il2CppMethodPointer)__N2M_u1uuuuuu},
	{"u2u", (Il2CppMethodPointer)__N2M_u2u},
	{"u2uu", (Il2CppMethodPointer)__N2M_u2uu},
	{"u2uu2", (Il2CppMethodPointer)__N2M_u2uu2},
	{"u4u", (Il2CppMethodPointer)__N2M_u4u},
	{"u4uu", (Il2CppMethodPointer)__N2M_u4uu},
	{"u8u", (Il2CppMethodPointer)__N2M_u8u},
	{"u8uu", (Il2CppMethodPointer)__N2M_u8uu},
	{"u8uui8u", (Il2CppMethodPointer)__N2M_u8uui8u},
	{"u8uuui8u", (Il2CppMethodPointer)__N2M_u8uuui8u},
	{"us34", (Il2CppMethodPointer)__N2M_us34},
	{"uu", (Il2CppMethodPointer)__N2M_uu},
	{"uui", (Il2CppMethodPointer)__N2M_uui},
	{"uui2", (Il2CppMethodPointer)__N2M_uui2},
	{"uui2ui4i4", (Il2CppMethodPointer)__N2M_uui2ui4i4},
	{"uui4", (Il2CppMethodPointer)__N2M_uui4},
	{"uui4i4", (Il2CppMethodPointer)__N2M_uui4i4},
	{"uui4i4i4", (Il2CppMethodPointer)__N2M_uui4i4i4},
	{"uui4i4i4i8i8uu", (Il2CppMethodPointer)__N2M_uui4i4i4i8i8uu},
	{"uui4r4", (Il2CppMethodPointer)__N2M_uui4r4},
	{"uui4r4i4", (Il2CppMethodPointer)__N2M_uui4r4i4},
	{"uui4s30", (Il2CppMethodPointer)__N2M_uui4s30},
	{"uui4ui4uu", (Il2CppMethodPointer)__N2M_uui4ui4uu},
	{"uui4uu", (Il2CppMethodPointer)__N2M_uui4uu},
	{"uui4uuu", (Il2CppMethodPointer)__N2M_uui4uuu},
	{"uui4uuuu", (Il2CppMethodPointer)__N2M_uui4uuuu},
	{"uui4uuuuuu", (Il2CppMethodPointer)__N2M_uui4uuuuuu},
	{"uui8", (Il2CppMethodPointer)__N2M_uui8},
	{"uuiuuu", (Il2CppMethodPointer)__N2M_uuiuuu},
	{"uur4", (Il2CppMethodPointer)__N2M_uur4},
	{"uur4i4", (Il2CppMethodPointer)__N2M_uur4i4},
	{"uus28", (Il2CppMethodPointer)__N2M_uus28},
	{"uus28ui4i4uuu", (Il2CppMethodPointer)__N2M_uus28ui4i4uuu},
	{"uus28uu1i4i4i4i4uu", (Il2CppMethodPointer)__N2M_uus28uu1i4i4i4i4uu},
	{"uus28uui4i4i4uu", (Il2CppMethodPointer)__N2M_uus28uui4i4i4uu},
	{"uus28uui4i4uu", (Il2CppMethodPointer)__N2M_uus28uui4i4uu},
	{"uus28uuuu", (Il2CppMethodPointer)__N2M_uus28uuuu},
	{"uus321", (Il2CppMethodPointer)__N2M_uus321},
	{"uus34", (Il2CppMethodPointer)__N2M_uus34},
	{"uus35", (Il2CppMethodPointer)__N2M_uus35},
	{"uus36", (Il2CppMethodPointer)__N2M_uus36},
	{"uus38", (Il2CppMethodPointer)__N2M_uus38},
	{"uus40uu", (Il2CppMethodPointer)__N2M_uus40uu},
	{"uus42", (Il2CppMethodPointer)__N2M_uus42},
	{"uus423uu", (Il2CppMethodPointer)__N2M_uus423uu},
	{"uus424uu", (Il2CppMethodPointer)__N2M_uus424uu},
	{"uus425uu", (Il2CppMethodPointer)__N2M_uus425uu},
	{"uus6", (Il2CppMethodPointer)__N2M_uus6},
	{"uus66", (Il2CppMethodPointer)__N2M_uus66},
	{"uus81", (Il2CppMethodPointer)__N2M_uus81},
	{"uus86uu", (Il2CppMethodPointer)__N2M_uus86uu},
	{"uuu", (Il2CppMethodPointer)__N2M_uuu},
	{"uuu1", (Il2CppMethodPointer)__N2M_uuu1},
	{"uuu1i4", (Il2CppMethodPointer)__N2M_uuu1i4},
	{"uuui4", (Il2CppMethodPointer)__N2M_uuui4},
	{"uuui4i4", (Il2CppMethodPointer)__N2M_uuui4i4},
	{"uuui4i4i4", (Il2CppMethodPointer)__N2M_uuui4i4i4},
	{"uuui4i4s90", (Il2CppMethodPointer)__N2M_uuui4i4s90},
	{"uuui4i4uu", (Il2CppMethodPointer)__N2M_uuui4i4uu},
	{"uuui4i4uuuu1uu1i4i4uu", (Il2CppMethodPointer)__N2M_uuui4i4uuuu1uu1i4i4uu},
	{"uuui4r4", (Il2CppMethodPointer)__N2M_uuui4r4},
	{"uuui4r4i4", (Il2CppMethodPointer)__N2M_uuui4r4i4},
	{"uuui4s30", (Il2CppMethodPointer)__N2M_uuui4s30},
	{"uuui4s30uu", (Il2CppMethodPointer)__N2M_uuui4s30uu},
	{"uuui4s38u1", (Il2CppMethodPointer)__N2M_uuui4s38u1},
	{"uuui4u1i4u", (Il2CppMethodPointer)__N2M_uuui4u1i4u},
	{"uuui4ui4uu", (Il2CppMethodPointer)__N2M_uuui4ui4uu},
	{"uuui4uu", (Il2CppMethodPointer)__N2M_uuui4uu},
	{"uuui4uuu", (Il2CppMethodPointer)__N2M_uuui4uuu},
	{"uuui4uuuu", (Il2CppMethodPointer)__N2M_uuui4uuuu},
	{"uuui4uuuuuu", (Il2CppMethodPointer)__N2M_uuui4uuuuuu},
	{"uuui8uu", (Il2CppMethodPointer)__N2M_uuui8uu},
	{"uuur4", (Il2CppMethodPointer)__N2M_uuur4},
	{"uuur4i4", (Il2CppMethodPointer)__N2M_uuur4i4},
	{"uuur4i4r4i4", (Il2CppMethodPointer)__N2M_uuur4i4r4i4},
	{"uuur4uuu", (Il2CppMethodPointer)__N2M_uuur4uuu},
	{"uuus16uu", (Il2CppMethodPointer)__N2M_uuus16uu},
	{"uuus17uu", (Il2CppMethodPointer)__N2M_uuus17uu},
	{"uuus19uu", (Il2CppMethodPointer)__N2M_uuus19uu},
	{"uuus38u1", (Il2CppMethodPointer)__N2M_uuus38u1},
	{"uuus42u", (Il2CppMethodPointer)__N2M_uuus42u},
	{"uuus86uu", (Il2CppMethodPointer)__N2M_uuus86uu},
	{"uuuu", (Il2CppMethodPointer)__N2M_uuuu},
	{"uuuu1", (Il2CppMethodPointer)__N2M_uuuu1},
	{"uuuu1i4i4", (Il2CppMethodPointer)__N2M_uuuu1i4i4},
	{"uuuu1i4i4i4", (Il2CppMethodPointer)__N2M_uuuu1i4i4i4},
	{"uuuu1i4uuu", (Il2CppMethodPointer)__N2M_uuuu1i4uuu},
	{"uuuu1u", (Il2CppMethodPointer)__N2M_uuuu1u},
	{"uuuu1u1", (Il2CppMethodPointer)__N2M_uuuu1u1},
	{"uuuu1uu", (Il2CppMethodPointer)__N2M_uuuu1uu},
	{"uuuu1uuuu", (Il2CppMethodPointer)__N2M_uuuu1uuuu},
	{"uuuui4", (Il2CppMethodPointer)__N2M_uuuui4},
	{"uuuui4i4", (Il2CppMethodPointer)__N2M_uuuui4i4},
	{"uuuui4i4uuu", (Il2CppMethodPointer)__N2M_uuuui4i4uuu},
	{"uuuui4r4", (Il2CppMethodPointer)__N2M_uuuui4r4},
	{"uuuui4r4i4", (Il2CppMethodPointer)__N2M_uuuui4r4i4},
	{"uuuui8uuu", (Il2CppMethodPointer)__N2M_uuuui8uuu},
	{"uuuui8uuuu", (Il2CppMethodPointer)__N2M_uuuui8uuuu},
	{"uuuur4", (Il2CppMethodPointer)__N2M_uuuur4},
	{"uuuur4i4", (Il2CppMethodPointer)__N2M_uuuur4i4},
	{"uuuur4i4r4i4", (Il2CppMethodPointer)__N2M_uuuur4i4r4i4},
	{"uuuur4uuu", (Il2CppMethodPointer)__N2M_uuuur4uuu},
	{"uuuus42u", (Il2CppMethodPointer)__N2M_uuuus42u},
	{"uuuuu", (Il2CppMethodPointer)__N2M_uuuuu},
	{"uuuuu1", (Il2CppMethodPointer)__N2M_uuuuu1},
	{"uuuuuu", (Il2CppMethodPointer)__N2M_uuuuuu},
	{"uuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuu},
	{"uuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuu},
	{"uuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuu},
	{"uuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuu},
	{"uuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuu},
	{"uuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuu},
	{"uuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuuuuuu},
	{"uuuuuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_uuuuuuuuuuuuuuuuuuuu},
	{"v", (Il2CppMethodPointer)__N2M_v},
	{"vi", (Il2CppMethodPointer)__N2M_vi},
	{"vi4", (Il2CppMethodPointer)__N2M_vi4},
	{"vi4i4", (Il2CppMethodPointer)__N2M_vi4i4},
	{"vi4i4i4i8i8", (Il2CppMethodPointer)__N2M_vi4i4i4i8i8},
	{"vi4i8i8u1", (Il2CppMethodPointer)__N2M_vi4i8i8u1},
	{"vi4u", (Il2CppMethodPointer)__N2M_vi4u},
	{"viiiiiii4u", (Il2CppMethodPointer)__N2M_viiiiiii4u},
	{"vr4", (Il2CppMethodPointer)__N2M_vr4},
	{"vs229", (Il2CppMethodPointer)__N2M_vs229},
	{"vs231", (Il2CppMethodPointer)__N2M_vs231},
	{"vs28ui4i4u", (Il2CppMethodPointer)__N2M_vs28ui4i4u},
	{"vs28uu", (Il2CppMethodPointer)__N2M_vs28uu},
	{"vs28uu1i4i4i4i4", (Il2CppMethodPointer)__N2M_vs28uu1i4i4i4i4},
	{"vs28uui4i4", (Il2CppMethodPointer)__N2M_vs28uui4i4},
	{"vs28uui4i4i4", (Il2CppMethodPointer)__N2M_vs28uui4i4i4},
	{"vs31s252", (Il2CppMethodPointer)__N2M_vs31s252},
	{"vs31s253", (Il2CppMethodPointer)__N2M_vs31s253},
	{"vs31s254", (Il2CppMethodPointer)__N2M_vs31s254},
	{"vs31u", (Il2CppMethodPointer)__N2M_vs31u},
	{"vs40", (Il2CppMethodPointer)__N2M_vs40},
	{"vs42", (Il2CppMethodPointer)__N2M_vs42},
	{"vs423", (Il2CppMethodPointer)__N2M_vs423},
	{"vs424", (Il2CppMethodPointer)__N2M_vs424},
	{"vs425", (Il2CppMethodPointer)__N2M_vs425},
	{"vs479", (Il2CppMethodPointer)__N2M_vs479},
	{"vs480", (Il2CppMethodPointer)__N2M_vs480},
	{"vs482", (Il2CppMethodPointer)__N2M_vs482},
	{"vs51", (Il2CppMethodPointer)__N2M_vs51},
	{"vs513", (Il2CppMethodPointer)__N2M_vs513},
	{"vs521", (Il2CppMethodPointer)__N2M_vs521},
	{"vs522", (Il2CppMethodPointer)__N2M_vs522},
	{"vs522u", (Il2CppMethodPointer)__N2M_vs522u},
	{"vs85", (Il2CppMethodPointer)__N2M_vs85},
	{"vs85i4", (Il2CppMethodPointer)__N2M_vs85i4},
	{"vs85s24", (Il2CppMethodPointer)__N2M_vs85s24},
	{"vs85s273", (Il2CppMethodPointer)__N2M_vs85s273},
	{"vs85s85", (Il2CppMethodPointer)__N2M_vs85s85},
	{"vu", (Il2CppMethodPointer)__N2M_vu},
	{"vu1", (Il2CppMethodPointer)__N2M_vu1},
	{"vu1u1i4", (Il2CppMethodPointer)__N2M_vu1u1i4},
	{"vui", (Il2CppMethodPointer)__N2M_vui},
	{"vui2", (Il2CppMethodPointer)__N2M_vui2},
	{"vui4", (Il2CppMethodPointer)__N2M_vui4},
	{"vui4i", (Il2CppMethodPointer)__N2M_vui4i},
	{"vui4i4", (Il2CppMethodPointer)__N2M_vui4i4},
	{"vui4i4i4", (Il2CppMethodPointer)__N2M_vui4i4i4},
	{"vui4i4i4i4i4", (Il2CppMethodPointer)__N2M_vui4i4i4i4i4},
	{"vui4i4i4i4u", (Il2CppMethodPointer)__N2M_vui4i4i4i4u},
	{"vui4i4i4i8i8", (Il2CppMethodPointer)__N2M_vui4i4i4i8i8},
	{"vui4i4u", (Il2CppMethodPointer)__N2M_vui4i4u},
	{"vui4i4uuuu1uu1i4i4", (Il2CppMethodPointer)__N2M_vui4i4uuuu1uu1i4i4},
	{"vui4i8", (Il2CppMethodPointer)__N2M_vui4i8},
	{"vui4i8i8u1", (Il2CppMethodPointer)__N2M_vui4i8i8u1},
	{"vui4r4", (Il2CppMethodPointer)__N2M_vui4r4},
	{"vui4s0", (Il2CppMethodPointer)__N2M_vui4s0},
	{"vui4s1", (Il2CppMethodPointer)__N2M_vui4s1},
	{"vui4s21", (Il2CppMethodPointer)__N2M_vui4s21},
	{"vui4s24", (Il2CppMethodPointer)__N2M_vui4s24},
	{"vui4s28", (Il2CppMethodPointer)__N2M_vui4s28},
	{"vui4s3", (Il2CppMethodPointer)__N2M_vui4s3},
	{"vui4s34", (Il2CppMethodPointer)__N2M_vui4s34},
	{"vui4s39", (Il2CppMethodPointer)__N2M_vui4s39},
	{"vui4s40", (Il2CppMethodPointer)__N2M_vui4s40},
	{"vui4s43", (Il2CppMethodPointer)__N2M_vui4s43},
	{"vui4s51", (Il2CppMethodPointer)__N2M_vui4s51},
	{"vui4s514", (Il2CppMethodPointer)__N2M_vui4s514},
	{"vui4s6", (Il2CppMethodPointer)__N2M_vui4s6},
	{"vui4s62", (Il2CppMethodPointer)__N2M_vui4s62},
	{"vui4s63", (Il2CppMethodPointer)__N2M_vui4s63},
	{"vui4s65", (Il2CppMethodPointer)__N2M_vui4s65},
	{"vui4s68", (Il2CppMethodPointer)__N2M_vui4s68},
	{"vui4s77", (Il2CppMethodPointer)__N2M_vui4s77},
	{"vui4s78", (Il2CppMethodPointer)__N2M_vui4s78},
	{"vui4s79", (Il2CppMethodPointer)__N2M_vui4s79},
	{"vui4u", (Il2CppMethodPointer)__N2M_vui4u},
	{"vui4u1", (Il2CppMethodPointer)__N2M_vui4u1},
	{"vui4uu", (Il2CppMethodPointer)__N2M_vui4uu},
	{"vui4uui4", (Il2CppMethodPointer)__N2M_vui4uui4},
	{"vui4uui4u", (Il2CppMethodPointer)__N2M_vui4uui4u},
	{"vui4uuu", (Il2CppMethodPointer)__N2M_vui4uuu},
	{"vui4uuu1u", (Il2CppMethodPointer)__N2M_vui4uuu1u},
	{"vui4uuu1u1u", (Il2CppMethodPointer)__N2M_vui4uuu1u1u},
	{"vui8", (Il2CppMethodPointer)__N2M_vui8},
	{"vui8i4", (Il2CppMethodPointer)__N2M_vui8i4},
	{"vui8ui8", (Il2CppMethodPointer)__N2M_vui8ui8},
	{"vuiii4i4u", (Il2CppMethodPointer)__N2M_vuiii4i4u},
	{"vuiiiiiii4u", (Il2CppMethodPointer)__N2M_vuiiiiiii4u},
	{"vuiiui4", (Il2CppMethodPointer)__N2M_vuiiui4},
	{"vur4", (Il2CppMethodPointer)__N2M_vur4},
	{"vur4r4", (Il2CppMethodPointer)__N2M_vur4r4},
	{"vur4u", (Il2CppMethodPointer)__N2M_vur4u},
	{"vur8", (Il2CppMethodPointer)__N2M_vur8},
	{"vus0", (Il2CppMethodPointer)__N2M_vus0},
	{"vus1", (Il2CppMethodPointer)__N2M_vus1},
	{"vus148", (Il2CppMethodPointer)__N2M_vus148},
	{"vus182", (Il2CppMethodPointer)__N2M_vus182},
	{"vus182s518", (Il2CppMethodPointer)__N2M_vus182s518},
	{"vus182s518u", (Il2CppMethodPointer)__N2M_vus182s518u},
	{"vus182uu", (Il2CppMethodPointer)__N2M_vus182uu},
	{"vus1u", (Il2CppMethodPointer)__N2M_vus1u},
	{"vus1uu", (Il2CppMethodPointer)__N2M_vus1uu},
	{"vus21", (Il2CppMethodPointer)__N2M_vus21},
	{"vus229", (Il2CppMethodPointer)__N2M_vus229},
	{"vus231", (Il2CppMethodPointer)__N2M_vus231},
	{"vus24", (Il2CppMethodPointer)__N2M_vus24},
	{"vus26", (Il2CppMethodPointer)__N2M_vus26},
	{"vus27", (Il2CppMethodPointer)__N2M_vus27},
	{"vus28", (Il2CppMethodPointer)__N2M_vus28},
	{"vus28s64", (Il2CppMethodPointer)__N2M_vus28s64},
	{"vus28u", (Il2CppMethodPointer)__N2M_vus28u},
	{"vus28ui4i4u", (Il2CppMethodPointer)__N2M_vus28ui4i4u},
	{"vus28uu", (Il2CppMethodPointer)__N2M_vus28uu},
	{"vus28uu1i4i4i4i4", (Il2CppMethodPointer)__N2M_vus28uu1i4i4i4i4},
	{"vus28uui4i4", (Il2CppMethodPointer)__N2M_vus28uui4i4},
	{"vus28uui4i4i4", (Il2CppMethodPointer)__N2M_vus28uui4i4i4},
	{"vus3", (Il2CppMethodPointer)__N2M_vus3},
	{"vus31", (Il2CppMethodPointer)__N2M_vus31},
	{"vus31s252", (Il2CppMethodPointer)__N2M_vus31s252},
	{"vus31s253", (Il2CppMethodPointer)__N2M_vus31s253},
	{"vus31s254", (Il2CppMethodPointer)__N2M_vus31s254},
	{"vus31u", (Il2CppMethodPointer)__N2M_vus31u},
	{"vus34", (Il2CppMethodPointer)__N2M_vus34},
	{"vus35", (Il2CppMethodPointer)__N2M_vus35},
	{"vus35u", (Il2CppMethodPointer)__N2M_vus35u},
	{"vus35ui4", (Il2CppMethodPointer)__N2M_vus35ui4},
	{"vus36", (Il2CppMethodPointer)__N2M_vus36},
	{"vus36u", (Il2CppMethodPointer)__N2M_vus36u},
	{"vus38", (Il2CppMethodPointer)__N2M_vus38},
	{"vus38u", (Il2CppMethodPointer)__N2M_vus38u},
	{"vus39", (Il2CppMethodPointer)__N2M_vus39},
	{"vus39u1", (Il2CppMethodPointer)__N2M_vus39u1},
	{"vus40", (Il2CppMethodPointer)__N2M_vus40},
	{"vus41", (Il2CppMethodPointer)__N2M_vus41},
	{"vus42", (Il2CppMethodPointer)__N2M_vus42},
	{"vus423", (Il2CppMethodPointer)__N2M_vus423},
	{"vus424", (Il2CppMethodPointer)__N2M_vus424},
	{"vus425", (Il2CppMethodPointer)__N2M_vus425},
	{"vus43", (Il2CppMethodPointer)__N2M_vus43},
	{"vus44", (Il2CppMethodPointer)__N2M_vus44},
	{"vus45", (Il2CppMethodPointer)__N2M_vus45},
	{"vus47", (Il2CppMethodPointer)__N2M_vus47},
	{"vus479", (Il2CppMethodPointer)__N2M_vus479},
	{"vus48", (Il2CppMethodPointer)__N2M_vus48},
	{"vus480", (Il2CppMethodPointer)__N2M_vus480},
	{"vus482", (Il2CppMethodPointer)__N2M_vus482},
	{"vus51", (Il2CppMethodPointer)__N2M_vus51},
	{"vus513", (Il2CppMethodPointer)__N2M_vus513},
	{"vus52", (Il2CppMethodPointer)__N2M_vus52},
	{"vus521", (Il2CppMethodPointer)__N2M_vus521},
	{"vus522", (Il2CppMethodPointer)__N2M_vus522},
	{"vus522u", (Il2CppMethodPointer)__N2M_vus522u},
	{"vus53", (Il2CppMethodPointer)__N2M_vus53},
	{"vus54", (Il2CppMethodPointer)__N2M_vus54},
	{"vus55", (Il2CppMethodPointer)__N2M_vus55},
	{"vus57", (Il2CppMethodPointer)__N2M_vus57},
	{"vus58", (Il2CppMethodPointer)__N2M_vus58},
	{"vus59", (Il2CppMethodPointer)__N2M_vus59},
	{"vus6", (Il2CppMethodPointer)__N2M_vus6},
	{"vus61", (Il2CppMethodPointer)__N2M_vus61},
	{"vus62", (Il2CppMethodPointer)__N2M_vus62},
	{"vus63", (Il2CppMethodPointer)__N2M_vus63},
	{"vus65", (Il2CppMethodPointer)__N2M_vus65},
	{"vus66", (Il2CppMethodPointer)__N2M_vus66},
	{"vus68", (Il2CppMethodPointer)__N2M_vus68},
	{"vus6u", (Il2CppMethodPointer)__N2M_vus6u},
	{"vus763u", (Il2CppMethodPointer)__N2M_vus763u},
	{"vus763uu", (Il2CppMethodPointer)__N2M_vus763uu},
	{"vus77", (Il2CppMethodPointer)__N2M_vus77},
	{"vus78", (Il2CppMethodPointer)__N2M_vus78},
	{"vus79", (Il2CppMethodPointer)__N2M_vus79},
	{"vus81", (Il2CppMethodPointer)__N2M_vus81},
	{"vus85", (Il2CppMethodPointer)__N2M_vus85},
	{"vus85i4", (Il2CppMethodPointer)__N2M_vus85i4},
	{"vus85s24", (Il2CppMethodPointer)__N2M_vus85s24},
	{"vus85s273", (Il2CppMethodPointer)__N2M_vus85s273},
	{"vus85s85", (Il2CppMethodPointer)__N2M_vus85s85},
	{"vutypedbyrefu", (Il2CppMethodPointer)__N2M_vutypedbyrefu},
	{"vuu", (Il2CppMethodPointer)__N2M_vuu},
	{"vuu1", (Il2CppMethodPointer)__N2M_vuu1},
	{"vuu1i4u", (Il2CppMethodPointer)__N2M_vuu1i4u},
	{"vuu1s484", (Il2CppMethodPointer)__N2M_vuu1s484},
	{"vuu1u", (Il2CppMethodPointer)__N2M_vuu1u},
	{"vuu1u1i4", (Il2CppMethodPointer)__N2M_vuu1u1i4},
	{"vuu1uu", (Il2CppMethodPointer)__N2M_vuu1uu},
	{"vuu2", (Il2CppMethodPointer)__N2M_vuu2},
	{"vuu4", (Il2CppMethodPointer)__N2M_vuu4},
	{"vuu8", (Il2CppMethodPointer)__N2M_vuu8},
	{"vuui4", (Il2CppMethodPointer)__N2M_vuui4},
	{"vuui4i4", (Il2CppMethodPointer)__N2M_vuui4i4},
	{"vuui4i4u", (Il2CppMethodPointer)__N2M_vuui4i4u},
	{"vuui4i4uuuu1uu1i4i4", (Il2CppMethodPointer)__N2M_vuui4i4uuuu1uu1i4i4},
	{"vuui4s182", (Il2CppMethodPointer)__N2M_vuui4s182},
	{"vuui4u", (Il2CppMethodPointer)__N2M_vuui4u},
	{"vuui4uu", (Il2CppMethodPointer)__N2M_vuui4uu},
	{"vuui8", (Il2CppMethodPointer)__N2M_vuui8},
	{"vuui8i8u", (Il2CppMethodPointer)__N2M_vuui8i8u},
	{"vuui8u", (Il2CppMethodPointer)__N2M_vuui8u},
	{"vuui8uu", (Il2CppMethodPointer)__N2M_vuui8uu},
	{"vuuiii4i4u", (Il2CppMethodPointer)__N2M_vuuiii4i4u},
	{"vuuiiui4", (Il2CppMethodPointer)__N2M_vuuiiui4},
	{"vuur4", (Il2CppMethodPointer)__N2M_vuur4},
	{"vuur4r4", (Il2CppMethodPointer)__N2M_vuur4r4},
	{"vuur4u", (Il2CppMethodPointer)__N2M_vuur4u},
	{"vuur8", (Il2CppMethodPointer)__N2M_vuur8},
	{"vuus24", (Il2CppMethodPointer)__N2M_vuus24},
	{"vuus39u1", (Il2CppMethodPointer)__N2M_vuus39u1},
	{"vuus41", (Il2CppMethodPointer)__N2M_vuus41},
	{"vuus42", (Il2CppMethodPointer)__N2M_vuus42},
	{"vuus43", (Il2CppMethodPointer)__N2M_vuus43},
	{"vuus520i4", (Il2CppMethodPointer)__N2M_vuus520i4},
	{"vuus520i4s182", (Il2CppMethodPointer)__N2M_vuus520i4s182},
	{"vuus6", (Il2CppMethodPointer)__N2M_vuus6},
	{"vuuu", (Il2CppMethodPointer)__N2M_vuuu},
	{"vuuu1", (Il2CppMethodPointer)__N2M_vuuu1},
	{"vuuu1i4u", (Il2CppMethodPointer)__N2M_vuuu1i4u},
	{"vuuu1r4", (Il2CppMethodPointer)__N2M_vuuu1r4},
	{"vuuu1s484", (Il2CppMethodPointer)__N2M_vuuu1s484},
	{"vuuu1u", (Il2CppMethodPointer)__N2M_vuuu1u},
	{"vuuu1u1", (Il2CppMethodPointer)__N2M_vuuu1u1},
	{"vuuu1uu", (Il2CppMethodPointer)__N2M_vuuu1uu},
	{"vuuu4", (Il2CppMethodPointer)__N2M_vuuu4},
	{"vuuui2i4", (Il2CppMethodPointer)__N2M_vuuui2i4},
	{"vuuui4", (Il2CppMethodPointer)__N2M_vuuui4},
	{"vuuui4i4u", (Il2CppMethodPointer)__N2M_vuuui4i4u},
	{"vuuui4u", (Il2CppMethodPointer)__N2M_vuuui4u},
	{"vuuui4uu", (Il2CppMethodPointer)__N2M_vuuui4uu},
	{"vuuui8uu", (Il2CppMethodPointer)__N2M_vuuui8uu},
	{"vuuur4", (Il2CppMethodPointer)__N2M_vuuur4},
	{"vuuur4u", (Il2CppMethodPointer)__N2M_vuuur4u},
	{"vuuus39u1", (Il2CppMethodPointer)__N2M_vuuus39u1},
	{"vuuus42", (Il2CppMethodPointer)__N2M_vuuus42},
	{"vuuuu", (Il2CppMethodPointer)__N2M_vuuuu},
	{"vuuuu1", (Il2CppMethodPointer)__N2M_vuuuu1},
	{"vuuuuu", (Il2CppMethodPointer)__N2M_vuuuuu},
	{"vuuuuu1", (Il2CppMethodPointer)__N2M_vuuuuu1},
	{"vuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuu},
	{"vuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuu},
	{"vuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuu},
	{"vuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuu},
	{"vuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuu},
	{"vuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuu},
	{"vuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuuuuuu},
	{"vuuuuuuuuuuuuuuuuu", (Il2CppMethodPointer)__N2M_vuuuuuuuuuuuuuuuuu},
	{nullptr, nullptr},
};

static int8_t __N2M_AdjustorThunk_i1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_AdjustorThunk_i2u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int16_t __N2M_AdjustorThunk_i2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ui8i8(uintptr_t __arg0, int64_t __arg1, int64_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us0s0(uintptr_t __arg0, __struct_0__ __arg1, __struct_0__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_0__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us100(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_100__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us101(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_101__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us102(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_102__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us103(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_103__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us104(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_104__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us105(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_105__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us106(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us107(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_107__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us108(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us109(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_109__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us111(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_111__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us114(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_114__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us173(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_173__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us1s1(uintptr_t __arg0, __struct_1__ __arg1, __struct_1__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_1__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us201(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_201__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us21s21(uintptr_t __arg0, __struct_21__ __arg1, __struct_21__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_21__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us28s28(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us30(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_30__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us34s34(uintptr_t __arg0, __struct_34__ __arg1, __struct_34__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us40s40(uintptr_t __arg0, __struct_40__ __arg1, __struct_40__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_40__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us42s42(uintptr_t __arg0, __struct_42__ __arg1, __struct_42__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us43s43(uintptr_t __arg0, __struct_43__ __arg1, __struct_43__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_43__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us51s51(uintptr_t __arg0, __struct_51__ __arg1, __struct_51__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_51__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us62s62(uintptr_t __arg0, __struct_62__ __arg1, __struct_62__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_62__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us63s63(uintptr_t __arg0, __struct_63__ __arg1, __struct_63__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_63__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us65s65(uintptr_t __arg0, __struct_65__ __arg1, __struct_65__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_65__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us66s66(uintptr_t __arg0, __struct_66__ __arg1, __struct_66__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_66__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_66__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us68s68(uintptr_t __arg0, __struct_68__ __arg1, __struct_68__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_68__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us77s77(uintptr_t __arg0, __struct_77__ __arg1, __struct_77__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_77__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us78s78(uintptr_t __arg0, __struct_78__ __arg1, __struct_78__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_78__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us81s81(uintptr_t __arg0, __struct_81__ __arg1, __struct_81__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_81__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_81__*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us83(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_83__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us84(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_84__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us90(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_90__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us97(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_97__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us98(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_98__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4us99(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_99__*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uu8u8(uintptr_t __arg0, uint64_t __arg1, uint64_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uint64_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4i4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4i4ui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, int32_t __arg5, int32_t __arg6, int32_t __arg7, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __ARG_OFFSET_7__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;
	constexpr int __ARG_SIZE_7__ = (sizeof(__arg7) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_7__ + __ARG_SIZE_7__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;
	*(int32_t*)(args + __ARG_OFFSET_7__) = __arg7;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4ui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uui4ui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4i4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4u1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4u1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuu1u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int32_t __N2M_AdjustorThunk_i4uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    int32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_AdjustorThunk_i8u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static int64_t __N2M_AdjustorThunk_i8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    int64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_AdjustorThunk_iui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static intptr_t __N2M_AdjustorThunk_iuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    intptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_AdjustorThunk_r4u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_AdjustorThunk_r4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static float __N2M_AdjustorThunk_r4uur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    float ret; Interpreter::Execute(method, args, &ret); return ret;
}


static double __N2M_AdjustorThunk_r8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    double ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_AdjustorThunk_s0u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_0__ __N2M_AdjustorThunk_s0uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_0__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_115__ __N2M_AdjustorThunk_s115us115(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_115__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_115__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_1__ __N2M_AdjustorThunk_s1u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_1__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_21__ __N2M_AdjustorThunk_s21u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_21__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_21__ __N2M_AdjustorThunk_s21ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_21__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_24__ __N2M_AdjustorThunk_s24u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_24__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_24__ __N2M_AdjustorThunk_s24ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_24__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_28__ __N2M_AdjustorThunk_s28u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_28__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_30__ __N2M_AdjustorThunk_s30uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_30__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_34__ __N2M_AdjustorThunk_s34u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_34__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_34__ __N2M_AdjustorThunk_s34ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_34__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_3__ __N2M_AdjustorThunk_s3us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_3__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_40__ __N2M_AdjustorThunk_s40u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_40__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_40__ __N2M_AdjustorThunk_s40us321(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_321__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_40__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_43__ __N2M_AdjustorThunk_s43u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_43__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_51__ __N2M_AdjustorThunk_s51u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_51__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_55__ __N2M_AdjustorThunk_s55u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_55__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_62__ __N2M_AdjustorThunk_s62u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_62__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_63__ __N2M_AdjustorThunk_s63u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_63__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_65__ __N2M_AdjustorThunk_s65u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_65__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_68__ __N2M_AdjustorThunk_s68u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_68__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_77__ __N2M_AdjustorThunk_s77u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_77__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_78__ __N2M_AdjustorThunk_s78u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_78__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_79__ __N2M_AdjustorThunk_s79ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_79__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_82__ __N2M_AdjustorThunk_s82uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    __struct_82__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_83__ __N2M_AdjustorThunk_s83uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_83__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_85__ __N2M_AdjustorThunk_s85u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_85__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_90__ __N2M_AdjustorThunk_s90us761(uintptr_t __arg0, __struct_761__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_761__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_90__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_AdjustorThunk_s94u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_AdjustorThunk_s94us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static __struct_94__ __N2M_AdjustorThunk_s94uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    __struct_94__ ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui1(uintptr_t __arg0, int8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1ur8(uintptr_t __arg0, double __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(double*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us100(uintptr_t __arg0, __struct_100__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_100__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us101(uintptr_t __arg0, __struct_101__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_101__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us102(uintptr_t __arg0, __struct_102__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_102__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us103(uintptr_t __arg0, __struct_103__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_103__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us104(uintptr_t __arg0, __struct_104__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_104__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us105(uintptr_t __arg0, __struct_105__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_105__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us106(uintptr_t __arg0, __struct_106__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_106__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us107(uintptr_t __arg0, __struct_107__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_107__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us108(uintptr_t __arg0, __struct_108__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_108__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us109(uintptr_t __arg0, __struct_109__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_109__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us110(uintptr_t __arg0, __struct_110__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_110__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us111(uintptr_t __arg0, __struct_111__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_111__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us114(uintptr_t __arg0, __struct_114__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_114__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us115(uintptr_t __arg0, __struct_115__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_115__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us116(uintptr_t __arg0, __struct_116__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_116__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us117(uintptr_t __arg0, __struct_117__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_117__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us118(uintptr_t __arg0, __struct_118__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_118__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us119(uintptr_t __arg0, __struct_119__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_119__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us120(uintptr_t __arg0, __struct_120__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_120__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us121(uintptr_t __arg0, __struct_121__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_121__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us122(uintptr_t __arg0, __struct_122__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_122__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us123(uintptr_t __arg0, __struct_123__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_123__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us124(uintptr_t __arg0, __struct_124__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_124__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us125(uintptr_t __arg0, __struct_125__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_125__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us126(uintptr_t __arg0, __struct_126__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_126__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us127(uintptr_t __arg0, __struct_127__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_127__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us128(uintptr_t __arg0, __struct_128__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_128__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us129(uintptr_t __arg0, __struct_129__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_129__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us130(uintptr_t __arg0, __struct_130__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_130__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us131(uintptr_t __arg0, __struct_131__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_131__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us132(uintptr_t __arg0, __struct_132__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_132__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us133(uintptr_t __arg0, __struct_133__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_133__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us134(uintptr_t __arg0, __struct_134__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_134__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us135(uintptr_t __arg0, __struct_135__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_135__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us136(uintptr_t __arg0, __struct_136__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_136__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us137(uintptr_t __arg0, __struct_137__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_137__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us138(uintptr_t __arg0, __struct_138__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_138__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us139(uintptr_t __arg0, __struct_139__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_139__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us140(uintptr_t __arg0, __struct_140__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_140__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us141(uintptr_t __arg0, __struct_141__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_141__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us142(uintptr_t __arg0, __struct_142__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_142__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us143(uintptr_t __arg0, __struct_143__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_143__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us144(uintptr_t __arg0, __struct_144__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_144__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us146(uintptr_t __arg0, __struct_146__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_146__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us147(uintptr_t __arg0, __struct_147__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_147__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us148(uintptr_t __arg0, __struct_148__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_148__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us149(uintptr_t __arg0, __struct_149__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_149__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us150(uintptr_t __arg0, __struct_150__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_150__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us151(uintptr_t __arg0, __struct_151__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_151__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us152(uintptr_t __arg0, __struct_152__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_152__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us153(uintptr_t __arg0, __struct_153__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_153__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us154(uintptr_t __arg0, __struct_154__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_154__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us155(uintptr_t __arg0, __struct_155__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_155__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us156(uintptr_t __arg0, __struct_156__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_156__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us157(uintptr_t __arg0, __struct_157__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_157__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us158(uintptr_t __arg0, __struct_158__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_158__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us159(uintptr_t __arg0, __struct_159__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_159__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us161(uintptr_t __arg0, __struct_161__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_161__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us162(uintptr_t __arg0, __struct_162__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_162__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us163(uintptr_t __arg0, __struct_163__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_163__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us165(uintptr_t __arg0, __struct_165__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_165__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us166(uintptr_t __arg0, __struct_166__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_166__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us167(uintptr_t __arg0, __struct_167__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_167__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us169(uintptr_t __arg0, __struct_169__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_169__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us170(uintptr_t __arg0, __struct_170__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_170__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us171(uintptr_t __arg0, __struct_171__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_171__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us172(uintptr_t __arg0, __struct_172__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_172__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us173(uintptr_t __arg0, __struct_173__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_173__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us174(uintptr_t __arg0, __struct_174__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_174__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us175(uintptr_t __arg0, __struct_175__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_175__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us176(uintptr_t __arg0, __struct_176__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_176__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us177(uintptr_t __arg0, __struct_177__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_177__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us178(uintptr_t __arg0, __struct_178__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_178__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us179(uintptr_t __arg0, __struct_179__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_179__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us180(uintptr_t __arg0, __struct_180__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_180__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us181(uintptr_t __arg0, __struct_181__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_181__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us182(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us193(uintptr_t __arg0, __struct_193__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_193__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us201(uintptr_t __arg0, __struct_201__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_201__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us202(uintptr_t __arg0, __struct_202__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_202__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us205(uintptr_t __arg0, __struct_205__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_205__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us213(uintptr_t __arg0, __struct_213__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_213__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us216(uintptr_t __arg0, __struct_216__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_216__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us217(uintptr_t __arg0, __struct_217__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_217__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us218(uintptr_t __arg0, __struct_218__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_218__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us226(uintptr_t __arg0, __struct_226__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_226__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us229(uintptr_t __arg0, __struct_229__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_229__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us230(uintptr_t __arg0, __struct_230__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_230__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us231(uintptr_t __arg0, __struct_231__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_231__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us28s28(uintptr_t __arg0, __struct_28__ __arg1, __struct_28__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_28__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us30(uintptr_t __arg0, __struct_30__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_30__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us31us31u(uintptr_t __arg0, __struct_31__ __arg1, uintptr_t __arg2, __struct_31__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_31__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_31__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us35s35(uintptr_t __arg0, __struct_35__ __arg1, __struct_35__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_35__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us35ui4(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us36(uintptr_t __arg0, __struct_36__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us36s36(uintptr_t __arg0, __struct_36__ __arg1, __struct_36__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_36__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_36__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us38(uintptr_t __arg0, __struct_38__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us38s38(uintptr_t __arg0, __struct_38__ __arg1, __struct_38__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_38__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_38__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us39(uintptr_t __arg0, __struct_39__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_39__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us51(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us510(uintptr_t __arg0, __struct_510__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_510__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us57(uintptr_t __arg0, __struct_57__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_57__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us6(uintptr_t __arg0, __struct_6__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us62(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us65(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us6s6(uintptr_t __arg0, __struct_6__ __arg1, __struct_6__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_6__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_6__*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us763(uintptr_t __arg0, __struct_763__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_763__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us83(uintptr_t __arg0, __struct_83__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_83__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us84(uintptr_t __arg0, __struct_84__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_84__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us85(uintptr_t __arg0, __struct_85__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_85__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us86(uintptr_t __arg0, __struct_86__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_86__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us87(uintptr_t __arg0, __struct_87__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_87__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us88(uintptr_t __arg0, __struct_88__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_88__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us90(uintptr_t __arg0, __struct_90__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_90__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us92(uintptr_t __arg0, __struct_92__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_92__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us93(uintptr_t __arg0, __struct_93__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_93__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us94(uintptr_t __arg0, __struct_94__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_94__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us95(uintptr_t __arg0, __struct_95__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_95__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us97(uintptr_t __arg0, __struct_97__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_97__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us98(uintptr_t __arg0, __struct_98__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_98__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1us99(uintptr_t __arg0, __struct_99__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_99__*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu1u1(uintptr_t __arg0, uint8_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu2(uintptr_t __arg0, uint16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu4(uintptr_t __arg0, uint32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uu8(uintptr_t __arg0, uint64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uint64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uui4i4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uur4i4r4i4u(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu1i4r4u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuu1u1r4u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, float __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuui4i4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuuui4i4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, int32_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint8_t __N2M_AdjustorThunk_u1uuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uint8_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_AdjustorThunk_u2u(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint16_t __N2M_AdjustorThunk_u2uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint16_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint32_t __N2M_AdjustorThunk_u4uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint32_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uint64_t __N2M_AdjustorThunk_u8uu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uint64_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uu(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui2ui4i4(uintptr_t __arg0, int16_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4i4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uui4r4i4(uintptr_t __arg0, int32_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uur4i4(uintptr_t __arg0, float __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uus321(uintptr_t __arg0, __struct_321__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_321__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uus42(uintptr_t __arg0, __struct_42__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_42__*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuu1i4(uintptr_t __arg0, uint8_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuui4i4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuui4r4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuui4r4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuur4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuus42u(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1i4i4i4(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, int32_t __arg3, int32_t __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1u(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuui4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuui4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuui4r4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuui4r4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, float __arg4, int32_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(float*)(args + __ARG_OFFSET_4__) = __arg4;
	*(int32_t*)(args + __ARG_OFFSET_5__) = __arg5;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuur4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuur4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuur4i4r4i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, float __arg3, int32_t __arg4, float __arg5, int32_t __arg6, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(float*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(float*)(args + __ARG_OFFSET_5__) = __arg5;
	*(int32_t*)(args + __ARG_OFFSET_6__) = __arg6;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuus42u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_42__*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static uintptr_t __N2M_AdjustorThunk_uuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    uintptr_t ret; Interpreter::Execute(method, args, &ret); return ret;
}


static void __N2M_AdjustorThunk_vu(uintptr_t __arg0, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui(uintptr_t __arg0, intptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(intptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui2(uintptr_t __arg0, int16_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4(uintptr_t __arg0, int32_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4i(uintptr_t __arg0, int32_t __arg1, intptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(intptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4i4(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4i4i4i4u(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, int32_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4i4u(uintptr_t __arg0, int32_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4r4(uintptr_t __arg0, int32_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s24(uintptr_t __arg0, int32_t __arg1, __struct_24__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_24__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s34(uintptr_t __arg0, int32_t __arg1, __struct_34__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_34__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s514(uintptr_t __arg0, int32_t __arg1, __struct_514__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_514__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4s79(uintptr_t __arg0, int32_t __arg1, __struct_79__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_79__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4u1(uintptr_t __arg0, int32_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uui4(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uui4u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, int32_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uuu(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uuu1u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui4uuu1u1u(uintptr_t __arg0, int32_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, uint8_t __arg5, uintptr_t __arg6, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __ARG_OFFSET_6__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;
	constexpr int __ARG_SIZE_6__ = (sizeof(__arg6) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_6__ + __ARG_SIZE_6__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int32_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;
	args[__ARG_OFFSET_5__].u64 = __arg5;
	*(uintptr_t*)(args + __ARG_OFFSET_6__) = __arg6;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vui8(uintptr_t __arg0, int64_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(int64_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vur4(uintptr_t __arg0, float __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vur4r4(uintptr_t __arg0, float __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(float*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus0(uintptr_t __arg0, __struct_0__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_0__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus1(uintptr_t __arg0, __struct_1__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_1__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus182(uintptr_t __arg0, __struct_182__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus182s518(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_518__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus182s518u(uintptr_t __arg0, __struct_182__ __arg1, __struct_518__ __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_518__*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus182uu(uintptr_t __arg0, __struct_182__ __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_182__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus21(uintptr_t __arg0, __struct_21__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_21__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus24(uintptr_t __arg0, __struct_24__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_24__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus26(uintptr_t __arg0, __struct_26__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_26__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus27(uintptr_t __arg0, __struct_27__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_27__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus28(uintptr_t __arg0, __struct_28__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_28__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus34(uintptr_t __arg0, __struct_34__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_34__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus35(uintptr_t __arg0, __struct_35__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus35ui4(uintptr_t __arg0, __struct_35__ __arg1, uintptr_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_35__*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus40(uintptr_t __arg0, __struct_40__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_40__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus43(uintptr_t __arg0, __struct_43__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_43__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus51(uintptr_t __arg0, __struct_51__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_51__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus62(uintptr_t __arg0, __struct_62__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_62__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus63(uintptr_t __arg0, __struct_63__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_63__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus65(uintptr_t __arg0, __struct_65__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_65__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus68(uintptr_t __arg0, __struct_68__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_68__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus77(uintptr_t __arg0, __struct_77__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_77__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus78(uintptr_t __arg0, __struct_78__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_78__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vus79(uintptr_t __arg0, __struct_79__ __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(__struct_79__*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu(uintptr_t __arg0, uintptr_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu1(uintptr_t __arg0, uint8_t __arg1, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuu1u(uintptr_t __arg0, uint8_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	args[__ARG_OFFSET_1__].u64 = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui4i4(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, int32_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui4u(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui4uu(uintptr_t __arg0, uintptr_t __arg1, int32_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int32_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui8i8u(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, int64_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int64_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuui8u(uintptr_t __arg0, uintptr_t __arg1, int64_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(int64_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuur4(uintptr_t __arg0, uintptr_t __arg1, float __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(float*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuus42(uintptr_t __arg0, uintptr_t __arg1, __struct_42__ __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(__struct_42__*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuu1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuu1u1(uintptr_t __arg0, uintptr_t __arg1, uint8_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	args[__ARG_OFFSET_2__].u64 = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuui2i4(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int16_t __arg3, int32_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;
	*(int32_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuui4u(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuui4uu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, int32_t __arg3, uintptr_t __arg4, uintptr_t __arg5, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __ARG_OFFSET_5__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;
	constexpr int __ARG_SIZE_5__ = (sizeof(__arg5) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_5__ + __ARG_SIZE_5__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(int32_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;
	*(uintptr_t*)(args + __ARG_OFFSET_5__) = __arg5;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuus42(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, __struct_42__ __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(__struct_42__*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uint8_t __arg3, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	args[__ARG_OFFSET_3__].u64 = __arg3;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuuuu(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uintptr_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	*(uintptr_t*)(args + __ARG_OFFSET_4__) = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


static void __N2M_AdjustorThunk_vuuuuu1(uintptr_t __arg0, uintptr_t __arg1, uintptr_t __arg2, uintptr_t __arg3, uint8_t __arg4, const MethodInfo* method)
{
    __arg0 += sizeof(Il2CppObject);
	constexpr int __ARG_OFFSET_0__ = 0;
	constexpr int __ARG_SIZE_0__ = (sizeof(__arg0) + 7)/8;
	constexpr int __ARG_OFFSET_1__ = __ARG_OFFSET_0__ + __ARG_SIZE_0__;
	constexpr int __ARG_SIZE_1__ = (sizeof(__arg1) + 7)/8;
	constexpr int __ARG_OFFSET_2__ = __ARG_OFFSET_1__ + __ARG_SIZE_1__;
	constexpr int __ARG_SIZE_2__ = (sizeof(__arg2) + 7)/8;
	constexpr int __ARG_OFFSET_3__ = __ARG_OFFSET_2__ + __ARG_SIZE_2__;
	constexpr int __ARG_SIZE_3__ = (sizeof(__arg3) + 7)/8;
	constexpr int __ARG_OFFSET_4__ = __ARG_OFFSET_3__ + __ARG_SIZE_3__;
	constexpr int __ARG_SIZE_4__ = (sizeof(__arg4) + 7)/8;
	constexpr int __TOTAL_ARG_SIZE__ = __ARG_OFFSET_4__ + __ARG_SIZE_4__;

    StackObject args[__TOTAL_ARG_SIZE__];
	*(uintptr_t*)(args + __ARG_OFFSET_0__) = __arg0;
	*(uintptr_t*)(args + __ARG_OFFSET_1__) = __arg1;
	*(uintptr_t*)(args + __ARG_OFFSET_2__) = __arg2;
	*(uintptr_t*)(args + __ARG_OFFSET_3__) = __arg3;
	args[__ARG_OFFSET_4__].u64 = __arg4;

    Interpreter::Execute(method, args, nullptr);
}


const NativeAdjustThunkMethodInfo hybridclr::interpreter::g_adjustThunkStub[] = 
{

	{"i1uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i1uu},
	{"i2u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i2u},
	{"i2uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i2uu},
	{"i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4u},
	{"i4ui1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui1},
	{"i4ui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui2},
	{"i4ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui4},
	{"i4ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui4i4},
	{"i4ui8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui8},
	{"i4ui8i8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ui8i8},
	{"i4ur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ur4},
	{"i4ur8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4ur8},
	{"i4us0s0", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us0s0},
	{"i4us100", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us100},
	{"i4us101", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us101},
	{"i4us102", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us102},
	{"i4us103", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us103},
	{"i4us104", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us104},
	{"i4us105", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us105},
	{"i4us106", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us106},
	{"i4us107", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us107},
	{"i4us108", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us108},
	{"i4us109", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us109},
	{"i4us110", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us110},
	{"i4us111", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us111},
	{"i4us114", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us114},
	{"i4us173", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us173},
	{"i4us1s1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us1s1},
	{"i4us201", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us201},
	{"i4us21s21", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us21s21},
	{"i4us24", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us24},
	{"i4us28", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us28},
	{"i4us28s28", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us28s28},
	{"i4us30", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us30},
	{"i4us34", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us34},
	{"i4us34s34", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us34s34},
	{"i4us35", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us35},
	{"i4us36", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us36},
	{"i4us38", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us38},
	{"i4us40s40", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us40s40},
	{"i4us42s42", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us42s42},
	{"i4us43", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us43},
	{"i4us43s43", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us43s43},
	{"i4us51s51", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us51s51},
	{"i4us6", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us6},
	{"i4us62s62", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us62s62},
	{"i4us63s63", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us63s63},
	{"i4us65s65", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us65s65},
	{"i4us66s66", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us66s66},
	{"i4us68s68", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us68s68},
	{"i4us77", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us77},
	{"i4us77s77", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us77s77},
	{"i4us78", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us78},
	{"i4us78s78", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us78s78},
	{"i4us79", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us79},
	{"i4us81s81", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us81s81},
	{"i4us83", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us83},
	{"i4us84", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us84},
	{"i4us90", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us90},
	{"i4us94", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us94},
	{"i4us97", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us97},
	{"i4us98", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us98},
	{"i4us99", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4us99},
	{"i4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu},
	{"i4uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu1},
	{"i4uu2", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu2},
	{"i4uu4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu4},
	{"i4uu8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu8},
	{"i4uu8u8", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uu8u8},
	{"i4uui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4},
	{"i4uui4i4ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4i4ui4},
	{"i4uui4i4ui4i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4i4ui4i4i4},
	{"i4uui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4u},
	{"i4uui4ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4ui4},
	{"i4uui4ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uui4ui4i4},
	{"i4uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuu},
	{"i4uuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4},
	{"i4uuui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4i4},
	{"i4uuui4i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4i4i4},
	{"i4uuui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4u},
	{"i4uuui4u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4u1},
	{"i4uuui4u1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4u1u},
	{"i4uuui4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuui4uu},
	{"i4uuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuu},
	{"i4uuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuu1},
	{"i4uuuu1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuu1u},
	{"i4uuuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuui4},
	{"i4uuuui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuui4u},
	{"i4uuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i4uuuuu},
	{"i8u", (Il2CppMethodPointer)__N2M_AdjustorThunk_i8u},
	{"i8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_i8uu},
	{"iui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_iui4},
	{"iuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_iuu},
	{"r4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_r4u},
	{"r4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_r4uu},
	{"r4uur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_r4uur4},
	{"r8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_r8uu},
	{"s0u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s0u},
	{"s0uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s0uu},
	{"s115us115", (Il2CppMethodPointer)__N2M_AdjustorThunk_s115us115},
	{"s1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s1u},
	{"s21u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s21u},
	{"s21ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s21ui4},
	{"s24u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s24u},
	{"s24ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s24ui4},
	{"s28u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s28u},
	{"s30uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s30uu},
	{"s34u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s34u},
	{"s34ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s34ui4},
	{"s3us34", (Il2CppMethodPointer)__N2M_AdjustorThunk_s3us34},
	{"s40u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s40u},
	{"s40us321", (Il2CppMethodPointer)__N2M_AdjustorThunk_s40us321},
	{"s43u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s43u},
	{"s51u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s51u},
	{"s55u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s55u},
	{"s62u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s62u},
	{"s63u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s63u},
	{"s65u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s65u},
	{"s68u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s68u},
	{"s77u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s77u},
	{"s78u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s78u},
	{"s79ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_s79ui4},
	{"s82uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_s82uu1},
	{"s83uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s83uu},
	{"s85u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s85u},
	{"s90us761", (Il2CppMethodPointer)__N2M_AdjustorThunk_s90us761},
	{"s94u", (Il2CppMethodPointer)__N2M_AdjustorThunk_s94u},
	{"s94us94", (Il2CppMethodPointer)__N2M_AdjustorThunk_s94us94},
	{"s94uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_s94uu},
	{"u1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1u},
	{"u1ui", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui},
	{"u1ui1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui1},
	{"u1ui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui2},
	{"u1ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4},
	{"u1ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4i4},
	{"u1ui4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4r4},
	{"u1ui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui4u},
	{"u1ui8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ui8},
	{"u1ur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ur4},
	{"u1ur8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1ur8},
	{"u1us0", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us0},
	{"u1us1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us1},
	{"u1us100", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us100},
	{"u1us101", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us101},
	{"u1us102", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us102},
	{"u1us103", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us103},
	{"u1us104", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us104},
	{"u1us105", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us105},
	{"u1us106", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us106},
	{"u1us107", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us107},
	{"u1us108", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us108},
	{"u1us109", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us109},
	{"u1us110", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us110},
	{"u1us111", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us111},
	{"u1us114", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us114},
	{"u1us115", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us115},
	{"u1us116", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us116},
	{"u1us117", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us117},
	{"u1us118", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us118},
	{"u1us119", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us119},
	{"u1us120", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us120},
	{"u1us121", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us121},
	{"u1us122", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us122},
	{"u1us123", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us123},
	{"u1us124", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us124},
	{"u1us125", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us125},
	{"u1us126", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us126},
	{"u1us127", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us127},
	{"u1us128", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us128},
	{"u1us129", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us129},
	{"u1us130", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us130},
	{"u1us131", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us131},
	{"u1us132", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us132},
	{"u1us133", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us133},
	{"u1us134", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us134},
	{"u1us135", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us135},
	{"u1us136", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us136},
	{"u1us137", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us137},
	{"u1us138", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us138},
	{"u1us139", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us139},
	{"u1us140", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us140},
	{"u1us141", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us141},
	{"u1us142", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us142},
	{"u1us143", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us143},
	{"u1us144", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us144},
	{"u1us146", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us146},
	{"u1us147", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us147},
	{"u1us148", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us148},
	{"u1us149", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us149},
	{"u1us150", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us150},
	{"u1us151", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us151},
	{"u1us152", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us152},
	{"u1us153", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us153},
	{"u1us154", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us154},
	{"u1us155", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us155},
	{"u1us156", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us156},
	{"u1us157", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us157},
	{"u1us158", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us158},
	{"u1us159", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us159},
	{"u1us161", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us161},
	{"u1us162", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us162},
	{"u1us163", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us163},
	{"u1us165", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us165},
	{"u1us166", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us166},
	{"u1us167", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us167},
	{"u1us169", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us169},
	{"u1us170", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us170},
	{"u1us171", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us171},
	{"u1us172", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us172},
	{"u1us173", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us173},
	{"u1us174", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us174},
	{"u1us175", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us175},
	{"u1us176", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us176},
	{"u1us177", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us177},
	{"u1us178", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us178},
	{"u1us179", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us179},
	{"u1us180", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us180},
	{"u1us181", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us181},
	{"u1us182", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us182},
	{"u1us193", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us193},
	{"u1us201", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us201},
	{"u1us202", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us202},
	{"u1us205", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us205},
	{"u1us21", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us21},
	{"u1us213", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us213},
	{"u1us216", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us216},
	{"u1us217", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us217},
	{"u1us218", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us218},
	{"u1us226", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us226},
	{"u1us229", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us229},
	{"u1us230", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us230},
	{"u1us231", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us231},
	{"u1us24", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us24},
	{"u1us26", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us26},
	{"u1us27", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us27},
	{"u1us28", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us28},
	{"u1us28s28", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us28s28},
	{"u1us30", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us30},
	{"u1us31us31u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us31us31u},
	{"u1us34", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us34},
	{"u1us35", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us35},
	{"u1us35s35", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us35s35},
	{"u1us35ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us35ui4},
	{"u1us36", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us36},
	{"u1us36s36", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us36s36},
	{"u1us38", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us38},
	{"u1us38s38", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us38s38},
	{"u1us39", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us39},
	{"u1us40", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us40},
	{"u1us43", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us43},
	{"u1us51", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us51},
	{"u1us510", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us510},
	{"u1us57", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us57},
	{"u1us6", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us6},
	{"u1us62", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us62},
	{"u1us63", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us63},
	{"u1us65", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us65},
	{"u1us68", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us68},
	{"u1us6s6", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us6s6},
	{"u1us763", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us763},
	{"u1us77", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us77},
	{"u1us78", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us78},
	{"u1us79", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us79},
	{"u1us83", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us83},
	{"u1us84", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us84},
	{"u1us85", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us85},
	{"u1us86", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us86},
	{"u1us87", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us87},
	{"u1us88", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us88},
	{"u1us90", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us90},
	{"u1us92", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us92},
	{"u1us93", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us93},
	{"u1us94", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us94},
	{"u1us95", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us95},
	{"u1us97", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us97},
	{"u1us98", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us98},
	{"u1us99", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1us99},
	{"u1uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu},
	{"u1uu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu1},
	{"u1uu1u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu1u1},
	{"u1uu2", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu2},
	{"u1uu4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu4},
	{"u1uu8", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uu8},
	{"u1uui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uui4i4},
	{"u1uui4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uui4i4u},
	{"u1uui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uui4u},
	{"u1uur4i4r4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uur4i4r4i4u},
	{"u1uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu},
	{"u1uuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu1},
	{"u1uuu1i4r4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu1i4r4u},
	{"u1uuu1u1r4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuu1u1r4u},
	{"u1uuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuui4},
	{"u1uuui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuui4i4},
	{"u1uuui4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuui4i4u},
	{"u1uuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuuu},
	{"u1uuuui4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuuui4i4u},
	{"u1uuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuuuu},
	{"u1uuuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u1uuuuuu},
	{"u2u", (Il2CppMethodPointer)__N2M_AdjustorThunk_u2u},
	{"u2uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u2uu},
	{"u4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u4uu},
	{"u8uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_u8uu},
	{"uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uu},
	{"uui", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui},
	{"uui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui2},
	{"uui2ui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui2ui4i4},
	{"uui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4},
	{"uui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4i4},
	{"uui4i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4i4i4},
	{"uui4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4r4},
	{"uui4r4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uui4r4i4},
	{"uur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uur4},
	{"uur4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uur4i4},
	{"uus321", (Il2CppMethodPointer)__N2M_AdjustorThunk_uus321},
	{"uus42", (Il2CppMethodPointer)__N2M_AdjustorThunk_uus42},
	{"uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuu},
	{"uuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuu1},
	{"uuu1i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuu1i4},
	{"uuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuui4},
	{"uuui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuui4i4},
	{"uuui4i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuui4i4i4},
	{"uuui4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuui4r4},
	{"uuui4r4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuui4r4i4},
	{"uuur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuur4},
	{"uuur4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuur4i4},
	{"uuur4i4r4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuur4i4r4i4},
	{"uuus42u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuus42u},
	{"uuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu},
	{"uuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1},
	{"uuuu1i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1i4i4},
	{"uuuu1i4i4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1i4i4i4},
	{"uuuu1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1u},
	{"uuuu1u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuu1u1},
	{"uuuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuui4},
	{"uuuui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuui4i4},
	{"uuuui4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuui4r4},
	{"uuuui4r4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuui4r4i4},
	{"uuuur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuur4},
	{"uuuur4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuur4i4},
	{"uuuur4i4r4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuur4i4r4i4},
	{"uuuus42u", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuus42u},
	{"uuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuu},
	{"uuuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_uuuuuu},
	{"vu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vu},
	{"vui", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui},
	{"vui2", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui2},
	{"vui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4},
	{"vui4i", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4i},
	{"vui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4i4},
	{"vui4i4i4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4i4i4i4u},
	{"vui4i4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4i4u},
	{"vui4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4r4},
	{"vui4s24", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s24},
	{"vui4s34", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s34},
	{"vui4s514", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s514},
	{"vui4s79", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4s79},
	{"vui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4u},
	{"vui4u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4u1},
	{"vui4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uu},
	{"vui4uui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uui4},
	{"vui4uui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uui4u},
	{"vui4uuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uuu},
	{"vui4uuu1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uuu1u},
	{"vui4uuu1u1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui4uuu1u1u},
	{"vui8", (Il2CppMethodPointer)__N2M_AdjustorThunk_vui8},
	{"vur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vur4},
	{"vur4r4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vur4r4},
	{"vus0", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus0},
	{"vus1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus1},
	{"vus182", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus182},
	{"vus182s518", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus182s518},
	{"vus182s518u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus182s518u},
	{"vus182uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus182uu},
	{"vus21", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus21},
	{"vus24", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus24},
	{"vus26", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus26},
	{"vus27", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus27},
	{"vus28", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus28},
	{"vus34", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus34},
	{"vus35", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus35},
	{"vus35ui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus35ui4},
	{"vus40", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus40},
	{"vus43", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus43},
	{"vus51", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus51},
	{"vus62", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus62},
	{"vus63", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus63},
	{"vus65", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus65},
	{"vus68", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus68},
	{"vus77", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus77},
	{"vus78", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus78},
	{"vus79", (Il2CppMethodPointer)__N2M_AdjustorThunk_vus79},
	{"vuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu},
	{"vuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu1},
	{"vuu1u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuu1u},
	{"vuui4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui4},
	{"vuui4i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui4i4},
	{"vuui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui4u},
	{"vuui4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui4uu},
	{"vuui8i8u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui8i8u},
	{"vuui8u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuui8u},
	{"vuur4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuur4},
	{"vuus42", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuus42},
	{"vuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuu},
	{"vuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuu1},
	{"vuuu1u1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuu1u1},
	{"vuuui2i4", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuui2i4},
	{"vuuui4u", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuui4u},
	{"vuuui4uu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuui4uu},
	{"vuuus42", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuus42},
	{"vuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuuu},
	{"vuuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuuu1},
	{"vuuuuu", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuuuu},
	{"vuuuuu1", (Il2CppMethodPointer)__N2M_AdjustorThunk_vuuuuu1},
	{nullptr, nullptr},
};

const ReversePInvokeMethodData hybridclr::interpreter::g_reversePInvokeMethodStub[]
{


    {nullptr, nullptr},
};


const Managed2NativeFunctionPointerCallData hybridclr::interpreter::g_managed2NativeFunctionPointerCallStub[]
{


    {nullptr, nullptr},
};


//!!!}}CODE
